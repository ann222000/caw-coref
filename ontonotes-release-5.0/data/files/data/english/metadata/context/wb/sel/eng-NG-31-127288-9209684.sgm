<DOC>
<DOCID> eng-NG-31-127288-9209684 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-09-23T13:41:00 </DATETIME>
<BODY>
<HEADLINE>
gmp 4.2.2 LGPL V3 issues and other minor tidbits
</HEADLINE>
<TEXT>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T13:41:00 </POSTDATE>
Hi,

Michael Abshoff pointed out to me that GMP 4.2.2 has been released!
Very exciting.  The
release notes list exactly one new feature:

From http://gmplib.org/gmp4.2.html

New features of GMP 4.2.2
* License is now LGPL version 3.
Bugs:
...

The obvious question is whether the _current_ version of Sage can
include or even
link to GMP 4.2.2 or any future version of GMP.  The answer is *NO*.  For more,
see below.

The Sage project as an overall project is -- and must be -- released
under GPL v2 only,
at least right now.  I don't know when or if this will change.  It is
not within my power.
Only time will tell.

<QUOTE PREVIOUSPOST="
&gt; http://gplv3.fsf.org/dd3-faq
&gt; which has a nice matrix showing what is legal to combine.
">

This table very clearly says that a GPL v2 project cannot link in an
LGPL v3 library.
We will thus not be upgrading the Sage GMP package to 4.2.2 right now.

Thoughts?

William
</POST>
<POST>
<POSTER> David Harvey &lt;dmhar...@math.harvard.edu&gt; </POSTER>
<POSTDATE> 2007-09-23T13:54:00 </POSTDATE>
On Sep 23, 2007, at 1:41 PM, William Stein wrote:

<QUOTE PREVIOUSPOST="
&gt;&gt; http://gplv3.fsf.org/dd3-faq
&gt;&gt; which has a nice matrix showing what is legal to combine.

&gt; This table very clearly says that a GPL v2 project cannot link in an
&gt; LGPL v3 library.
&gt; We will thus not be upgrading the Sage GMP package to 4.2.2 right now.

&gt; Thoughts?
">

I wonder whether the GMP folks would consider releasing under both
LGPL v2 and v3.

david
</POST>
<POST>
<POSTER> &quot;David Joyner&quot; &lt;wdjoy...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T13:56:00 </POSTDATE>
On 9/23/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hi,

&gt; Michael Abshoff pointed out to me that GMP 4.2.2 has been released!
&gt; Very exciting.  The
&gt; release notes list exactly one new feature:

&gt; From http://gmplib.org/gmp4.2.html

&gt; New features of GMP 4.2.2
&gt;     * License is now LGPL version 3.
&gt; Bugs:
&gt;     ...

&gt; The obvious question is whether the _current_ version of Sage can
&gt; include or even
&gt; link to GMP 4.2.2 or any future version of GMP.  The answer is *NO*.  For more,
&gt; see below.

&gt; The Sage project as an overall project is -- and must be -- released
&gt; under GPL v2 only,
&gt; at least right now.  I don't know when or if this will change.  It is
&gt; not within my power.
&gt; Only time will tell.

&gt; &gt; http://gplv3.fsf.org/dd3-faq
&gt; &gt; which has a nice matrix showing what is legal to combine.

&gt; This table very clearly says that a GPL v2 project cannot link in an
&gt; LGPL v3 library.
&gt; We will thus not be upgrading the Sage GMP package to 4.2.2 right now.

&gt; Thoughts?
">

The obvious suggestion is to ask them to license under
&quot;LGPLv2 or greater&quot;. It can't hurt to ask.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; William
">
</POST>
<POST>
<POSTER> &quot;Mike Hansen&quot; &lt;mhan...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T13:59:00 </POSTDATE>
It seems odd that closed source software could use GMP under the
LGPLv3, but that a GPLv2 project could not.  How tightly integrated is
the GMP stuff?  Aren't we pretty much just using it as a library?

--Mike

On 9/23/07, David Joyner &lt;wdjoy ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

&gt; &gt; Hi,

&gt; &gt; Michael Abshoff pointed out to me that GMP 4.2.2 has been released!
&gt; &gt; Very exciting.  The
&gt; &gt; release notes list exactly one new feature:

&gt; &gt; From http://gmplib.org/gmp4.2.html

&gt; &gt; New features of GMP 4.2.2
&gt; &gt;     * License is now LGPL version 3.
&gt; &gt; Bugs:
&gt; &gt;     ...

&gt; &gt; The obvious question is whether the _current_ version of Sage can
&gt; &gt; include or even
&gt; &gt; link to GMP 4.2.2 or any future version of GMP.  The answer is *NO*.  For more,
&gt; &gt; see below.

&gt; &gt; The Sage project as an overall project is -- and must be -- released
&gt; &gt; under GPL v2 only,
&gt; &gt; at least right now.  I don't know when or if this will change.  It is
&gt; &gt; not within my power.
&gt; &gt; Only time will tell.

&gt; &gt; &gt; http://gplv3.fsf.org/dd3-faq
&gt; &gt; &gt; which has a nice matrix showing what is legal to combine.

&gt; &gt; This table very clearly says that a GPL v2 project cannot link in an
&gt; &gt; LGPL v3 library.
&gt; &gt; We will thus not be upgrading the Sage GMP package to 4.2.2 right now.

&gt; &gt; Thoughts?

&gt; The obvious suggestion is to ask them to license under
&gt; &quot;LGPLv2 or greater&quot;. It can't hurt to ask.

&gt; &gt; William
">
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T14:34:00 </POSTDATE>
On 9/23/07, Mike Hansen &lt;mhan ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; It seems odd that closed source software could use GMP under the
&gt; LGPLv3, but that a GPLv2 project could not.  How tightly integrated is
&gt; the GMP stuff?  Aren't we pretty much just using it as a library?
">

We are just using it as a library.  The problem isn't LGPLv3,
but GPLv2 itself! But please see
http://gplv3.fsf.org/dd3-faq
where it is made crystal clear that in fact a GPLv2 project can't
even use an LGPLv3 library in library-only mode.

There is a discussion here:
http://lwn.net/Articles/241065/

In short, Magma and Maple can use GMP under LGPLv3, but
Sage can't, because Sage is GPLv2, and the GPLv2 specifically
disallows linking against libraries that are more restrictive
(except things like the C library).

-- William
</POST>
<POST>
<POSTER> &quot;Jason Martin&quot; &lt;jason.worth.mar...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T15:15:00 </POSTDATE>
Some thoughts:

1.  I've been doing some performance comparisons on GMP 4.2.2 with the
patches that Sage uses, and I haven't seen any remarkable differences
between 4.2.2 and 4.2.1.  Granted, I have only tested Linux on
AMD64/Intel64 and OS X on Intel64.  Perhaps some other platforms have
a greater difference.  (By the way, the GPL patches for gcd/xgcd seem
to work just fine.)

It is nice that it will compile under OS X now without patching... and
it even builds dynamic libraries.  It is somewhat slow without
patches, though.

2.  I suspect that the GMP developers were very deliberate in their
license choice and will not release it under &quot;LGPLv2 or greater&quot;.
Much of the v2/3 license debate hinges on DRM issues: public key
crypto is a big part of most DRM systems, and GMP is a natural choice
for implementing public key crypto... but it can't hurt to ask.

3.  How much of Sage is under &quot;v2 Only&quot;?  That's the only portion that
should cause problems isn't it?

--jason

On 9/23/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, Mike Hansen &lt;mhan ... @gmail.com&gt; wrote:
&gt; &gt; It seems odd that closed source software could use GMP under the
&gt; &gt; LGPLv3, but that a GPLv2 project could not.  How tightly integrated is
&gt; &gt; the GMP stuff?  Aren't we pretty much just using it as a library?

&gt; We are just using it as a library.  The problem isn't LGPLv3,
&gt; but GPLv2 itself! But please see
&gt; http://gplv3.fsf.org/dd3-faq
&gt; where it is made crystal clear that in fact a GPLv2 project can't
&gt; even use an LGPLv3 library in library-only mode.

&gt; There is a discussion here:
&gt; http://lwn.net/Articles/241065/

&gt; In short, Magma and Maple can use GMP under LGPLv3, but
&gt; Sage can't, because Sage is GPLv2, and the GPLv2 specifically
&gt; disallows linking against libraries that are more restrictive
&gt; (except things like the C library).

&gt;  -- William
">
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T15:46:00 </POSTDATE>
On 9/23/07, Jason Martin &lt;jason.worth.mar ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Some thoughts:

&gt; 1.  I've been doing some performance comparisons on GMP 4.2.2 with the
&gt; patches that Sage uses, and I haven't seen any remarkable differences
&gt; between 4.2.2 and 4.2.1.  Granted, I have only tested Linux on
&gt; AMD64/Intel64 and OS X on Intel64.  Perhaps some other platforms have
&gt; a greater difference.  (By the way, the GPL patches for gcd/xgcd seem
&gt; to work just fine.)
">

Is GMP-4.2.1 with the gcd/xgcd patch vastly faster than GMP-4.2.2 at
what the gcd patch is for (i.e., gcd's of million digit numbers)?

<QUOTE PREVIOUSPOST="
&gt; It is nice that it will compile under OS X now without patching... and
&gt; it even builds dynamic libraries.  It is somewhat slow without
&gt; patches, though.
">

Do you mean that GMP-4.2.2 is somewhat slow without patches?
Or that GMP-4.2.1 is?  Or?

<QUOTE PREVIOUSPOST="
&gt; 2.  I suspect that the GMP developers were very deliberate in their
&gt; license choice and will not release it under &quot;LGPLv2 or greater&quot;.
&gt; Much of the v2/3 license debate hinges on DRM issues: public key
&gt; crypto is a big part of most DRM systems, and GMP is a natural choice
&gt; for implementing public key crypto... but it can't hurt to ask.
">

I think GMP is not going to change to LGPLv2 or greater; switching
from LGPLv2 or greater to LGPLv3 is the one and only new &quot;big feature&quot;
of GMP 4.2.2 (see the release notes).

Also -- much more importantly, the copyright owners of GMP
are the Free Software Foundation -- not &quot;the GMP developers&quot;,
and their agenda is very clear.

<QUOTE PREVIOUSPOST="
&gt; 3.  How much of Sage is under &quot;v2 Only&quot;?  That's the only portion that
&gt; should cause problems isn't it?
">

Good question.  First, how do we determine if something is v2 only?
From the GPL itself: &quot;Each version is given a distinguishing version
number.  If the Program specifies a version number of this License
which applies to it and &quot;any later version&quot;, you have the option of
following the terms and conditions either of that version or of any
later version published by the Free Software Foundation.  If the
Program does not specify a version number of this License, you
may choose any version ever published by the Free Software
Foundation.&quot;

So the only problem would be software that specifically says &quot;GPL
version *2*&quot;.  For the Sage source code itself, we always just write

#  Distributed under the terms of the GNU General Public License (GPL)

except in the following files:

interfaces/matlab.py:
matrix/matrix.pyx:
matrix/matrix0.pyx:
matrix/matrix1.pyx:
matrix/matrix2.pyx:
matrix/strassen.pyx:

I hold the copyright on all those files above.

However, in the COPYING file for Sage itself, I wrote: &quot;All original
SAGE code is distributed  under the terms of the GNU General Public
License *Version 2*.&quot;

Just out of curiosity, would anybody be angry if I were to remove the
words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
Evidently nobody (but me) has ever actually submitted any code to Sage where
they explicitly put &quot;Version 2&quot; in their copyright statement.
I'm asking this mainly to see what our options are.

Regarding Sage dependencies:

* PARI -- they include the GPLv2 in the distribution, but the source code
files all just say: &quot;you can redistribute it and/or modify it under the
terms of the GNU General Public License&quot;, i.e., nothing about V2.
So evidently PARI isn't a problem.

* Singular -- same as SAGE -- all source files say &quot;GPL version 2 or
latter&quot; or don't
mention anything about versions.   The top-level copying file does very
explicitly say &quot;( version 2 of the License );&quot;

* clisp -- a cursory glance and it seems the same as Sage and Singular --
the top level COPYRIGHT file explicitly says GPL v2, but when you look
at sources, if they have a copyright statement it (here I didn't check
everything) says &quot;v2 or later&quot;.

I'm not checking anymore right now, since perhaps the above is enough
of a sample to spark some useful discussion.

William
</POST>
<POST>
<POSTER> &quot;David Joyner&quot; &lt;wdjoy...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T15:54:00 </POSTDATE>
On 9/23/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, Jason Martin &lt;jason.worth.mar ... @gmail.com&gt; wrote:
&gt; &gt; Some thoughts:

&gt; &gt; 1.  I've been doing some performance comparisons on GMP 4.2.2 with the
&gt; &gt; patches that Sage uses, and I haven't seen any remarkable differences
&gt; &gt; between 4.2.2 and 4.2.1.  Granted, I have only tested Linux on
&gt; &gt; AMD64/Intel64 and OS X on Intel64.  Perhaps some other platforms have
&gt; &gt; a greater difference.  (By the way, the GPL patches for gcd/xgcd seem
&gt; &gt; to work just fine.)

&gt; Is GMP-4.2.1 with the gcd/xgcd patch vastly faster than GMP-4.2.2 at
&gt; what the gcd patch is for (i.e., gcd's of million digit numbers)?

&gt; &gt; It is nice that it will compile under OS X now without patching... and
&gt; &gt; it even builds dynamic libraries.  It is somewhat slow without
&gt; &gt; patches, though.

&gt; Do you mean that GMP-4.2.2 is somewhat slow without patches?
&gt; Or that GMP-4.2.1 is?  Or?

&gt; &gt; 2.  I suspect that the GMP developers were very deliberate in their
&gt; &gt; license choice and will not release it under &quot;LGPLv2 or greater&quot;.
&gt; &gt; Much of the v2/3 license debate hinges on DRM issues: public key
&gt; &gt; crypto is a big part of most DRM systems, and GMP is a natural choice
&gt; &gt; for implementing public key crypto... but it can't hurt to ask.

&gt; I think GMP is not going to change to LGPLv2 or greater; switching
&gt; from LGPLv2 or greater to LGPLv3 is the one and only new &quot;big feature&quot;
&gt; of GMP 4.2.2 (see the release notes).

&gt; Also -- much more importantly, the copyright owners of GMP
&gt; are the Free Software Foundation -- not &quot;the GMP developers&quot;,
&gt; and their agenda is very clear.

&gt; &gt; 3.  How much of Sage is under &quot;v2 Only&quot;?  That's the only portion that
&gt; &gt; should cause problems isn't it?

&gt; Good question.  First, how do we determine if something is v2 only?
&gt; From the GPL itself: &quot;Each version is given a distinguishing version
&gt; number.  If the Program specifies a version number of this License
&gt; which applies to it and &quot;any later version&quot;, you have the option of
&gt; following the terms and conditions either of that version or of any
&gt; later version published by the Free Software Foundation.  If the
&gt; Program does not specify a version number of this License, you
&gt; may choose any version ever published by the Free Software
&gt; Foundation.&quot;

&gt; So the only problem would be software that specifically says &quot;GPL
&gt; version *2*&quot;.  For the Sage source code itself, we always just write

&gt; #  Distributed under the terms of the GNU General Public License (GPL)

&gt; except in the following files:

&gt; interfaces/matlab.py:
&gt; matrix/matrix.pyx:
&gt; matrix/matrix0.pyx:
&gt; matrix/matrix1.pyx:
&gt; matrix/matrix2.pyx:
&gt; matrix/strassen.pyx:

&gt; I hold the copyright on all those files above.

&gt; However, in the COPYING file for Sage itself, I wrote: &quot;All original
&gt; SAGE code is distributed  under the terms of the GNU General Public
&gt; License *Version 2*.&quot;

&gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
">

I would prefer that you say &quot;GPLv2 or later (at your preference)&quot;
instead of just removing it.

GAP is GPLv2. I will ask gap-dev about changing that to &quot;GPLv2 or
later (at your preference)&quot; .

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; Evidently nobody (but me) has ever actually submitted any code to Sage where
&gt; they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; I'm asking this mainly to see what our options are.

&gt; Regarding Sage dependencies:

&gt;   * PARI -- they include the GPLv2 in the distribution, but the source code
&gt;      files all just say: &quot;you can redistribute it and/or modify it under the
&gt;      terms of the GNU General Public License&quot;, i.e., nothing about V2.
&gt;      So evidently PARI isn't a problem.

&gt;  * Singular -- same as SAGE -- all source files say &quot;GPL version 2 or
&gt; latter&quot; or don't
&gt;     mention anything about versions.   The top-level copying file does very
&gt;     explicitly say &quot;( version 2 of the License );&quot;

&gt;   * clisp -- a cursory glance and it seems the same as Sage and Singular --
&gt;     the top level COPYRIGHT file explicitly says GPL v2, but when you look
&gt;     at sources, if they have a copyright statement it (here I didn't check
&gt;     everything) says &quot;v2 or later&quot;.

&gt; I'm not checking anymore right now, since perhaps the above is enough
&gt; of a sample to spark some useful discussion.

&gt; William
">
</POST>
<POST>
<POSTER> &quot;David Joyner&quot; &lt;wdjoy...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T16:04:00 </POSTDATE>
On 9/23/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, Jason Martin &lt;jason.worth.mar ... @gmail.com&gt; wrote:
&gt; &gt; Some thoughts:

&gt; &gt; 1.  I've been doing some performance comparisons on GMP 4.2.2 with the
&gt; &gt; patches that Sage uses, and I haven't seen any remarkable differences
&gt; &gt; between 4.2.2 and 4.2.1.  Granted, I have only tested Linux on
&gt; &gt; AMD64/Intel64 and OS X on Intel64.  Perhaps some other platforms have
&gt; &gt; a greater difference.  (By the way, the GPL patches for gcd/xgcd seem
&gt; &gt; to work just fine.)

&gt; Is GMP-4.2.1 with the gcd/xgcd patch vastly faster than GMP-4.2.2 at
&gt; what the gcd patch is for (i.e., gcd's of million digit numbers)?

&gt; &gt; It is nice that it will compile under OS X now without patching... and
&gt; &gt; it even builds dynamic libraries.  It is somewhat slow without
&gt; &gt; patches, though.

&gt; Do you mean that GMP-4.2.2 is somewhat slow without patches?
&gt; Or that GMP-4.2.1 is?  Or?

&gt; &gt; 2.  I suspect that the GMP developers were very deliberate in their
&gt; &gt; license choice and will not release it under &quot;LGPLv2 or greater&quot;.
&gt; &gt; Much of the v2/3 license debate hinges on DRM issues: public key
&gt; &gt; crypto is a big part of most DRM systems, and GMP is a natural choice
&gt; &gt; for implementing public key crypto... but it can't hurt to ask.

&gt; I think GMP is not going to change to LGPLv2 or greater; switching
&gt; from LGPLv2 or greater to LGPLv3 is the one and only new &quot;big feature&quot;
&gt; of GMP 4.2.2 (see the release notes).

&gt; Also -- much more importantly, the copyright owners of GMP
&gt; are the Free Software Foundation -- not &quot;the GMP developers&quot;,
&gt; and their agenda is very clear.

&gt; &gt; 3.  How much of Sage is under &quot;v2 Only&quot;?  That's the only portion that
&gt; &gt; should cause problems isn't it?

&gt; Good question.  First, how do we determine if something is v2 only?
&gt; From the GPL itself: &quot;Each version is given a distinguishing version
&gt; number.  If the Program specifies a version number of this License
&gt; which applies to it and &quot;any later version&quot;, you have the option of
&gt; following the terms and conditions either of that version or of any
&gt; later version published by the Free Software Foundation.  If the
&gt; Program does not specify a version number of this License, you
&gt; may choose any version ever published by the Free Software
&gt; Foundation.&quot;

&gt; So the only problem would be software that specifically says &quot;GPL
&gt; version *2*&quot;.  For the Sage source code itself, we always just write

&gt; #  Distributed under the terms of the GNU General Public License (GPL)

&gt; except in the following files:

&gt; interfaces/matlab.py:
&gt; matrix/matrix.pyx:
&gt; matrix/matrix0.pyx:
&gt; matrix/matrix1.pyx:
&gt; matrix/matrix2.pyx:
&gt; matrix/strassen.pyx:

&gt; I hold the copyright on all those files above.

&gt; However, in the COPYING file for Sage itself, I wrote: &quot;All original
&gt; SAGE code is distributed  under the terms of the GNU General Public
&gt; License *Version 2*.&quot;

&gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
&gt; Evidently nobody (but me) has ever actually submitted any code to Sage where
&gt; they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; I'm asking this mainly to see what our options are.
">

A legal question: If I write SAGE code (ie, Python code which requires
SAGE's data extra data structures), doesn't that force, by the nature
of the GPL,
my code to be GPL'd, whether it is included in SAGE or not?

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; Regarding Sage dependencies:

&gt;   * PARI -- they include the GPLv2 in the distribution, but the source code
&gt;      files all just say: &quot;you can redistribute it and/or modify it under the
&gt;      terms of the GNU General Public License&quot;, i.e., nothing about V2.
&gt;      So evidently PARI isn't a problem.

&gt;  * Singular -- same as SAGE -- all source files say &quot;GPL version 2 or
&gt; latter&quot; or don't
&gt;     mention anything about versions.   The top-level copying file does very
&gt;     explicitly say &quot;( version 2 of the License );&quot;

&gt;   * clisp -- a cursory glance and it seems the same as Sage and Singular --
&gt;     the top level COPYRIGHT file explicitly says GPL v2, but when you look
&gt;     at sources, if they have a copyright statement it (here I didn't check
&gt;     everything) says &quot;v2 or later&quot;.

&gt; I'm not checking anymore right now, since perhaps the above is enough
&gt; of a sample to spark some useful discussion.

&gt; William
">
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T16:11:00 </POSTDATE>
On 9/23/07, David Joyner &lt;wdjoy ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; So the only problem would be software that specifically says &quot;GPL
&gt; &gt; version *2*&quot;.  For the Sage source code itself, we always just write

&gt; &gt; #  Distributed under the terms of the GNU General Public License (GPL)

&gt; &gt; except in the following files:

&gt; &gt; interfaces/matlab.py:
&gt; &gt; matrix/matrix.pyx:
&gt; &gt; matrix/matrix0.pyx:
&gt; &gt; matrix/matrix1.pyx:
&gt; &gt; matrix/matrix2.pyx:
&gt; &gt; matrix/strassen.pyx:

&gt; &gt; I hold the copyright on all those files above.

&gt; &gt; However, in the COPYING file for Sage itself, I wrote: &quot;All original
&gt; &gt; SAGE code is distributed  under the terms of the GNU General Public
&gt; &gt; License *Version 2*.&quot;

&gt; &gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; &gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
&gt; &gt; Evidently nobody (but me) has ever actually submitted any code to Sage where
&gt; &gt; they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; &gt; I'm asking this mainly to see what our options are.
">

I just want to emphasize again, that I'm *not* just suggesting throwing
in the towel and switching to GPLv2 or later.  I just want to understand
what the options are.    In particular, if we make Sage all GPLv2 or later,
and start including LGPLv3-only GMP, then I think that means all the
subtle DRM-related restrictions will apply to Sage.

<QUOTE PREVIOUSPOST="
&gt; A legal question: If I write SAGE code (ie, Python code which requires
&gt; SAGE's data extra data structures), doesn't that force, by the nature
&gt; of the GPL,
&gt; my code to be GPL'd, whether it is included in SAGE or not?
">

Definitely *not*.  If you write Sage *code*, that code can have absolutely
any license you want.    You could release it under BSD, under Microsoft
Shared Source, public domain, anything.  However, of course,
to run the program a user will have to obtain a copy of Sage.

If you write code that uses Sage, then decide to distribute that code
along with a complete copy of Sage, then the combined work would
have to be released under GPLv2.    But that's not what you
were asking.

Your question is very similar to: &quot;If I write a program against Java (say)
or Microsoft's .NET, does my program have to be --java license-- or
--microsoft license--?&quot;  The answer is definitely no.

William
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T16:18:00 </POSTDATE>
On 9/23/07, David Joyner &lt;wdjoy ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; GAP is GPLv2. I will ask gap-dev about changing that to &quot;GPLv2 or
&gt; later (at your preference)&quot; .
">

Fortunately this might not be necessary anymore.  See below.

I searched through the Gap distribution, and as far as I can tell
the only mention of the GPL anywhere in the entire thing is that
they include the file etc/GPL, which is a copy of the GPL license
(version 2).   No source files say anything about the GPL, nor
does the readme or anything else.

The GAP website ( http://www.gap-system.org/Download/copyright.html )
specifically says: &quot;GAP is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of the
License, or (at your option) any later version.&quot;    Thus it looks like
GAP is GPL v&gt;=2 already.

-- William
</POST>
<POST>
<POSTER> Jaap Spies &lt;j.sp...@hccnet.nl&gt; </POSTER>
<POSTDATE> 2007-09-23T16:08:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
William Stein wrote:

&gt; I think GMP is not going to change to LGPLv2 or greater; switching
&gt; from LGPLv2 or greater to LGPLv3 is the one and only new &quot;big feature&quot;
&gt; of GMP 4.2.2 (see the release notes).

&gt; Also -- much more importantly, the copyright owners of GMP
&gt; are the Free Software Foundation -- not &quot;the GMP developers&quot;,
&gt; and their agenda is very clear.
">

See: http://www.gnu.org/licenses/why-not-lgpl.html
Do I smell something?

<QUOTE PREVIOUSPOST="
&gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
&gt; Evidently nobody (but me) has ever actually submitted any code to Sage where
&gt; they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; I'm asking this mainly to see what our options are.
">

I join David Joyner: GPLv2 or later
This will resolve all issues for library usage.

Jaap
</POST>
<POST>
<POSTER> &quot;Joel B. Mohler&quot; &lt;j...@kiwistrawberry.us&gt; </POSTER>
<POSTDATE> 2007-09-23T19:55:00 </POSTDATE>
On Sunday 23 September 2007 15:46, William Stein wrote:

<QUOTE PREVIOUSPOST="
&gt; However, in the COPYING file for Sage itself, I wrote: &quot;All original
&gt; SAGE code is distributed  under the terms of the GNU General Public
&gt; License *Version 2*.&quot;

&gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
">

Well, I wouldn't say I'd be &quot;angry&quot;, but I dislike the GPLv3.  My principle
reason for disliking it is section 3.  I didn't read up on acticle 11 of
WIPO, but my understanding is that they are attempting to forbid writing of
DRM schemes with GPL'ed code.  I don't like where that goes.  When I release
code under the GPL I'm not concerned about what the users do with it -- I'm
only concerned that they release their code that builds on it.  I believe
this is two fundamentally different issues and I think that the FSF is
muddying the waters to mix them.

Now, I realize that people who feel strongly opposed to DRM may find my
distinction silly.  Actually, I feel rather strongly opposed to DRM myself
but I don't want to start enumerating all the things that I feel strongly
about that I don't want my code to be used for.

Anyhow, maybe I'm totally misunderstanding section 3.  Also I realize that
GPLv3 is probably the only realistic way forward since the FSF is the 800 lb
gorilla as far as open licenses are concerned.   I guess I would sum up my
feeling as being that I'm more strongly opposed to license proliferation than
I am against the DRM clause in GPLv3.

I very much do not like the blanket &quot;or later version&quot; scheme for dealing with
the GPL.  This, to me, gives the FSF a blank check for whatever in GPLv4, and
after seeing GPLv3, I trust them even less than I used to.

On Sunday 23 September 2007 15:46, William Stein wrote:

<QUOTE PREVIOUSPOST="
&gt; Evidently nobody (but me) has ever actually submitted any code to Sage
&gt; where they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; I'm asking this mainly to see what our options are.
">

I didn't make any requests, but that was because I already knew it was GPLv2
(which was what I wanted).

I'm not quite comfortable with your license analysis for PARI and Singular.
If they say GPLv2 somewhere prominent in their distribution I would take that
to apply to all the source and not view the individual source files
differently because they don't specify the version number (i.e. I believe
they intended to have each individual source file released under GPLv2, but
didn't think it was worth repeating).

--
Joel
</POST>
<POST>
<POSTER> Bill Hart &lt;goodwillh...@googlemail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T20:03:00 </POSTDATE>
What is the effective difference between releasing &quot;under the terms of
the GPLv2 or (at your option) any later version&quot; and releasing it
under GPLv3? Is it just this DRM business? Do we only care about that
on principle (i.e. we disagree with the FSF on this one) or is there
something in SAGE that we specifically do not want these restrictions
placed on for particular reasons?

Or is it specifically excluded to distribute software derived from
that with GPLv2 under GPLv3. But that would imply that GPLv3 does
grant the user additional rights that v2 does not, i.e. it would be a
*less* restrictive license at some point.

My concern is, what happens if they release GPLv4 and they put some
nuisance clause in that we specifically don't like, such as, you may
use this software to further the aims of the FSF in total world
domination and anihilation of its arch rival {insert name of favourite
evil empire here}, even at the expense of keeping your derived
propriety source code secret if that helps. Sure, the FSF is highly
unlikely to add something like that, but how can you license a product
against all future versions without knowing what additional rights
those versions of the license may grant the user!?

My suspicion is the FSF have done this to encourage the use of their
new license. Nothing more, nothing less. They are just strategising to
advance their own cause, leveraging their existing power.

Bill.

On 23 Sep, 21:08, Jaap Spies &lt;j.sp ... @hccnet.nl&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; William Stein wrote:

&gt; &gt; I think GMP is not going to change to LGPLv2 or greater; switching
&gt; &gt; from LGPLv2 or greater to LGPLv3 is the one and only new &quot;big feature&quot;
&gt; &gt; of GMP 4.2.2 (see the release notes).

&gt; &gt; Also -- much more importantly, the copyright owners of GMP
&gt; &gt; are the Free Software Foundation -- not &quot;the GMP developers&quot;,
&gt; &gt; and their agenda is very clear.

&gt; See: http://www.gnu.org/licenses/why-not-lgpl.html
&gt; Do I smell something?

&gt; &gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; &gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
&gt; &gt; Evidently nobody (but me) has ever actually submitted any code to Sage where
&gt; &gt; they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; &gt; I'm asking this mainly to see what our options are.

&gt; I join David Joyner: GPLv2 or later
&gt; This will resolve all issues for library usage.

&gt; Jaap
">
</POST>
<POST>
<POSTER> &quot;David Joyner&quot; &lt;wdjoy...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T20:26:00 </POSTDATE>
On 9/23/07, Joel B. Mohler &lt;j ... @kiwistrawberry.us&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Sunday 23 September 2007 15:46, William Stein wrote:
&gt; &gt; However, in the COPYING file for Sage itself, I wrote: &quot;All original
&gt; &gt; SAGE code is distributed  under the terms of the GNU General Public
&gt; &gt; License *Version 2*.&quot;

&gt; &gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; &gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?

&gt; Well, I wouldn't say I'd be &quot;angry&quot;, but I dislike the GPLv3.  My principle
&gt; reason for disliking it is section 3.  I didn't read up on acticle 11 of
&gt; WIPO, but my understanding is that they are attempting to forbid writing of
&gt; DRM schemes with GPL'ed code.  I don't like where that goes.  When I release
&gt; code under the GPL I'm not concerned about what the users do with it -- I'm
&gt; only concerned that they release their code that builds on it.  I believe
&gt; this is two fundamentally different issues and I think that the FSF is
&gt; muddying the waters to mix them.
">

The clam that GPLv3 forbids DRM schemes is called a &quot;myth&quot; by Ed Burnette
http://blogs.zdnet.com/Burnette/?p=354
I think early drafts of GPLv3 were more anti-DRm than the final draft.

<QUOTE PREVIOUSPOST="
&gt; Now, I realize that people who feel strongly opposed to DRM may find my
&gt; distinction silly.  Actually, I feel rather strongly opposed to DRM myself
&gt; but I don't want to start enumerating all the things that I feel strongly
&gt; about that I don't want my code to be used for.

&gt; Anyhow, maybe I'm totally misunderstanding section 3.  Also I realize that
&gt; GPLv3 is probably the only realistic way forward since the FSF is the 800 lb
&gt; gorilla as far as open licenses are concerned.   I guess I would sum up my
&gt; feeling as being that I'm more strongly opposed to license proliferation than
&gt; I am against the DRM clause in GPLv3.

&gt; I very much do not like the blanket &quot;or later version&quot; scheme for dealing with
&gt; the GPL.  This, to me, gives the FSF a blank check for whatever in GPLv4, and
&gt; after seeing GPLv3, I trust them even less than I used to.
">

Is &quot;GPLv2 or GPLv3 (your preference)&quot; better?

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; On Sunday 23 September 2007 15:46, William Stein wrote:
&gt; &gt; Evidently nobody (but me) has ever actually submitted any code to Sage
&gt; &gt; where they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; &gt; I'm asking this mainly to see what our options are.

&gt; I didn't make any requests, but that was because I already knew it was GPLv2
&gt; (which was what I wanted).

&gt; I'm not quite comfortable with your license analysis for PARI and Singular.
&gt; If they say GPLv2 somewhere prominent in their distribution I would take that
&gt; to apply to all the source and not view the individual source files
&gt; differently because they don't specify the version number (i.e. I believe
&gt; they intended to have each individual source file released under GPLv2, but
&gt; didn't think it was worth repeating).

&gt; --
&gt; Joel
">
</POST>
<POST>
<POSTER> &quot;David Joyner&quot; &lt;wdjoy...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T20:32:00 </POSTDATE>
On 9/23/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; What is the effective difference between releasing &quot;under the terms of
&gt; the GPLv2 or (at your option) any later version&quot; and releasing it
&gt; under GPLv3? Is it just this DRM business? Do we only care about that
">

GPLv2 and GPLv3 are actually incompatible. You might think
GPLvN should be compatible with GPLv(N-1) but that isnt the case here.
At the moment, I think SAGE cannot be released under GPLv3.

<QUOTE PREVIOUSPOST="
&gt; on principle (i.e. we disagree with the FSF on this one) or is there
&gt; something in SAGE that we specifically do not want these restrictions
&gt; placed on for particular reasons?

&gt; Or is it specifically excluded to distribute software derived from
&gt; that with GPLv2 under GPLv3. But that would imply that GPLv3 does
&gt; grant the user additional rights that v2 does not, i.e. it would be a
&gt; *less* restrictive license at some point.

&gt; My concern is, what happens if they release GPLv4 and they put some
&gt; nuisance clause in that we specifically don't like, such as, you may
&gt; use this software to further the aims of the FSF in total world
&gt; domination and anihilation of its arch rival {insert name of favourite
&gt; evil empire here}, even at the expense of keeping your derived
&gt; propriety source code secret if that helps. Sure, the FSF is highly
&gt; unlikely to add something like that, but how can you license a product
&gt; against all future versions without knowing what additional rights
&gt; those versions of the license may grant the user!?

&gt; My suspicion is the FSF have done this to encourage the use of their
&gt; new license. Nothing more, nothing less. They are just strategising to
&gt; advance their own cause, leveraging their existing power.
">

Agreed.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; Bill.

&gt; On 23 Sep, 21:08, Jaap Spies &lt;j.sp ... @hccnet.nl&gt; wrote:
&gt; &gt; William Stein wrote:

&gt; &gt; &gt; I think GMP is not going to change to LGPLv2 or greater; switching
&gt; &gt; &gt; from LGPLv2 or greater to LGPLv3 is the one and only new &quot;big feature&quot;
&gt; &gt; &gt; of GMP 4.2.2 (see the release notes).

&gt; &gt; &gt; Also -- much more importantly, the copyright owners of GMP
&gt; &gt; &gt; are the Free Software Foundation -- not &quot;the GMP developers&quot;,
&gt; &gt; &gt; and their agenda is very clear.

&gt; &gt; See: http://www.gnu.org/licenses/why-not-lgpl.html
&gt; &gt; Do I smell something?

&gt; &gt; &gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; &gt; &gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?
&gt; &gt; &gt; Evidently nobody (but me) has ever actually submitted any code to Sage where
&gt; &gt; &gt; they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; &gt; &gt; I'm asking this mainly to see what our options are.

&gt; &gt; I join David Joyner: GPLv2 or later
&gt; &gt; This will resolve all issues for library usage.

&gt; &gt; Jaap
">
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T20:41:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; GPLv2 and GPLv3 are actually incompatible. You might think
&gt; GPLvN should be compatible with GPLv(N-1) but that isnt the case here.
&gt; At the moment, I think SAGE cannot be released under GPLv3.
">

Ideally, the alternative to M* CASes should be released under more
permissive license, such as MIT or new BSD. But the current situation seems
to be far from ideal :(

Alec
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T21:41:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Ideally, the alternative to M* CASes should be released under more
&gt; permissive license, such as MIT or new BSD. But the current situation
&gt; seems
&gt; to be far from ideal :(
">

From other point of view, Python, for instance, has its own license. SAGE,
probably, could be licensed under its own license, too (including the
possibility of linking to both LGPL2 and LGPL3). Why not?

Alec
</POST>
<POST>
<POSTER> &quot;Joel B. Mohler&quot; &lt;j...@kiwistrawberry.us&gt; </POSTER>
<POSTDATE> 2007-09-23T21:47:00 </POSTDATE>
On Sunday 23 September 2007 20:26, David Joyner wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, Joel B. Mohler &lt;j ... @kiwistrawberry.us&gt; wrote:
&gt; &gt; Well, I wouldn't say I'd be &quot;angry&quot;, but I dislike the GPLv3.  My
&gt; &gt; principle reason for disliking it is section 3.  I didn't read up on
&gt; &gt; acticle 11 of WIPO, but my understanding is that they are attempting to
&gt; &gt; forbid writing of DRM schemes with GPL'ed code.  I don't like where that
&gt; &gt; goes.  When I release code under the GPL I'm not concerned about what the
&gt; &gt; users do with it -- I'm only concerned that they release their code that
&gt; &gt; builds on it.  I believe this is two fundamentally different issues and I
&gt; &gt; think that the FSF is muddying the waters to mix them.

&gt; The clam that GPLv3 forbids DRM schemes is called a &quot;myth&quot; by Ed Burnette
&gt; http://blogs.zdnet.com/Burnette/?p=354
&gt; I think early drafts of GPLv3 were more anti-DRm than the final draft.
">

I agree with his interpretation of the paragraph he quoted, but he didn't
quote the paragraph I was concerned about.  The first sentence of section 3
is what bothers me:  &quot;No covered work shall be deemed part of an effective
technological measure ...&quot;.  Maybe I need to read these WIPO documents before
I start spewing FUD.

And, yes, it is *much* improved over earlier versions of v3 ... they were out
of hand.

<QUOTE PREVIOUSPOST="
&gt; &gt; I very much do not like the blanket &quot;or later version&quot; scheme for dealing
&gt; &gt; with the GPL.  This, to me, gives the FSF a blank check for whatever in
&gt; &gt; GPLv4, and after seeing GPLv3, I trust them even less than I used to.

&gt; Is &quot;GPLv2 or GPLv3 (your preference)&quot; better?
">

Yes, I would consider that better, but it sort of seems like it punts on the
actual issue.  I guess I'm not really happy with any of the options so I
don't actually have an opinion.

--
Joel
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T21:54:00 </POSTDATE>
On 9/23/07, Joel B. Mohler &lt;j ... @kiwistrawberry.us&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Sunday 23 September 2007 15:46, William Stein wrote:
&gt; &gt; However, in the COPYING file for Sage itself, I wrote: &quot;All original
&gt; &gt; SAGE code is distributed  under the terms of the GNU General Public
&gt; &gt; License *Version 2*.&quot;

&gt; &gt; Just out of curiosity, would anybody be angry if I were to remove the
&gt; &gt; words &quot;*Version 2*&quot; from the above sentence in the COPYING file?

&gt; Well, I wouldn't say I'd be &quot;angry&quot;, but I dislike the GPLv3.  My principle
&gt; reason for disliking it is section 3.  I didn't read up on acticle 11 of
&gt; WIPO, but my understanding is that they are attempting to forbid writing of
&gt; DRM schemes with GPL'ed code.  I don't like where that goes.  When I release
&gt; code under the GPL I'm not concerned about what the users do with it -- I'm
&gt; only concerned that they release their code that builds on it.  I believe
&gt; this is two fundamentally different issues and I think that the FSF is
&gt; muddying the waters to mix them.
&gt; Now, I realize that people who feel strongly opposed to DRM may find my
&gt; distinction silly.  Actually, I feel rather strongly opposed to DRM myself
&gt; but I don't want to start enumerating all the things that I feel strongly
&gt; about that I don't want my code to be used for.
">

I agree -- this is basically off topic.   Also, GPLv3 went through many
revisions, which generated &quot;myths&quot; as David Joyner points out below.
Personally, I don't like the GPLv3 for one reason only: it is not
GPLv2 compatible, and I know that I do like GPLv2.

<QUOTE PREVIOUSPOST="
&gt; Anyhow, maybe I'm totally misunderstanding section 3.  Also I realize that
&gt; GPLv3 is probably the only realistic way forward since the FSF is the 800 lb
&gt; gorilla as far as open licenses are concerned.   I guess I would sum up my
&gt; feeling as being that I'm more strongly opposed to license proliferation than
&gt; I am against the DRM clause in GPLv3.

&gt; I very much do not like the blanket &quot;or later version&quot; scheme for dealing with
&gt; the GPL.  This, to me, gives the FSF a blank check for whatever in GPLv4, and
&gt; after seeing GPLv3, I trust them even less than I used to.
">

True.  And &quot;or later&quot; definitely allows them to not only add new
terms (GPLv3 is GPLv2 + more restrictions), but it allows them
to remove terms.

<QUOTE PREVIOUSPOST="
&gt; On Sunday 23 September 2007 15:46, William Stein wrote:
&gt; &gt; Evidently nobody (but me) has ever actually submitted any code to Sage
&gt; &gt; where they explicitly put &quot;Version 2&quot; in their copyright statement.
&gt; &gt; I'm asking this mainly to see what our options are.

&gt; I didn't make any requests, but that was because I already knew it was GPLv2
&gt; (which was what I wanted).
">

Yes, and it *is* GPLv2. Don't worry.

<QUOTE PREVIOUSPOST="
&gt; I'm not quite comfortable with your license analysis for PARI and Singular.
&gt; If they say GPLv2 somewhere prominent in their distribution I would take that
&gt; to apply to all the source and not view the individual source files
&gt; differently because they don't specify the version number (i.e. I believe
&gt; they intended to have each individual source file released under GPLv2, but
&gt; didn't think it was worth repeating).
">

Regarding PARI, I think Henri and Karim did the following:
(1) put &quot;this code is GPL'd&quot; in each file, and
(2) put the GPL v2 license file verbatim  -- the only one you could
possibly put -- in the top level of the source file.
(3) did *not* -- as far as I can tell -- mention GPL v2
explicitly anywhere else.
I.e., they did the minimum reasonable work to GPL a program,
so they could get back to interesting mathematics.   Also,
the section about their choice of GPL here
http://www.math.u-bordeaux.fr/~belabas/pari/doc/faq.html#GPL
says nothing about GPL v2.

It's very clear in the generic GPL license file included in PARI
that if the program itself does not specify a version number, then
any version of the license may be used.  As further evidence the
PARI startup banner says:

&quot;PARI/GP is free software, covered by the GNU General Public License,
and comes WITHOUT ANY WARRANTY WHATSOEVER.&quot;

So from a legal point of view, I think it is clear that PARI is GPL
version 2 or later.   This is surprising to me, since it's not at all
what I expected.  But it's true.  If you can see any problem with this
argument, let me know.

That said, since I know the PARI authors, we could just ask them for
clarification.

-- William
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T22:20:00 </POSTDATE>
On 9/23/07, Joel B. Mohler &lt;j ... @kiwistrawberry.us&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; The clam that GPLv3 forbids DRM schemes is called a &quot;myth&quot; by Ed Burnette
&gt; &gt; http://blogs.zdnet.com/Burnette/?p=354
&gt; &gt; I think early drafts of GPLv3 were more anti-DRm than the final draft.

&gt; I agree with his interpretation of the paragraph he quoted, but he didn't
&gt; quote the paragraph I was concerned about.  The first sentence of section 3
&gt; is what bothers me:  &quot;No covered work shall be deemed part of an effective
&gt; technological measure ...&quot;.  Maybe I need to read these WIPO documents before
&gt; I start spewing FUD.

&gt; And, yes, it is *much* improved over earlier versions of v3 ... they were out
&gt; of hand.

&gt; &gt; &gt; I very much do not like the blanket &quot;or later version&quot; scheme for dealing
&gt; &gt; &gt; with the GPL.  This, to me, gives the FSF a blank check for whatever in
&gt; &gt; &gt; GPLv4, and after seeing GPLv3, I trust them even less than I used to.

&gt; &gt; Is &quot;GPLv2 or GPLv3 (your preference)&quot; better?

&gt; Yes, I would consider that better, but it sort of seems like it punts on the
&gt; actual issue.  I guess I'm not really happy with any of the options so I
&gt; don't actually have an opinion.
">

The *only* options I can think of right now are:
(1) Stick with GPLv2 and *fork* every FSF project Sage depends on:
* GMP
* GSL
* GNUtls (openssl replacement)
Anything else?

(2) Change the Sage license to GPLv2 or later, and get clarification
about the same issue from the Singular developers.

More details:

(1) Make a stand and stick with GPLv2.  This will mean in the long
run that we will have to FORK, never ever again ship updated
versions of, or remove dependence on every FSF-owned project.
This is definitely possible, since the projects are currently very
mature:
* GSL -- they just released GSL v1.10 under GPLv3 only (sage
currently includes GSL v1.9),
* GMP -- they just released GMP v4.2.2 under GPLv3 only (sage
currently includes on GMP v4.2.1),
It appears that a huge number of FSF/GNU projects are having
new releases under GPLv3 *only* right now (not GPLv2 or later).
I.e., FSF is very aggressively pushing their license in a technical sense.

(2) We change the Sage license to GPLv2 or later, and change or
eliminate all components of Sage that are GPL v2 only.
As far as I can tell Singular is the only 3rd party component of
Sage that is in fact clearly GPL v2 only.   Please correct me if I'm
wrong about that.

----

I think both options are viable, since I suspect that the only projects
Sage uses that will switch to GPLv3 only are the FSF projects -- most
projects will just stick with &quot;GPLv2 or greater&quot;.  Option (1) means more
work for us, though GSL is pretty much *done* -- it hasn't changed
much in years, and likewise GMP hasn't had anything interesting
happen release-wise in nearly 2 years. (The most interesting GMP work has
been outside the GMP project.)

If you can think of a genuinely viable third option, or have strong
feelings about which of 1 or 2 is better, now is the time to speak
up.  I have put off this GPLv3 license discussion repeatedly during
the last year when it came up.  But now it can't be ignored anymore.
I greatly value everybody's feedback.

-- William
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T22:26:00 </POSTDATE>
On 9/23/07, Alec Mihailovs &lt;a ... @mihailovs.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; GPLv2 and GPLv3 are actually incompatible. You might think
&gt; &gt; GPLvN should be compatible with GPLv(N-1) but that isnt the case here.
&gt; &gt; At the moment, I think SAGE cannot be released under GPLv3.

&gt; Ideally, the alternative to M* CASes should be released under more
&gt; permissive license, such as MIT or new BSD. But the current situation seems
&gt; to be far from ideal :(
">

This is only perhaps ideal from the typical end user's point of view.
The GPL-style license is greatly preferred over the BSD/MIT as the
license for Sage by most Sage developers (this was discussed a lot
at Sage Days 2).   In fact, several of the top contributors to Sage have
explicitly said they would not contribute to Sage if it were not licensed
under the GPL. It's very important to these people, who put a massive
amount of their time into Sage, that the code the write not just be
copied into Mathematica/Maple/Magma, etc., and sold for profit,
improved, etc., with nothing given in return.

<QUOTE PREVIOUSPOST="
&gt; From other point of view, Python, for instance, has its own license. SAGE,
&gt; probably, could be licensed under its own license, too (including the
&gt; possibility of linking to both LGPL2 and LGPL3).
&gt; Why not?
">

That is not possible because Sage is derived from GPL'd programs,
hence it must be licensed under the GPL.   A condition of the GPL
is the programs derived from the GPL must be licensed under the GPL.
In fact, it is impossible to combine GPLv2 only and LGPLv3 only code
in they same project, under any license.

-- William
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T22:36:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; In fact, it is impossible to combine GPLv2 only and LGPLv3 only code
&gt; in they same project, under any license.
">

Well, one possibility is to have GPLv2 in the main distribution and LGPLv3
as an optional package.

Alec
</POST>
<POST>
<POSTER> &quot;Jason Martin&quot; &lt;jason.worth.mar...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T22:40:00 </POSTDATE>
My vote would be to change the sage license to &quot;GPLv2 or later&quot; and
try to get the Singular developers to do likewise.  Mainly because
that is less work.

Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
changes?  My interpretation is that it simply gives users the option
to re-distribute it according to later versions of the GPL.  It
doesn't obligate Sage to adopt those future changes, does it?

--jason

<QUOTE PREVIOUSPOST="
&gt; The *only* options I can think of right now are:
&gt;    (1) Stick with GPLv2 and *fork* every FSF project Sage depends on:
&gt;          * GMP
&gt;          * GSL
&gt;          * GNUtls (openssl replacement)
&gt;         Anything else?

&gt;    (2) Change the Sage license to GPLv2 or later, and get clarification
&gt;          about the same issue from the Singular developers.

&gt; More details:

&gt;    (1) Make a stand and stick with GPLv2.  This will mean in the long
&gt; run that we will have to FORK, never ever again ship updated
&gt; versions of, or remove dependence on every FSF-owned project.
&gt; This is definitely possible, since the projects are currently very
&gt; mature:
&gt;      * GSL -- they just released GSL v1.10 under GPLv3 only (sage
&gt;                     currently includes GSL v1.9),
&gt;      * GMP -- they just released GMP v4.2.2 under GPLv3 only (sage
&gt;                     currently includes on GMP v4.2.1),
&gt; It appears that a huge number of FSF/GNU projects are having
&gt; new releases under GPLv3 *only* right now (not GPLv2 or later).
&gt; I.e., FSF is very aggressively pushing their license in a technical sense.

&gt;   (2) We change the Sage license to GPLv2 or later, and change or
&gt; eliminate all components of Sage that are GPL v2 only.
&gt; As far as I can tell Singular is the only 3rd party component of
&gt; Sage that is in fact clearly GPL v2 only.   Please correct me if I'm
&gt; wrong about that.

&gt; ----

&gt; I think both options are viable, since I suspect that the only projects
&gt; Sage uses that will switch to GPLv3 only are the FSF projects -- most
&gt; projects will just stick with &quot;GPLv2 or greater&quot;.  Option (1) means more
&gt; work for us, though GSL is pretty much *done* -- it hasn't changed
&gt; much in years, and likewise GMP hasn't had anything interesting
&gt; happen release-wise in nearly 2 years. (The most interesting GMP work has
&gt; been outside the GMP project.)

&gt; If you can think of a genuinely viable third option, or have strong
&gt; feelings about which of 1 or 2 is better, now is the time to speak
&gt; up.  I have put off this GPLv3 license discussion repeatedly during
&gt; the last year when it came up.  But now it can't be ignored anymore.
&gt; I greatly value everybody's feedback.

&gt;  -- William
">
</POST>
<POST>
<POSTER> David Harvey &lt;dmhar...@math.harvard.edu&gt; </POSTER>
<POSTDATE> 2007-09-23T22:43:00 </POSTDATE>
On Sep 23, 2007, at 10:20 PM, William Stein wrote:

<QUOTE PREVIOUSPOST="
&gt; much in years, and likewise GMP hasn't had anything interesting
&gt; happen release-wise in nearly 2 years. (The most interesting GMP
&gt; work has
&gt; been outside the GMP project.)
">

I'm not sure I agree with this. I strongly suspect GMP is likely to
improve a lot in the next few years.

david
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T22:46:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Well, one possibility is to have GPLv2 in the main distribution and LGPLv3
&gt; as an optional package.
">

Another possibility is to distribute SAGE-new parts under any of GPL2, GPL3,
or GPL2 and later, and distribute all the rest as a collection of packages,
each with its own license, without having a unique license for all of that.

Alec
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T23:06:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; This is only perhaps ideal from the typical end user's point of view.
&gt; The GPL-style license is greatly preferred over the BSD/MIT as the
&gt; license for Sage by most Sage developers (this was discussed a lot
&gt; at Sage Days 2).   In fact, several of the top contributors to Sage have
&gt; explicitly said they would not contribute to Sage if it were not licensed
&gt; under the GPL. It's very important to these people, who put a massive
&gt; amount of their time into Sage, that the code the write not just be
&gt; copied into Mathematica/Maple/Magma, etc., and sold for profit,
&gt; improved, etc., with nothing given in return.
">

By the way, the GPL licensing, generally, is the main thing that prevents me
personally from contributing to SAGE. I never put anything I wrote under GPL
and I am not going to (at least at this moment.) Comparing to the danger of
copying the code that I wrote to Mathematica, Maple, or Magma, the GPL
licensing (and FSF copyrighting) seems to be much worse :)

Alec
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T23:10:00 </POSTDATE>
On 9/23/07, Alec Mihailovs &lt;a ... @mihailovs.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; Well, one possibility is to have GPLv2 in the main distribution and LGPLv3
&gt; &gt; as an optional package.

&gt; Another possibility is to distribute SAGE-new parts under any of GPL2, GPL3,
&gt; or GPL2 and later, and distribute all the rest as a collection of packages,
&gt; each with its own license, without having a unique license for all of that.
">

Thanks for your idea.  Unfotunately, I don't understand what these
proposals are suggesting.
If we plan to use GSL and GMP under LGPLv3 in any way, then it's impossible
to have any distribution of Sage at all that is GPL v2-only,
because almost every basic component of Sage depends on GMP, and GMP
is LGPLv3,

This will be an issue for Singular too -- people won't be able to build Singular
against GMP v4.2.2 and redistribute the result.

Basically it sounds like this idea is suggesting to try to somehow
to circumvent the GPL by distributing two incompatible
programs and having the user combine them.  Intentionally
circumventing copyright

On Sep 23, 2007, at 10:20 PM, David Harvey wrote:

<QUOTE PREVIOUSPOST="
&gt;&gt; happen release-wise in nearly 2 years. (The most interesting GMP
&gt;&gt; work has been outside the GMP project.)
&gt;I'm not sure I agree with this. I strongly suspect GMP is likely to
&gt;improve a lot in the next few years.
">

You would know much better than I would.  Thanks for clarifying
this.

<QUOTE PREVIOUSPOST="
&gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt; changes?  My interpretation is that it simply gives users the option
&gt; to re-distribute it according to later versions of the GPL.  It
&gt; doesn't obligate Sage to adopt those future changes, does it?
">

Does it matter?   To give an extreme example, imagine
that Stallman/FSF in 10 years has
a vision from God or whatever, and decides that GPLv4 should
just be the BSD license.  They could do that.  Then &quot;GPLV2 or later&quot;
would mean that all Sage could be included in Magma, Mathematica,
etc., and there is nothing that we could do to stop that.

That said, having some trust in organizations like FSF does
make life much easier, so we can get on with what we really
want to do (mathematics).   Having no trust is a job for lawyers,
not mathematicians.   I.e., I personally would be OK with
&quot;GPLv2 or later&quot; because my main goal is to do mathematics...

-- William
</POST>
<POST>
<POSTER> David Harvey &lt;dmhar...@math.harvard.edu&gt; </POSTER>
<POSTDATE> 2007-09-23T23:10:00 </POSTDATE>
On Sep 23, 2007, at 11:06 PM, Alec Mihailovs wrote:

<QUOTE PREVIOUSPOST="
&gt;&gt; This is only perhaps ideal from the typical end user's point of view.
&gt;&gt; The GPL-style license is greatly preferred over the BSD/MIT as the
&gt;&gt; license for Sage by most Sage developers (this was discussed a lot
&gt;&gt; at Sage Days 2).   In fact, several of the top contributors to
&gt;&gt; Sage have
&gt;&gt; explicitly said they would not contribute to Sage if it were not
&gt;&gt; licensed
&gt;&gt; under the GPL. It's very important to these people, who put a massive
&gt;&gt; amount of their time into Sage, that the code the write not just be
&gt;&gt; copied into Mathematica/Maple/Magma, etc., and sold for profit,
&gt;&gt; improved, etc., with nothing given in return.

&gt; By the way, the GPL licensing, generally, is the main thing that
&gt; prevents me
&gt; personally from contributing to SAGE. I never put anything I wrote
&gt; under GPL
&gt; and I am not going to (at least at this moment.) Comparing to the
&gt; danger of
&gt; copying the code that I wrote to Mathematica, Maple, or Magma, the GPL
&gt; licensing (and FSF copyrighting) seems to be much worse :)
">

hi Alec,

Could you please elaborate on this a bit? What is it about the GPL
that you don't like? If you were to contribute code to SAGE, what
would be your ideal license?

david
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-23T23:14:00 </POSTDATE>
On 9/23/07, Alec Mihailovs &lt;a ... @mihailovs.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; This is only perhaps ideal from the typical end user's point of view.
&gt; &gt; The GPL-style license is greatly preferred over the BSD/MIT as the
&gt; &gt; license for Sage by most Sage developers (this was discussed a lot
&gt; &gt; at Sage Days 2).   In fact, several of the top contributors to Sage have
&gt; &gt; explicitly said they would not contribute to Sage if it were not licensed
&gt; &gt; under the GPL. It's very important to these people, who put a massive
&gt; &gt; amount of their time into Sage, that the code the write not just be
&gt; &gt; copied into Mathematica/Maple/Magma, etc., and sold for profit,
&gt; &gt; improved, etc., with nothing given in return.

&gt; By the way, the GPL licensing, generally, is the main thing that prevents me
&gt; personally from contributing to SAGE.
">

Is it your personal distate for the GPL, or is that you don't want to be forced
to license code under the GPL.

<QUOTE PREVIOUSPOST="
&gt; I never put anything I wrote under GPL
&gt; and I am not going to (at least at this moment.) Comparing to the danger of
&gt; copying the code that I wrote to Mathematica, Maple, or Magma, the GPL
&gt; licensing (and FSF copyrighting) seems to be much worse :)
">

You can  contribute code to Sage under the BSD license.  Some
of the code I wrote for Sage I licensed under BSD, and in fact a huge
amount of the code in the Sage distribution is BSD licensed (e.g.,
all of numpy and scipy).    Contributions to Sage under any
GPL-compatible license are very welcome.

-- William
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T23:29:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Could you please elaborate on this a bit? What is it about the GPL
&gt; that you don't like? If you were to contribute code to SAGE, what
&gt; would be your ideal license?
">

My ideal license would be MIT. I don't like the GPL in general. I read it a
few times up to some point where I said to myself - no, that's not right, I
can't go with that. At different times that was a different point, but I
believe that I never went over the half of it. I have some negative personal
experience with some of FSF people (that I don't want to share) though, so
my opinion about the GPL may be biased.

Alec
</POST>
<POST>
<POSTER> &quot;Alec Mihailovs&quot; &lt;a...@mihailovs.com&gt; </POSTER>
<POSTDATE> 2007-09-23T23:40:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt;&gt; By the way, the GPL licensing, generally, is the main thing that prevents
&gt;&gt; me
&gt;&gt; personally from contributing to SAGE.

&gt; Is it your personal distate for the GPL, or is that you don't want to be
&gt; forced
&gt; to license code under the GPL.
">

Both, I think.

<QUOTE PREVIOUSPOST="
&gt; You can  contribute code to Sage under the BSD license.  Some
&gt; of the code I wrote for Sage I licensed under BSD, and in fact a huge
&gt; amount of the code in the Sage distribution is BSD licensed (e.g.,
&gt; all of numpy and scipy).    Contributions to Sage under any
&gt; GPL-compatible license are very welcome.
">

I am thinking of contributing something (some representation and invariant
theory stuff) to scipy (it is BSD) and then it will be available from SAGE.
One problem is that I have main routines written in assembler and it works
only in Windows. It can be rewritten for Linux, but it is still not very
portable.

Alec
</POST>
<POST>
<POSTER> Bill Hart &lt;goodwillh...@googlemail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T02:56:00 </POSTDATE>
I don't think these issues are simple.

Interestingly, Magma will not be able to use GMP under LGPLv3 as a
statically linked library, since as a combined work it must satisfy
section 4d of the LGPLv3, which excludes distributing a binary already
linked statically with GMP, since you are supposed to provide the user
with the option of upgrading the library which Magma makes use of,
i.e. provide a drop in replacement.

But, according to that page with the matrix that William linked to at
the start of the thread, &quot;&quot;Use a library&quot; means that you're not
copying any source directly, but instead interacting with it through
linking, importing, or other typical mechanisms that bind the sources
together when you compile or run the code.&quot;

But SAGE is not currently designed to just link against GMP at compile
*or* runtime. Rather the source code for GMP is actually included in
SAGE, and in fact in modified form (by adding Pierrick and Jason's
patches), and at runtime the SAGE binary actually includes GMP.

But the problem with this is that to do this with an LGPLv3'd GMP,
SAGE has to convert GMP to a GPLv3 license (permissible under the
terms of the LGPL) *and* upgrade SAGE to GPLv3!!

SAGE couldn't even provide compiled binaries statically linked against
the latest GMP since the compiled binary of a GPL'd program must
exactly reflect the source code that is supposed to accompany it. If
compiling the source code you supply does not result in the binary you
distribute, you aren't in compliance with the GPL.

Regarding GMP, there are about to be lots of additions to it and, over
the next couple of years, much of it will see a rewrite. FLINT will
make use of the new versions of GMP, undoubtedly. I don't see that we
have an option. For FLINT itself, this is not an issue. We simply put
&quot;GPLv2 or (at your option) GPLv3&quot; on our code, since we do not include
GMP in FLINT, but only link against it. Admittedly we'd like to
statically link against it, but this seems to be precluded. But for
SAGE the GMP thing is much more of a problem.

So according to my reading SAGE has two options in the long run:

1) Switch to GPLv3, ensure all code we distribute as part of SAGE is
&quot;GPLv2 or later&quot; or released under a GPLv3 compatible license. Keep
GMP as part of SAGE. This option seems to be best from the perspective
that closed source competitors like Magma cannot do this.

2) Remove GMP and Pierrick and Jason's patches from SAGE and simply
link against whatever GMP version happens to be on the users system,
and go to &quot;GPLv2 or later&quot;. Under this option we could not even link
against the latest version of GSL.

With regard to Pari, we really need to ask them what their license is.
I don't see them explicitly granting the right to (at our option) use
Pari under the terms of later versions of the GPL. However, my bet is
they will go to &quot;GPLv2 or later&quot; since they too wish to link against
GMP.

Anyhow, let me congratulate the FSF for creating this mess. It is
clear they are achieving their &quot;mission to preserve, protect and
promote the freedom to use, study, copy, modify, and redistribute
computer software, and to defend the rights of all free software
users.&quot;

So far, no FSF licensing option grants us the right to modify and
redistribute all software ever released under a FSF license.
Effectively there is a &quot;no&quot; in every column of that matrix if read
properly.

Bill.

On 24 Sep, 04:10, &quot;William Stein&quot; &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, Alec Mihailovs &lt;a ... @mihailovs.com&gt; wrote:

&gt; &gt; &gt; Well, one possibility is to have GPLv2 in the main distribution and LGPLv3
&gt; &gt; &gt; as an optional package.

&gt; &gt; Another possibility is to distribute SAGE-new parts under any of GPL2, GPL3,
&gt; &gt; or GPL2 and later, and distribute all the rest as a collection of packages,
&gt; &gt; each with its own license, without having a unique license for all of that.

&gt; Thanks for your idea.  Unfotunately, I don't understand what these
&gt; proposals are suggesting.
&gt; If we plan to use GSL and GMP under LGPLv3 in any way, then it's impossible
&gt; to have any distribution of Sage at all that is GPL v2-only,
&gt; because almost every basic component of Sage depends on GMP, and GMP
&gt; is LGPLv3,

&gt; This will be an issue for Singular too -- people won't be able to build Singular
&gt; against GMP v4.2.2 and redistribute the result.

&gt; Basically it sounds like this idea is suggesting to try to somehow
&gt; to circumvent the GPL by distributing two incompatible
&gt; programs and having the user combine them.  Intentionally
&gt; circumventing copyright

&gt; On Sep 23, 2007, at 10:20 PM, David Harvey wrote:

&gt; &gt;&gt; happen release-wise in nearly 2 years. (The most interesting GMP
&gt; &gt;&gt; work has been outside the GMP project.)
&gt; &gt;I'm not sure I agree with this. I strongly suspect GMP is likely to
&gt; &gt;improve a lot in the next few years.

&gt; You would know much better than I would.  Thanks for clarifying
&gt; this.

&gt; &gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt; &gt; changes?  My interpretation is that it simply gives users the option
&gt; &gt; to re-distribute it according to later versions of the GPL.  It
&gt; &gt; doesn't obligate Sage to adopt those future changes, does it?

&gt; Does it matter?   To give an extreme example, imagine
&gt; that Stallman/FSF in 10 years has
&gt; a vision from God or whatever, and decides that GPLv4 should
&gt; just be the BSD license.  They could do that.  Then &quot;GPLV2 or later&quot;
&gt; would mean that all Sage could be included in Magma, Mathematica,
&gt; etc., and there is nothing that we could do to stop that.

&gt; That said, having some trust in organizations like FSF does
&gt; make life much easier, so we can get on with what we really
&gt; want to do (mathematics).   Having no trust is a job for lawyers,
&gt; not mathematicians.   I.e., I personally would be OK with
&gt; &quot;GPLv2 or later&quot; because my main goal is to do mathematics...

&gt;  -- William
">
</POST>
<POST>
<POSTER> Jaap Spies &lt;j.sp...@hccnet.nl&gt; </POSTER>
<POSTDATE> 2007-09-24T06:52:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Jason Martin wrote:
&gt; My vote would be to change the sage license to &quot;GPLv2 or later&quot; and
&gt; try to get the Singular developers to do likewise.  Mainly because
&gt; that is less work.

&gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt; changes?  My interpretation is that it simply gives users the option
&gt; to re-distribute it according to later versions of the GPL.  It
&gt; doesn't obligate Sage to adopt those future changes, does it?
">

If it says 'GPLv2 or any later version' version 2 still applies!
Even if GPLvx with x &gt;= 3 is more restrictive.

Jaap
</POST>
<POST>
<POSTER> &quot;David Joyner&quot; &lt;wdjoy...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T07:30:00 </POSTDATE>
On 9/24/07, Jaap Spies &lt;j.sp ... @hccnet.nl&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Jason Martin wrote:
&gt; &gt; My vote would be to change the sage license to &quot;GPLv2 or later&quot; and
&gt; &gt; try to get the Singular developers to do likewise.  Mainly because
&gt; &gt; that is less work.

&gt; &gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt; &gt; changes?  My interpretation is that it simply gives users the option
&gt; &gt; to re-distribute it according to later versions of the GPL.  It
&gt; &gt; doesn't obligate Sage to adopt those future changes, does it?

&gt; If it says 'GPLv2 or any later version' version 2 still applies!
">

&quot;GPLv2 or later&quot; means &quot;you may copy, modify, and
redistribute the code using either license GPLv2 or
GPLv3 (at your preference)&quot;. You can't
use both at the same time since they are incompatible.

<QUOTE PREVIOUSPOST="
&gt; Even if GPLvx with x &gt;= 3 is more restrictive.

&gt; Jaap
">
</POST>
<POST>
<POSTER> Jaap Spies &lt;j.sp...@hccnet.nl&gt; </POSTER>
<POSTDATE> 2007-09-24T07:32:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
William Stein wrote:
&gt; On 9/23/07, Joel B. Mohler &lt;j ... @kiwistrawberry.us&gt; wrote:
&gt;&gt; On Sunday 23 September 2007 15:46, William Stein wrote:
&gt;&gt; I very much do not like the blanket &quot;or later version&quot; scheme for dealing with
&gt;&gt; the GPL.  This, to me, gives the FSF a blank check for whatever in GPLv4, and
&gt;&gt; after seeing GPLv3, I trust them even less than I used to.

&gt; True.  And &quot;or later&quot; definitely allows them to not only add new
&gt; terms (GPLv3 is GPLv2 + more restrictions), but it allows them
&gt; to remove terms.
">

Software released under GPLv2 or any later version is still under GPLv2
whatever the FSF is doing.

Yes, the only problem I can think of is that GPLv4 or later is less
restrictive compared to v2. But I don't expect that will ever happen because that
will be the end of FSF.

Jaap
</POST>
<POST>
<POSTER> Jaap Spies &lt;j.sp...@hccnet.nl&gt; </POSTER>
<POSTDATE> 2007-09-24T07:49:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
David Joyner wrote:
&gt; On 9/24/07, Jaap Spies &lt;j.sp ... @hccnet.nl&gt; wrote:
&gt;&gt; Jason Martin wrote:
&gt;&gt;&gt; My vote would be to change the sage license to &quot;GPLv2 or later&quot; and
&gt;&gt;&gt; try to get the Singular developers to do likewise.  Mainly because
&gt;&gt;&gt; that is less work.

&gt;&gt;&gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt;&gt;&gt; changes?  My interpretation is that it simply gives users the option
&gt;&gt;&gt; to re-distribute it according to later versions of the GPL.  It
&gt;&gt;&gt; doesn't obligate Sage to adopt those future changes, does it?

&gt;&gt; If it says 'GPLv2 or any later version' version 2 still applies!

&gt; &quot;GPLv2 or later&quot; means &quot;you may copy, modify, and
&gt; redistribute the code using either license GPLv2 or
&gt; GPLv3 (at your preference)&quot;. You can't
&gt; use both at the same time since they are incompatible.
">

What do you mean by use both? Nobody will copy, modify and
redistribute software with two or more incompatible licences.

With 'Version 2 of the GPL or any later version',
users will always be permitted to use it, and change it, according
to the terms of GPL version 2, whatever higher versions are
available.

Jaap
</POST>
<POST>
<POSTER> mabshoff &lt;Michael.Absh...@fsmath.mathematik.uni-dortmund.de&gt; </POSTER>
<POSTDATE> 2007-09-24T08:49:00 </POSTDATE>
On Sep 23, 7:54 pm, David Harvey &lt;dmhar ... @math.harvard.edu&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Sep 23, 2007, at 1:41 PM, William Stein wrote:

&gt; &gt;&gt; http://gplv3.fsf.org/dd3-faq
&gt; &gt;&gt; which has a nice matrix showing what is legal to combine.

&gt; &gt; This table very clearly says that a GPL v2 project cannot link in an
&gt; &gt; LGPL v3 library.
&gt; &gt; We will thus not be upgrading the Sage GMP package to 4.2.2 right now.

&gt; &gt; Thoughts?

&gt; I wonder whether the GMP folks would consider releasing under both
&gt; LGPL v2 and v3.

&gt; david
">

Hello,

this thread got a lot more replies than I thought. Anyway to answer
that question: GMP is an official FSF prpject, so it will not be
released under LGPL V2 or later. All the new FSF releases are GPL V3
(or later) or LGPL V3 (or later).

Cheers,

Michael
</POST>
<POST>
<POSTER> mabshoff &lt;Michael.Absh...@fsmath.mathematik.uni-dortmund.de&gt; </POSTER>
<POSTDATE> 2007-09-24T09:18:00 </POSTDATE>
On Sep 24, 1:30 pm, &quot;David Joyner&quot; &lt;wdjoy ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/24/07, Jaap Spies &lt;j.sp ... @hccnet.nl&gt; wrote:

&gt; &gt; Jason Martin wrote:
&gt; &gt; &gt; My vote would be to change the sage license to &quot;GPLv2 or later&quot; and
&gt; &gt; &gt; try to get the Singular developers to do likewise.  Mainly because
&gt; &gt; &gt; that is less work.

&gt; &gt; &gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt; &gt; &gt; changes?  My interpretation is that it simply gives users the option
&gt; &gt; &gt; to re-distribute it according to later versions of the GPL.  It
&gt; &gt; &gt; doesn't obligate Sage to adopt those future changes, does it?
">

If any file inside a project says GPL V2 only and the rest of the code
is licensed under a GPL V2 compatible license that in turn makes the
whole project if distributed in binary form GPL V2 only. That does not
apply to the sources! So if you see any file like that in Singular,
pari, GAP or whatever let the developer/copyright holder know and ask
them nicely to change the license to the same license as the rest of
the project.

We should also make sure that all our modifications to [L]GPL [2|3],
BSD, MIT licensed code are clearly licensed and we should make an
effort to merge our patches upstream.

<QUOTE PREVIOUSPOST="
&gt; &gt; If it says 'GPLv2 or any later version' version 2 still applies!

&gt; &quot;GPLv2 or later&quot; means &quot;you may copy, modify, and
&gt; redistribute the code using either license GPLv2 or
&gt; GPLv3 (at your preference)&quot;. You can't
&gt; use both at the same time since they are incompatible.
">

Exactly, and this means: When releasing a Sage binary linked against
gmp 4.2.2 any source bits that are &quot;GPL V2 or later&quot; are in effect
covered under the GPL V3 only in that binary release, because any
[L]GPL V3 library forces the use of the compatible GPL V3 license. The
sources that are GPL V2 or later can still be used under GPL V2 and if
you choose to use gmp 4.2.1 and not any other [L]GPL V3 code the
resulting binary distribution is covered under GPL V2. Obviously the
other code that is BSD licensed retains its license.

As was pointed out in the thread before performance wise it won't make
any difference with Jason's patches. The are various bug fixes that
make it worthwhile to switch to the new release (even though there are
no new features beside the license change) and one patch went in to
support gcc 4.3, but that that one was mine (even though the patch
that went in did it differently). So I would suggest to license Sage's
code under GPL V2 or V3 (if you are paranoid about the successor of
GPL V3), but one should consider that once a hypothetical GPL V4 rolls
around some of the authors of Sage code might no longer be around/lost
contact to the project. So GPL V2 or later covers that and as long as
say William's contributions only are covered under &quot;GPL V2 or V3&quot;
nobody could realistically &quot;hijack&quot; Sage under a hypothetically bad
GPL V4, if you are that paranoid ;).

<QUOTE PREVIOUSPOST="
&gt; &gt; Even if GPLvx with x &gt;= 3 is more restrictive.

&gt; &gt; Jaap
">

Cheers,

Michael
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T10:25:00 </POSTDATE>
On 9/23/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I don't think these issues are simple.

&gt; Interestingly, Magma will not be able to use GMP under LGPLv3 as a
&gt; statically linked library, since as a combined work it must satisfy
&gt; section 4d of the LGPLv3, which excludes distributing a binary already
&gt; linked statically with GMP, since you are supposed to provide the user
&gt; with the option of upgrading the library which Magma makes use of,
&gt; i.e. provide a drop in replacement.
">

This is interesting.  However all it means in practice is that Magma
will switch to
distributing a version that is dynamically linked against GMP, which
is something
they claim to already be able to do on request.  So they will continue to use
new versions of GMP, with only a very mild inconvenience.

<QUOTE PREVIOUSPOST="
&gt; But, according to that page with the matrix that William linked to at
&gt; the start of the thread, &quot;&quot;Use a library&quot; means that you're not
&gt; copying any source directly, but instead interacting with it through
&gt; linking, importing, or other typical mechanisms that bind the sources
&gt; together when you compile or run the code.&quot;

&gt; But SAGE is not currently designed to just link against GMP at compile
&gt; *or* runtime. Rather the source code for GMP is actually included in
&gt; SAGE, and in fact in modified form (by adding Pierrick and Jason's
&gt; patches), and at runtime the SAGE binary actually includes GMP.
&gt; But the problem with this is that to do this with an LGPLv3'd GMP,
&gt; SAGE has to convert GMP to a GPLv3 license (permissible under the
&gt; terms of the LGPL) *and* upgrade SAGE to GPLv3!!
">

Let's be careful here to distinguish the Sage distribution as a whole from
the hundreds of thousands of lines of new Python / Cython / C code that
we have written.   I'll call the latter &quot;the Sage Python library&quot; and the
former &quot;the Sage distribution&quot;.     If we change licenses, we should relicense
the Sage Python library under &quot;v2 or later&quot;; the Sage distribution itself
would then be forced to be licensed under &quot;v3&quot; as you mention above.
This means that:
(1) somebody could still use the Sage library in a GPL v2 only project,
by building against an older version of GMP and GSL.
(2) people could not use Sage as we distribute it in a project that isn't
licensed GPL * or later.

<QUOTE PREVIOUSPOST="
&gt; Regarding GMP, there are about to be lots of additions to it and, over
&gt; the next couple of years, much of it will see a rewrite. FLINT will
">

I thought that was going to happen in 2005, then 2006, then 2007?
Who is actually doing this massive rewrite, addition, etc.?

<QUOTE PREVIOUSPOST="
&gt; make use of the new versions of GMP, undoubtedly. I don't see that we
&gt; have an option. For FLINT itself, this is not an issue. We simply put
&gt; &quot;GPLv2 or (at your option) GPLv3&quot; on our code, since we do not include
&gt; GMP in FLINT, but only link against it. Admittedly we'd like to
&gt; statically link against it, but this seems to be precluded. But for
&gt; SAGE the GMP thing is much more of a problem.
">

I think it is the same amount of problem for the *SAGE library*, which is most
of what we've written.

<QUOTE PREVIOUSPOST="
&gt; So according to my reading SAGE has two options in the long run:

&gt; 1) Switch to GPLv3, ensure all code we distribute as part of SAGE is
&gt; &quot;GPLv2 or later&quot; or released under a GPLv3 compatible license. Keep
&gt; GMP as part of SAGE.
&gt; This option seems to be best from the perspective
&gt; that closed source competitors like Magma cannot do this.
">

I don't agree with the above statement about Magma.  I'm 100% Magma can
and will switch to using any future versions of GMP.  I think the only reason
they currently distribute statically linked binaries is that (they
believe) it makes
using and installing Magma easier for users.  Switching to a dynamically linked
Magma is easy for them to do, and they will do it.

<QUOTE PREVIOUSPOST="
&gt; 2) Remove GMP and Pierrick and Jason's patches from SAGE and simply
&gt; link against whatever GMP version happens to be on the users system,
&gt; and go to &quot;GPLv2 or later&quot;. Under this option we could not even link
&gt; against the latest version of GSL.
">

This is not an option, since it directly violates one of the 3 basic
principles of Sage:

(1) provide a complete open source mathematical software distribution,
(2) provide a new library,
(3) provide a way for existing math programs to talk with Sage.

Including GMP is critical to Sage's usability.

Anyway, you're might be confusing the Sage library and the Sage distribution as
a whole.  The options to me seem to be:

(1) fork GMP, GSL, GNUtls, etc., or

(2) change the Sage Python library and Singular to GPL v2 or later.

If (2) were the case, the whole Sage distribution would be possible, and would
in effect have the GPL v3 license.   It appears that (1) would doom Sage to
irrelevance, but that (2) is manageable, depending on what the Singular
copyright holders decide.

<QUOTE PREVIOUSPOST="
&gt; With regard to Pari, we really need to ask them what their license is.
&gt; I don't see them explicitly granting the right to (at our option) use
&gt; Pari under the terms of later versions of the GPL.
">

Nothing anywhere in the PARI distribution or startup banner makes any
statement about
GPL versions.  The only mention of GPL versions anywhere in Pari is in
the LICENSE.txt
file that they copied from the GNU website.  This means that one can
apply any version
of the GPL to PARI.  Please re-read section 9 of the GPL, especially
the last sentence
in the second paragraph below:

&quot;9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and &quot;any
later version&quot;, you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.&quot;

This last sentence was quite a surprise to me!  But it's there.

<QUOTE PREVIOUSPOST="
&gt; However, my bet is
&gt; they will go to &quot;GPLv2 or later&quot; since they too wish to link against
&gt; GMP.
">

But I don't think they will even worry about it given that
(I think) technically they already have.

William
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T10:30:00 </POSTDATE>
On 9/24/07, mabshoff &lt;Michael.Absh ... @fsmath.mathematik.uni-dortmund.de&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Sep 24, 1:30 pm, &quot;David Joyner&quot; &lt;wdjoy ... @gmail.com&gt; wrote:
&gt; &gt; On 9/24/07, Jaap Spies &lt;j.sp ... @hccnet.nl&gt; wrote:
&gt; &gt; &gt; Jason Martin wrote:
&gt; &gt; &gt; &gt; My vote would be to change the sage license to &quot;GPLv2 or later&quot; and
&gt; &gt; &gt; &gt; try to get the Singular developers to do likewise.  Mainly because
&gt; &gt; &gt; &gt; that is less work.

&gt; &gt; &gt; &gt; Does changing Sage to &quot;v2 or later&quot; require Sage to adopted future GPL
&gt; &gt; &gt; &gt; changes?  My interpretation is that it simply gives users the option
&gt; &gt; &gt; &gt; to re-distribute it according to later versions of the GPL.  It
&gt; &gt; &gt; &gt; doesn't obligate Sage to adopt those future changes, does it?

&gt; If any file inside a project says GPL V2 only and the rest of the code
&gt; is licensed under a GPL V2 compatible license that in turn makes the
&gt; whole project if distributed in binary form GPL V2 only. That does not
&gt; apply to the sources!
&gt; So if you see any file like that in Singular,
&gt; pari, GAP or whatever let the developer/copyright holder know and ask
&gt; them nicely to change the license to the same license as the rest of
&gt; the project.
&gt; We should also make sure that all our modifications to [L]GPL [2|3],
&gt; BSD, MIT licensed code are clearly licensed and we should make an
&gt; effort to merge our patches upstream.
">

Agreed.

<QUOTE PREVIOUSPOST="
&gt; &gt; &gt; If it says 'GPLv2 or any later version' version 2 still applies!

&gt; &gt; &quot;GPLv2 or later&quot; means &quot;you may copy, modify, and
&gt; &gt; redistribute the code using either license GPLv2 or
&gt; &gt; GPLv3 (at your preference)&quot;. You can't
&gt; &gt; use both at the same time since they are incompatible.

&gt; Exactly, and this means: When releasing a Sage binary linked against
&gt; gmp 4.2.2 any source bits that are &quot;GPL V2 or later&quot; are in effect
&gt; covered under the GPL V3 only in that binary release, because any
&gt; [L]GPL V3 library forces the use of the compatible GPL V3 license. The
&gt; sources that are GPL V2 or later can still be used under GPL V2 and if
&gt; you choose to use gmp 4.2.1 and not any other [L]GPL V3 code the
&gt; resulting binary distribution is covered under GPL V2. Obviously the
&gt; other code that is BSD licensed retains its license.
">

This is exactly right.

<QUOTE PREVIOUSPOST="
&gt; As was pointed out in the thread before performance wise it won't make
&gt; any difference with Jason's patches. The are various bug fixes that
&gt; make it worthwhile to switch to the new release (even though there are
&gt; no new features beside the license change) and one patch went in to
&gt; support gcc 4.3, but that that one was mine (even though the patch
&gt; that went in did it differently). So I would suggest to license Sage's
&gt; code under GPL V2 or V3 (if you are paranoid about the successor of
&gt; GPL V3), but one should consider that once a hypothetical GPL V4 rolls
&gt; around some of the authors of Sage code might no longer be around/lost
&gt; contact to the project. So GPL V2 or later covers that and as long as
&gt; say William's contributions only are covered under &quot;GPL V2 or V3&quot;
&gt; nobody could realistically &quot;hijack&quot; Sage under a hypothetically bad
&gt; GPL V4, if you are that paranoid ;).
">

I'm not going to do a GPL v2 or v3 only license.  That is too painful
to contemplate, since it will mean in 10 years having the same sort
of problem, but much much worse.

-- William
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T11:03:00 </POSTDATE>
Hello,

Thank you for all this licensing discussion.  Given our resources, it seems
to me that the only viable option is as follows:

(1) Get permission to relicense the Sage library under &quot;GPL v2 or later&quot;,

(2) Remove anything from Sage that doesn't switch to &quot;GPL v2 or
later&quot; within some
reasonable period of time.  (I'm still not convinced this is
anything except Singular.)

(3) Once 1 and 2 are done, release the Sage library under GPL v2 or later.
The Sage distribution will then be GPL v3 or later, and will only be
usable by GPL v3 or later programs.

This will all be done slowly and patiently.  This means that Sage will not
have any new versions of GMP or GSL for quite a while.

Regarding (1), I'll define the copyright holders of the Sage *library*
to be the names
listed in the output of the following command (with some slight
editing, e.g., since
copyright statements for octave are in doctests):

$ cd SAGE_ROOT/devel/sage
$ grep -r -i Copyright  * &gt; a.txt

These are the people that both contributed code to the core library and
took the time to actually explicitly put their names as copyright holders
on files (in most cases this means they were the first to create the given
file).   They contributed code under the assumption that their code is
GPL v2 only, so permission should be obtained before changing the
license on their code to GPL v2 or later.

There are 29 people listed below.  In a few days (there is no hurry),
I'll send the following email to each of them:

&quot;Do I have your explicit written permission to relicense code you submitted
to Sage to be under the 'GPL v2 or later license'?
[ ] Yes
[ ] No
Note: If you answer &quot;no&quot;, unfortunately your code may have to be removed
from Sage.  Please blame the FSF not me for this license fiasco.&quot;

Regarding the list below, you don't have to email me if you're listed -- I'll
email you.  If you are not listed, but believe you should be, please
let me know.
Some people have already emailed me about this, so I won't have to email
them again.

Martin Albrecht
Gregory Bard
Tom Boothby
Robert Bradshaw
Timothy Brock
Iftikhar Burhanuddin
Craig Citro
Alex Clemesha
Didier Deshommes
Chris Gorecki
Marshall Hampton
Jon Hanke
Mike Hansen
David Harvey
Sean Howe
David Joyner
Josh Kantor
Joshua Kantor
Kiran Kedlaya
Emily Kirkman
David Kohel
Robert Miller
Joel Mohler
Yi Qiang
Dorian Raimer
David Roe
Jaap Spies
William Stein
Chris Wuthrich

-- William
</POST>
<POST>
<POSTER> Bill Hart &lt;goodwillh...@googlemail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T11:15:00 </POSTDATE>
OK, I hadn't read section 9 of the GPL. So now I agree with you that
Pari doesn't need to do anything. Excellent.

So basically all the new lines of SAGE code would be a library, which
can be linked against other libraries, and would be v2 or later.

The SAGE tarball, that contains everything, including GMP, would be
licensed under v3. But everything in it will need to be &quot;V2 or later&quot;
or &quot;v3 or later&quot;. At present only SINGULAR is a problem in this
regard.

With regards to Magma, yes, they'll be forced to dynamically link
against GMP. I wouldn't put it past them to write their own library
and dump GMP though. Some of their core code clearly already uses
their own code. For example they use different code for FFT
multiplication of integers and clearly have a different algorithm for
integer division. They only support a few target platforms, so this is
not that hard for them to manage.

Possibly some other packages they use make use of GMP, and if *they*
go GPLv3 then likely Magma will just have to dynamically link to all
of those. Anyway, I think you are right. They will probably distribute
those libraries separately along with the LGPLv3 and just dynamically
link to them. That will give people the option of making drop in
replacements for them, according to the terms of the LGPLv3.

Bill.

On 24 Sep, 15:25, &quot;William Stein&quot; &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/23/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

&gt; &gt; I don't think these issues are simple.

&gt; &gt; Interestingly, Magma will not be able to use GMP under LGPLv3 as a
&gt; &gt; statically linked library, since as a combined work it must satisfy
&gt; &gt; section 4d of the LGPLv3, which excludes distributing a binary already
&gt; &gt; linked statically with GMP, since you are supposed to provide the user
&gt; &gt; with the option of upgrading the library which Magma makes use of,
&gt; &gt; i.e. provide a drop in replacement.

&gt; This is interesting.  However all it means in practice is that Magma
&gt; will switch to
&gt; distributing a version that is dynamically linked against GMP, which
&gt; is something
&gt; they claim to already be able to do on request.  So they will continue to use
&gt; new versions of GMP, with only a very mild inconvenience.

&gt; &gt; But, according to that page with the matrix that William linked to at
&gt; &gt; the start of the thread, &quot;&quot;Use a library&quot; means that you're not
&gt; &gt; copying any source directly, but instead interacting with it through
&gt; &gt; linking, importing, or other typical mechanisms that bind the sources
&gt; &gt; together when you compile or run the code.&quot;

&gt; &gt; But SAGE is not currently designed to just link against GMP at compile
&gt; &gt; *or* runtime. Rather the source code for GMP is actually included in
&gt; &gt; SAGE, and in fact in modified form (by adding Pierrick and Jason's
&gt; &gt; patches), and at runtime the SAGE binary actually includes GMP.
&gt; &gt; But the problem with this is that to do this with an LGPLv3'd GMP,
&gt; &gt; SAGE has to convert GMP to a GPLv3 license (permissible under the
&gt; &gt; terms of the LGPL) *and* upgrade SAGE to GPLv3!!

&gt; Let's be careful here to distinguish the Sage distribution as a whole from
&gt; the hundreds of thousands of lines of new Python / Cython / C code that
&gt; we have written.   I'll call the latter &quot;the Sage Python library&quot; and the
&gt; former &quot;the Sage distribution&quot;.     If we change licenses, we should relicense
&gt; the Sage Python library under &quot;v2 or later&quot;; the Sage distribution itself
&gt; would then be forced to be licensed under &quot;v3&quot; as you mention above.
&gt; This means that:
&gt;     (1) somebody could still use the Sage library in a GPL v2 only project,
&gt; by building against an older version of GMP and GSL.
&gt;     (2) people could not use Sage as we distribute it in a project that isn't
&gt; licensed GPL * or later.

&gt; &gt; Regarding GMP, there are about to be lots of additions to it and, over
&gt; &gt; the next couple of years, much of it will see a rewrite. FLINT will

&gt; I thought that was going to happen in 2005, then 2006, then 2007?
&gt; Who is actually doing this massive rewrite, addition, etc.?

&gt; &gt; make use of the new versions of GMP, undoubtedly. I don't see that we
&gt; &gt; have an option. For FLINT itself, this is not an issue. We simply put
&gt; &gt; &quot;GPLv2 or (at your option) GPLv3&quot; on our code, since we do not include
&gt; &gt; GMP in FLINT, but only link against it. Admittedly we'd like to
&gt; &gt; statically link against it, but this seems to be precluded. But for
&gt; &gt; SAGE the GMP thing is much more of a problem.

&gt; I think it is the same amount of problem for the *SAGE library*, which is most
&gt; of what we've written.

&gt; &gt; So according to my reading SAGE has two options in the long run:

&gt; &gt; 1) Switch to GPLv3, ensure all code we distribute as part of SAGE is
&gt; &gt; &quot;GPLv2 or later&quot; or released under a GPLv3 compatible license. Keep
&gt; &gt; GMP as part of SAGE.
&gt; &gt; This option seems to be best from the perspective
&gt; &gt; that closed source competitors like Magma cannot do this.

&gt; I don't agree with the above statement about Magma.  I'm 100% Magma can
&gt; and will switch to using any future versions of GMP.  I think the only reason
&gt; they currently distribute statically linked binaries is that (they
&gt; believe) it makes
&gt; using and installing Magma easier for users.  Switching to a dynamically linked
&gt; Magma is easy for them to do, and they will do it.

&gt; &gt; 2) Remove GMP and Pierrick and Jason's patches from SAGE and simply
&gt; &gt; link against whatever GMP version happens to be on the users system,
&gt; &gt; and go to &quot;GPLv2 or later&quot;. Under this option we could not even link
&gt; &gt; against the latest version of GSL.

&gt; This is not an option, since it directly violates one of the 3 basic
&gt; principles of Sage:

&gt;    (1) provide a complete open source mathematical software distribution,
&gt;    (2) provide a new library,
&gt;    (3) provide a way for existing math programs to talk with Sage.

&gt; Including GMP is critical to Sage's usability.

&gt; Anyway, you're might be confusing the Sage library and the Sage distribution as
&gt; a whole.  The options to me seem to be:

&gt;   (1) fork GMP, GSL, GNUtls, etc., or

&gt;   (2) change the Sage Python library and Singular to GPL v2 or later.

&gt; If (2) were the case, the whole Sage distribution would be possible, and would
&gt; in effect have the GPL v3 license.   It appears that (1) would doom Sage to
&gt; irrelevance, but that (2) is manageable, depending on what the Singular
&gt; copyright holders decide.

&gt; &gt; With regard to Pari, we really need to ask them what their license is.
&gt; &gt; I don't see them explicitly granting the right to (at our option) use
&gt; &gt; Pari under the terms of later versions of the GPL.

&gt; Nothing anywhere in the PARI distribution or startup banner makes any
&gt; statement about
&gt; GPL versions.  The only mention of GPL versions anywhere in Pari is in
&gt; the LICENSE.txt
&gt; file that they copied from the GNU website.  This means that one can
&gt; apply any version
&gt; of the GPL to PARI.  Please re-read section 9 of the GPL, especially
&gt; the last sentence
&gt; in the second paragraph below:

&gt; &quot;9. The Free Software Foundation may publish revised and/or new versions
&gt; of the General Public License from time to time.  Such new versions will
&gt; be similar in spirit to the present version, but may differ in detail to
&gt; address new problems or concerns.

&gt; Each version is given a distinguishing version number.  If the Program
&gt; specifies a version number of this License which applies to it and &quot;any
&gt; later version&quot;, you have the option of following the terms and conditions
&gt; either of that version or of any later version published by the Free
&gt; Software Foundation.  If the Program does not specify a version number of
&gt; this License, you may choose any version ever published by the Free Software
&gt; Foundation.&quot;

&gt; This last sentence was quite a surprise to me!  But it's there.

&gt; &gt; However, my bet is
&gt; &gt; they will go to &quot;GPLv2 or later&quot; since they too wish to link against
&gt; &gt; GMP.

&gt; But I don't think they will even worry about it given that
&gt; (I think) technically they already have.

&gt; William
">
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T11:22:00 </POSTDATE>
On 9/24/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; OK, I hadn't read section 9 of the GPL. So now I agree with you that
&gt; Pari doesn't need to do anything. Excellent.
">

:-)

<QUOTE PREVIOUSPOST="
&gt; So basically all the new lines of SAGE code would be a library, which
&gt; can be linked against other libraries, and would be v2 or later.
">

Yep.

<QUOTE PREVIOUSPOST="
&gt; The SAGE tarball, that contains everything, including GMP, would be
&gt; licensed under v3. But everything in it will need to be &quot;V2 or later&quot;
&gt; or &quot;v3 or later&quot;. At present only SINGULAR is a problem in this
&gt; regard.
">

That's probably the case.  Does anybody know anything about the
plans for Singular (Martin?  Michael?).

<QUOTE PREVIOUSPOST="
&gt; With regards to Magma, yes, they'll be forced to dynamically link
&gt; against GMP. I wouldn't put it past them to write their own library
&gt; and dump GMP though. Some of their core code clearly already uses
&gt; their own code. For example they use different code for FFT
&gt; multiplication of integers and clearly have a different algorithm for
&gt; integer division. They only support a few target platforms, so this is
&gt; not that hard for them to manage.
">

Magma supports more target platforms than any other commercial
mathematical software and more targets than Sage.  If you go here:
https://magma.maths.usyd.edu.au/magma/export/
you'll see they support all of:

Alpha (Linux)
Alpha (OSF/Tru64)
AMD64/Intel64 (Linux)
AMD64/Intel64 (Solaris)
i386/PC (Linux)
i386/PC (Windows)
IBM PowerPC64 (AIX)
IBM PowerPC64 (Linux)
Intel IA64 (Linux)
Macintosh 32-bit Intel (OS X)
Macintosh G4 (Mac OS X)
Macintosh G5 (Mac OS X)
Sparc (Solaris)
Sparc64 (Solaris)

It's actually pretty amazing.   We should consider having similar
support for Sage
a challenge and priority.

They won't jettison GMP.  They also use several other LGPL (and soon
to be LGPLv3)
libraries, and I bet they'll just dynamically link them.  After all,
they already support
that functionality (it's just not the default).

<QUOTE PREVIOUSPOST="
&gt; Possibly some other packages they use make use of GMP, and if *they*
&gt; go GPLv3 then likely Magma will just have to dynamically link to all
&gt; of those. Anyway, I think you are right. They will probably distribute
&gt; those libraries separately along with the LGPLv3 and just dynamically
&gt; link to them. That will give people the option of making drop in
&gt; replacements for them, according to the terms of the LGPLv3.
">

Yep. That's what Maple already does too.

It could be fun, because you could write a replacement to GMP that
records all arithmetic operations that are done using GMP, then link
Maple against it and see what Maple is doing... :-)

<QUOTE PREVIOUSPOST="
&gt; Bill.

&gt; On 24 Sep, 15:25, &quot;William Stein&quot; &lt;wst ... @gmail.com&gt; wrote:
&gt; &gt; On 9/23/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

&gt; &gt; &gt; I don't think these issues are simple.

&gt; &gt; &gt; Interestingly, Magma will not be able to use GMP under LGPLv3 as a
&gt; &gt; &gt; statically linked library, since as a combined work it must satisfy
&gt; &gt; &gt; section 4d of the LGPLv3, which excludes distributing a binary already
&gt; &gt; &gt; linked statically with GMP, since you are supposed to provide the user
&gt; &gt; &gt; with the option of upgrading the library which Magma makes use of,
&gt; &gt; &gt; i.e. provide a drop in replacement.

&gt; &gt; This is interesting.  However all it means in practice is that Magma
&gt; &gt; will switch to
&gt; &gt; distributing a version that is dynamically linked against GMP, which
&gt; &gt; is something
&gt; &gt; they claim to already be able to do on request.  So they will continue to use
&gt; &gt; new versions of GMP, with only a very mild inconvenience.

&gt; &gt; &gt; But, according to that page with the matrix that William linked to at
&gt; &gt; &gt; the start of the thread, &quot;&quot;Use a library&quot; means that you're not
&gt; &gt; &gt; copying any source directly, but instead interacting with it through
&gt; &gt; &gt; linking, importing, or other typical mechanisms that bind the sources
&gt; &gt; &gt; together when you compile or run the code.&quot;

&gt; &gt; &gt; But SAGE is not currently designed to just link against GMP at compile
&gt; &gt; &gt; *or* runtime. Rather the source code for GMP is actually included in
&gt; &gt; &gt; SAGE, and in fact in modified form (by adding Pierrick and Jason's
&gt; &gt; &gt; patches), and at runtime the SAGE binary actually includes GMP.
&gt; &gt; &gt; But the problem with this is that to do this with an LGPLv3'd GMP,
&gt; &gt; &gt; SAGE has to convert GMP to a GPLv3 license (permissible under the
&gt; &gt; &gt; terms of the LGPL) *and* upgrade SAGE to GPLv3!!

&gt; &gt; Let's be careful here to distinguish the Sage distribution as a whole from
&gt; &gt; the hundreds of thousands of lines of new Python / Cython / C code that
&gt; &gt; we have written.   I'll call the latter &quot;the Sage Python library&quot; and the
&gt; &gt; former &quot;the Sage distribution&quot;.     If we change licenses, we should relicense
&gt; &gt; the Sage Python library under &quot;v2 or later&quot;; the Sage distribution itself
&gt; &gt; would then be forced to be licensed under &quot;v3&quot; as you mention above.
&gt; &gt; This means that:
&gt; &gt;     (1) somebody could still use the Sage library in a GPL v2 only project,
&gt; &gt; by building against an older version of GMP and GSL.
&gt; &gt;     (2) people could not use Sage as we distribute it in a project that isn't
&gt; &gt; licensed GPL * or later.

&gt; &gt; &gt; Regarding GMP, there are about to be lots of additions to it and, over
&gt; &gt; &gt; the next couple of years, much of it will see a rewrite. FLINT will

&gt; &gt; I thought that was going to happen in 2005, then 2006, then 2007?
&gt; &gt; Who is actually doing this massive rewrite, addition, etc.?

&gt; &gt; &gt; make use of the new versions of GMP, undoubtedly. I don't see that we
&gt; &gt; &gt; have an option. For FLINT itself, this is not an issue. We simply put
&gt; &gt; &gt; &quot;GPLv2 or (at your option) GPLv3&quot; on our code, since we do not include
&gt; &gt; &gt; GMP in FLINT, but only link against it. Admittedly we'd like to
&gt; &gt; &gt; statically link against it, but this seems to be precluded. But for
&gt; &gt; &gt; SAGE the GMP thing is much more of a problem.

&gt; &gt; I think it is the same amount of problem for the *SAGE library*, which is most
&gt; &gt; of what we've written.

&gt; &gt; &gt; So according to my reading SAGE has two options in the long run:

&gt; &gt; &gt; 1) Switch to GPLv3, ensure all code we distribute as part of SAGE is
&gt; &gt; &gt; &quot;GPLv2 or later&quot; or released under a GPLv3 compatible license. Keep
&gt; &gt; &gt; GMP as part of SAGE.
&gt; &gt; &gt; This option seems to be best from the perspective
&gt; &gt; &gt; that closed source competitors like Magma cannot do this.

&gt; &gt; I don't agree with the above statement about Magma.  I'm 100% Magma can
&gt; &gt; and will switch to using any future versions of GMP.  I think the only reason
&gt; &gt; they currently distribute statically linked binaries is that (they
&gt; &gt; believe) it makes
&gt; &gt; using and installing Magma easier for users.  Switching to a dynamically linked
&gt; &gt; Magma is easy for them to do, and they will do it.

&gt; &gt; &gt; 2) Remove GMP and Pierrick and Jason's patches from SAGE and simply
&gt; &gt; &gt; link against whatever GMP version happens to be on the users system,
&gt; &gt; &gt; and go to &quot;GPLv2 or later&quot;. Under this option we could not even link
&gt; &gt; &gt; against the latest version of GSL.

&gt; &gt; This is not an option, since it directly violates one of the 3 basic
&gt; &gt; principles of Sage:

&gt; &gt;    (1) provide a complete open source mathematical software distribution,
&gt; &gt;    (2) provide a new library,
&gt; &gt;    (3) provide a way for existing math programs to talk with Sage.

&gt; &gt; Including GMP is critical to Sage's usability.

&gt; &gt; Anyway, you're might be confusing the Sage library and the Sage distribution as
&gt; &gt; a whole.  The options to me seem to be:

&gt; &gt;   (1) fork GMP, GSL, GNUtls, etc., or

&gt; &gt;   (2) change the Sage Python library and Singular to GPL v2 or later.

&gt; &gt; If (2) were the case, the whole Sage distribution would be possible, and would
&gt; &gt; in effect have the GPL v3 license.   It appears that (1) would doom Sage to
&gt; &gt; irrelevance, but that (2) is manageable, depending on what the Singular
&gt; &gt; copyright holders decide.

&gt; &gt; &gt; With regard to Pari, we really need to ask them what their license is.
&gt; &gt; &gt; I don't see them explicitly granting the right to (at our option) use
&gt; &gt; &gt; Pari under the terms of later versions of the GPL.

&gt; &gt; Nothing anywhere in the PARI distribution or startup banner makes any
&gt; &gt; statement about
&gt; &gt; GPL versions.  The only mention of GPL versions anywhere in Pari is in
&gt; &gt; the LICENSE.txt
&gt; &gt; file that they copied from the GNU website.  This means that one can
&gt; &gt; apply any version
&gt; &gt; of the GPL to PARI.  Please re-read section 9 of the GPL, especially
&gt; &gt; the last sentence
&gt; &gt; in the second paragraph below:

&gt; &gt; &quot;9. The Free Software Foundation may publish revised and/or new versions
&gt; &gt; of the General Public License from time to time.  Such new versions will
&gt; &gt; be similar in spirit to the present version, but may differ in detail to
&gt; &gt; address new problems or concerns.

&gt; &gt; Each version is given a distinguishing version number.  If the Program
&gt; &gt; specifies a version number of this License which applies to it and &quot;any
&gt; &gt; later version&quot;, you have the option of following the terms and conditions
&gt; &gt; either of that version or of any later version published by the Free
&gt; &gt; Software Foundation.  If the Program does not specify a version number of
&gt; &gt; this License, you may choose any version ever published by the Free Software
&gt; &gt; Foundation.&quot;

&gt; &gt; This last sentence was quite a surprise to me!  But it's there.

&gt; &gt; &gt; However, my bet is
&gt; &gt; &gt; they will go to &quot;GPLv2 or later&quot; since they too wish to link against
&gt; &gt; &gt; GMP.

&gt; &gt; But I don't think they will even worry about it given that
&gt; &gt; (I think) technically they already have.

&gt; &gt; William
">

--
William Stein
Associate Professor of Mathematics
University of Washington
http://wstein.org
</POST>
<POST>
<POSTER> mabshoff &lt;Michael.Absh...@fsmath.mathematik.uni-dortmund.de&gt; </POSTER>
<POSTDATE> 2007-09-24T11:59:00 </POSTDATE>
On Sep 24, 5:22 pm, &quot;William Stein&quot; &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 9/24/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

&gt; &gt; OK, I hadn't read section 9 of the GPL. So now I agree with you that
&gt; &gt; Pari doesn't need to do anything. Excellent.

&gt; :-)

&gt; &gt; So basically all the new lines of SAGE code would be a library, which
&gt; &gt; can be linked against other libraries, and would be v2 or later.

&gt; Yep.

&gt; &gt; The SAGE tarball, that contains everything, including GMP, would be
&gt; &gt; licensed under v3. But everything in it will need to be &quot;V2 or later&quot;
&gt; &gt; or &quot;v3 or later&quot;. At present only SINGULAR is a problem in this
&gt; &gt; regard.

&gt; That's probably the case.  Does anybody know anything about the
&gt; plans for Singular (Martin?  Michael?).
">

I do not know.

<QUOTE PREVIOUSPOST="
&gt; &gt; With regards to Magma, yes, they'll be forced to dynamically link
&gt; &gt; against GMP. I wouldn't put it past them to write their own library
&gt; &gt; and dump GMP though. Some of their core code clearly already uses
&gt; &gt; their own code. For example they use different code for FFT
&gt; &gt; multiplication of integers and clearly have a different algorithm for
&gt; &gt; integer division. They only support a few target platforms, so this is
&gt; &gt; not that hard for them to manage.

&gt; Magma supports more target platforms than any other commercial
&gt; mathematical software and more targets than Sage.  If you go here:
&gt; https://magma.maths.usyd.edu.au/magma/export/
&gt; you'll see they support all of:

&gt; Alpha (Linux)
">

Have access, but who cares about Linux ob Alpha? This should be fairly
easy, but after the Alphacide by Intel few alpha clusters should be
left.

<QUOTE PREVIOUSPOST="
&gt; Alpha (OSF/Tru64)
">

Have access, but who cares about OSF on Alpha ? Shouldn't be too hard
assuming one builds his/her own toolchain. Chances are that if you own
an alpha that by now you have switched that box over to Linux - if you
need to ask why I just recommend using OSF for an hour or two :)

<QUOTE PREVIOUSPOST="
&gt; AMD64/Intel64 (Linux)
">

Yep.

<QUOTE PREVIOUSPOST="
&gt; AMD64/Intel64 (Solaris)
">

Close to getting it to work, but the 32 bit version also is close to
work.

<QUOTE PREVIOUSPOST="
&gt; i386/PC (Linux)
">

Yep.

<QUOTE PREVIOUSPOST="
&gt; i386/PC (Windows)
">

Well, this is a tricky one, especially AMD64/Intel64 - which Magma
doesn't seem to support, but I consider this possible. This should
overall dwarf the rest of the potential Sage installations, if you
look at high schools and not the university scene. But even in the
university scene there is a surprising amount of Windows around in my
experience. Getting at least Cygwin to (mostly) work again isn't that
hard, but it seems that nobody has the time to do so and I rather work
on Solaris than Windows.

<QUOTE PREVIOUSPOST="
&gt; IBM PowerPC64 (AIX)
">

Nope, lack access, but not a very high priority in my opinion.

<QUOTE PREVIOUSPOST="
&gt; IBM PowerPC64 (Linux)
">

Well, 32 bit runs and 64 bit isn't very difficult to do, just need
something faster than a PS3 to build it. We also need to do something
about multilib configurations for Sage in general.

<QUOTE PREVIOUSPOST="
&gt; Intel IA64 (Linux)
&gt; Macintosh 32-bit Intel (OS X)
&gt; Macintosh G4 (Mac OS X)
&gt; Macintosh G5 (Mac OS X)
">

Yep to all of the above.

<QUOTE PREVIOUSPOST="
&gt; Sparc (Solaris)
&gt; Sparc64 (Solaris)
">

Getting close.

<QUOTE PREVIOUSPOST="
&gt; It's actually pretty amazing.   We should consider having similar
&gt; support for Sage
&gt; a challenge and priority.
">

:) - well at least William has gotten my proposal about Sage/Windows/
MSVC.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; They won't jettison GMP.  They also use several other LGPL (and soon
&gt; to be LGPLv3)
&gt; libraries, and I bet they'll just dynamically link them.  After all,
&gt; they already support
&gt; that functionality (it's just not the default).

&gt; &gt; Possibly some other packages they use make use of GMP, and if *they*
&gt; &gt; go GPLv3 then likely Magma will just have to dynamically link to all
&gt; &gt; of those. Anyway, I think you are right. They will probably distribute
&gt; &gt; those libraries separately along with the LGPLv3 and just dynamically
&gt; &gt; link to them. That will give people the option of making drop in
&gt; &gt; replacements for them, according to the terms of the LGPLv3.

&gt; Yep. That's what Maple already does too.

&gt; It could be fun, because you could write a replacement to GMP that
&gt; records all arithmetic operations that are done using GMP, then link
&gt; Maple against it and see what Maple is doing... :-)
">

Hehe, I would consider it next to impossible to catch up with GMP in
the short term. Pretty much any other arbitrary precision library out
there has folded. While it is certainly true that working with some of
the GMP people can be hard it seems to be much easier to carry a
couple patches. In regards to remedy the Core Duo situation I can
probably say something about that at SD5.

<QUOTE PREVIOUSPOST="
&gt; &gt; Bill.
">

&lt;SNIP&gt;

Cheers,

Michael
</POST>
<POST>
<POSTER> &quot;John Cremona&quot; &lt;john.crem...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T12:04:00 </POSTDATE>
I had an alpha/OSF for 5 years until March 2004;  by then it was
essentially the only such machine running Magma in the world with one
exception being the machine they built Magma on for me.  I think they
were relieved when it went...

John

On 9/24/07, mabshoff &lt;Michael.Absh ... @fsmath.mathematik.uni-dortmund.de&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Sep 24, 5:22 pm, &quot;William Stein&quot; &lt;wst ... @gmail.com&gt; wrote:
&gt; &gt; On 9/24/07, Bill Hart &lt;goodwillh ... @googlemail.com&gt; wrote:

&gt; &gt; &gt; OK, I hadn't read section 9 of the GPL. So now I agree with you that
&gt; &gt; &gt; Pari doesn't need to do anything. Excellent.

&gt; &gt; :-)

&gt; &gt; &gt; So basically all the new lines of SAGE code would be a library, which
&gt; &gt; &gt; can be linked against other libraries, and would be v2 or later.

&gt; &gt; Yep.

&gt; &gt; &gt; The SAGE tarball, that contains everything, including GMP, would be
&gt; &gt; &gt; licensed under v3. But everything in it will need to be &quot;V2 or later&quot;
&gt; &gt; &gt; or &quot;v3 or later&quot;. At present only SINGULAR is a problem in this
&gt; &gt; &gt; regard.

&gt; &gt; That's probably the case.  Does anybody know anything about the
&gt; &gt; plans for Singular (Martin?  Michael?).

&gt; I do not know.

&gt; &gt; &gt; With regards to Magma, yes, they'll be forced to dynamically link
&gt; &gt; &gt; against GMP. I wouldn't put it past them to write their own library
&gt; &gt; &gt; and dump GMP though. Some of their core code clearly already uses
&gt; &gt; &gt; their own code. For example they use different code for FFT
&gt; &gt; &gt; multiplication of integers and clearly have a different algorithm for
&gt; &gt; &gt; integer division. They only support a few target platforms, so this is
&gt; &gt; &gt; not that hard for them to manage.

&gt; &gt; Magma supports more target platforms than any other commercial
&gt; &gt; mathematical software and more targets than Sage.  If you go here:
&gt; &gt; https://magma.maths.usyd.edu.au/magma/export/
&gt; &gt; you'll see they support all of:

&gt; &gt; Alpha (Linux)

&gt; Have access, but who cares about Linux ob Alpha? This should be fairly
&gt; easy, but after the Alphacide by Intel few alpha clusters should be
&gt; left.

&gt; &gt; Alpha (OSF/Tru64)

&gt; Have access, but who cares about OSF on Alpha ? Shouldn't be too hard
&gt; assuming one builds his/her own toolchain. Chances are that if you own
&gt; an alpha that by now you have switched that box over to Linux - if you
&gt; need to ask why I just recommend using OSF for an hour or two :)

&gt; &gt; AMD64/Intel64 (Linux)

&gt; Yep.

&gt; &gt; AMD64/Intel64 (Solaris)

&gt; Close to getting it to work, but the 32 bit version also is close to
&gt; work.

&gt; &gt; i386/PC (Linux)

&gt; Yep.

&gt; &gt; i386/PC (Windows)

&gt; Well, this is a tricky one, especially AMD64/Intel64 - which Magma
&gt; doesn't seem to support, but I consider this possible. This should
&gt; overall dwarf the rest of the potential Sage installations, if you
&gt; look at high schools and not the university scene. But even in the
&gt; university scene there is a surprising amount of Windows around in my
&gt; experience. Getting at least Cygwin to (mostly) work again isn't that
&gt; hard, but it seems that nobody has the time to do so and I rather work
&gt; on Solaris than Windows.

&gt; &gt; IBM PowerPC64 (AIX)

&gt; Nope, lack access, but not a very high priority in my opinion.

&gt; &gt; IBM PowerPC64 (Linux)

&gt; Well, 32 bit runs and 64 bit isn't very difficult to do, just need
&gt; something faster than a PS3 to build it. We also need to do something
&gt; about multilib configurations for Sage in general.

&gt; &gt; Intel IA64 (Linux)
&gt; &gt; Macintosh 32-bit Intel (OS X)
&gt; &gt; Macintosh G4 (Mac OS X)
&gt; &gt; Macintosh G5 (Mac OS X)

&gt; Yep to all of the above.

&gt; &gt; Sparc (Solaris)
&gt; &gt; Sparc64 (Solaris)

&gt; Getting close.

&gt; &gt; It's actually pretty amazing.   We should consider having similar
&gt; &gt; support for Sage
&gt; &gt; a challenge and priority.

&gt; :) - well at least William has gotten my proposal about Sage/Windows/
&gt; MSVC.

&gt; &gt; They won't jettison GMP.  They also use several other LGPL (and soon
&gt; &gt; to be LGPLv3)
&gt; &gt; libraries, and I bet they'll just dynamically link them.  After all,
&gt; &gt; they already support
&gt; &gt; that functionality (it's just not the default).

&gt; &gt; &gt; Possibly some other packages they use make use of GMP, and if *they*
&gt; &gt; &gt; go GPLv3 then likely Magma will just have to dynamically link to all
&gt; &gt; &gt; of those. Anyway, I think you are right. They will probably distribute
&gt; &gt; &gt; those libraries separately along with the LGPLv3 and just dynamically
&gt; &gt; &gt; link to them. That will give people the option of making drop in
&gt; &gt; &gt; replacements for them, according to the terms of the LGPLv3.

&gt; &gt; Yep. That's what Maple already does too.

&gt; &gt; It could be fun, because you could write a replacement to GMP that
&gt; &gt; records all arithmetic operations that are done using GMP, then link
&gt; &gt; Maple against it and see what Maple is doing... :-)

&gt; Hehe, I would consider it next to impossible to catch up with GMP in
&gt; the short term. Pretty much any other arbitrary precision library out
&gt; there has folded. While it is certainly true that working with some of
&gt; the GMP people can be hard it seems to be much easier to carry a
&gt; couple patches. In regards to remedy the Core Duo situation I can
&gt; probably say something about that at SD5.

&gt; &gt; &gt; Bill.

&gt; &lt;SNIP&gt;

&gt; Cheers,

&gt; Michael
">

--
John Cremona
</POST>
<POST>
<POSTER> mabshoff &lt;Michael.Absh...@fsmath.mathematik.uni-dortmund.de&gt; </POSTER>
<POSTDATE> 2007-09-24T12:31:00 </POSTDATE>
&lt;SNIP&gt;

<QUOTE PREVIOUSPOST="
&gt; It could be fun, because you could write a replacement to GMP that
&gt; records all arithmetic operations that are done using GMP, then link
&gt; Maple against it and see what Maple is doing... :-)
">

Well, if you really want to know just hook a couple logging functions
in the gmp lib and you are done. That could even be done with their
version via LD_PRELOAD :). No need to program anything from scratch.
Does Maple have a reverse engineering clause?

&lt;SNIP&gt;

<QUOTE PREVIOUSPOST="
&gt;  William
">

Cheers,

Michael

<QUOTE PREVIOUSPOST="
&gt; --
&gt; William Stein
&gt; Associate Professor of Mathematics
&gt; University of Washington http://wstein.org
">
</POST>
<POST>
<POSTER> &quot;Gonzalo Tornaria&quot; &lt;torna...@math.utexas.edu&gt; </POSTER>
<POSTDATE> 2007-09-24T12:44:00 </POSTDATE>
On 9/24/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Regarding (1), I'll define the copyright holders of the Sage *library*
&gt; to be the names
&gt; listed in the output of the following command (with some slight
&gt; editing, e.g., since
&gt; copyright statements for octave are in doctests):

&gt;     $ cd SAGE_ROOT/devel/sage
&gt;     $ grep -r -i Copyright  * &gt; a.txt
">

Should you actually grep for author lines as well (even with some context!)

E.g c_lib/mp{n,z}_pylong.c read

* Author:  Gonzalo Tornaría &lt;torna ... @math.utexas.edu&gt;
* Date:    March 2006
* License: GPL v2

(that's even explicit about license, altough no copyright word in the
whole file) and my name also appears in a few other places as author,
altough no explicit license.
Forget about me, but one could worry whether there are more authors
with no copyright statement (but clear author statements, thus clear
copyright hold).

Something I noticed while grepping is that some files have a heading
claiming GPL license with no version number which, as mentioned above,
seem to effectively mean any version of GPL. OTOH, some files (notably
sage/libs/pari/gen.pyx) have no copyright NOR license statement.
Besides, sage-2.8.5.spkg has no clear &quot;top-level&quot; copyright notice
(there is a copy of GPL v2 in directory c_lib, and an (unversioned)
statement in file PKG-INFO.)

<QUOTE PREVIOUSPOST="
&gt; These are the people that both contributed code to the core library and
&gt; took the time to actually explicitly put their names as copyright holders
&gt; on files (in most cases this means they were the first to create the given
&gt; file).   They contributed code under the assumption that their code is
&gt; GPL v2 only, so permission should be obtained before changing the
&gt; license on their code to GPL v2 or later.
">

I contributed under that assumption. I don't like GPL v2 or later, I
might be closer to GPL v2 or v3 than that. Overall, I agree with
Joel's comments earlier in this thread.

For the record, I don't think I would have contributed to BSD or MIT
licensed sage.

Gonzalo
</POST>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-24T13:03:00 </POSTDATE>
On 9/24/07, Gonzalo Tornaria &lt;torna ... @math.utexas.edu&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; These are the people that both contributed code to the core library and
&gt; &gt; took the time to actually explicitly put their names as copyright holders
&gt; &gt; on files (in most cases this means they were the first to create the given
&gt; &gt; file).   They contributed code under the assumption that their code is
&gt; &gt; GPL v2 only, so permission should be obtained before changing the
&gt; &gt; license on their code to GPL v2 or later.

&gt; I contributed under that assumption. I don't like GPL v2 or later, I
&gt; might be closer to GPL v2 or v3 than that. Overall, I agree with
&gt; Joel's comments earlier in this thread.
">

Wait, are you saying that you would not allow your code to be re-licensed
&quot;GPL v2 or later&quot; for Sage?   Or, are you just saying you don't like it,
but you would do it.

There's no way I'm going to do &quot;GPL v2 or v3 only&quot;.  It doesn't solve anything,
since they same problem will come up again in a few years, and it
will vastly more difficult to move forward since people will be so
hard to contact.  That could effectively kill Sage.   The options are either
&quot;GPL v2 or later&quot; (and remove any code from Sage that can't be relicensed)
or &quot;fork GMP and GSL&quot;.   I don't like either option at all, and I right now I
really hate the FSF for forcing this crap on me.  But that's the situation
we're in.

-- William
</POST>
<POST>
<POSTER> &quot;Gonzalo Tornaria&quot; &lt;torna...@math.utexas.edu&gt; </POSTER>
<POSTDATE> 2007-09-24T13:31:00 </POSTDATE>
On 9/24/07, William Stein &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; I contributed under that assumption. I don't like GPL v2 or later, I
&gt; &gt; might be closer to GPL v2 or v3 than that. Overall, I agree with
&gt; &gt; Joel's comments earlier in this thread.

&gt; Wait, are you saying that you would not allow your code to be re-licensed
&gt; &quot;GPL v2 or later&quot; for Sage?   Or, are you just saying you don't like it,
&gt; but you would do it.
">

At this time I'm just saying that I don't like it.

<QUOTE PREVIOUSPOST="
&gt; There's no way I'm going to do &quot;GPL v2 or v3 only&quot;.  It doesn't solve anything,
&gt; since they same problem will come up again in a few years, and it
&gt; will vastly more difficult to move forward since people will be so
&gt; hard to contact.  That could effectively kill Sage.   The options are either
&gt; &quot;GPL v2 or later&quot; (and remove any code from Sage that can't be relicensed)
&gt; or &quot;fork GMP and GSL&quot;.   I don't like either option at all, and I right now I
&gt; really hate the FSF for forcing this crap on me.  But that's the situation
&gt; we're in.
">

I know, but this only makes me *more* hesitant to be happy with the switch.

I understood the plan was to ignore the issue for the time being, and
see how other projects react. I think this was a good idea, and I
think it's still feasible to wait and see. The fact that GMP and GSL
have switched to GPLv3 is not the reaction of other projects, but
rather the problem itself. I'd rather take a decision based on what
*other* players do, rather than what the FSF does (which we knew well
in advance).

Anyway, GMP has been stale for... 5 years? And I gather that GSL is
not critical. Maybe someone else will fork GMP in the coming months,
or maybe GMP will stay frozen. We never know...

Just my 2 cents.

Gonzalo
</POST>
</TEXT>
</BODY>
</DOC>
