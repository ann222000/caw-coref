<DOC>
<DOCID> eng-NG-31-141405-8669842 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-08-14T00:07:00 </DATETIME>
<BODY>
<HEADLINE>
: Fuzzy Logic on PIC16F877A
</HEADLINE>
<TEXT>
<POST>
<POSTER> &quot;Mujahidin&quot; &lt;iddh...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-14T00:07:00 </POSTDATE>
Can anyone tell me how can I use the fuzzy logic kernel on PIC16F877A. Where
can I get tutorial for this?

Regards,

Mujahidin

http://iddhien.com &lt; http://iddhien.com/ &gt;

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-14T07:48:00 </POSTDATE>
There is a lot of information on fuzzy logic on Byte Craft's website
http://www.bytecraft.com/Fuzzy_Logic

Fuzz-C is a fuzzy logic preprocessor that translates linguistic variables
and their operation into C. The examples on the web site have both
the original mixed C and fuzzy logic code and generated C.

Regards

Walter Banks
--
Byte Craft Limited
Tel. (519) 888-6911
http://www.bytecraft.com
wal ... @bytecraft.com

<QUOTE PREVIOUSPOST="
Mujahidin wrote:
&gt; Can anyone tell me how can I use the fuzzy logic kernel on PIC16F877A. Where
&gt; can I get tutorial for this?

&gt; Regards,

&gt; Mujahidin

&gt; http://iddhien.com &lt; http://iddhien.com/ &gt;

&gt; --
&gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; View/change your membership options at
&gt; http://mailman.mit.edu/mailman/listinfo/piclist
">

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Xiaofan Chen&quot; &lt;xiaof...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-14T08:55:00 </POSTDATE>
On 8/14/07, Mujahidin &lt;iddh ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Can anyone tell me how can I use the fuzzy logic kernel on PIC16F877A. Where
&gt; can I get tutorial for this?
">

Long time never heard of fuzzy logic. Is it still popular?
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Howard Winter&quot; &lt;H...@H2Org.demon.co.uk&gt; </POSTER>
<POSTDATE> 2007-08-14T09:21:00 </POSTDATE>
Xiaofan,

<QUOTE PREVIOUSPOST="
On Tue, 14 Aug 2007 20:55:43 +0800, Xiaofan Chen wrote:
&gt; Long time never heard of fuzzy logic. Is it still popular?
">

Sort-of!  :-)

Cheers,

Howard Winter
St.Albans, England

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-14T09:34:00 </POSTDATE>
Fuzzy logic has melted into part of the mainstream. This is a
very effective technique to deal with non linear systems. It is
well suited to control a system whose load and dynamics are
widely changing. A airplane burning off fuel for example.
There is a fuzzy PID example on our web site.

Fuzzy works well when dealing with a lot of potential control
parameters that must be combined.  The computational space
depends on the resolution requirements of the results in many
applications is 8 bits like the Microchip PIC's.

Our customers are using fuzzy for many diverse applications
that need to make decisions with limited or incomplete
information. Fuzzy is very good at choosing the best of several
potentially bad choices.

For a more esoteric use of fuzzy logic there is a note on our
web site about using it to control a massive (pun intended)
animated army. Each military type had a fuzzy logic rule set
that defined behaviour given its surroundings. The animation
program then stepped through the battle. Kind of a 21st
century version of Conway's life. This technique was used
in the &quot;Lord of the Rings&quot; battle scenes. We  have seen similar
uses in role playing games.
Look for the title &quot; Fuzzy Logic's a Star&quot; in
http://www.bytecraft.com/Tidbits

Regards

Walter Banks
--
Byte Craft Limited
Tel. (519) 888-6911
http://www.bytecraft.com
wal ... @bytecraft.com
--------------------------------------------------------------------

<QUOTE PREVIOUSPOST="
Xiaofan Chen wrote:
&gt; On 8/14/07, Mujahidin &lt;iddh ... @gmail.com&gt; wrote:
&gt; &gt; Can anyone tell me how can I use the fuzzy logic kernel on PIC16F877A. Where
&gt; &gt; can I get tutorial for this?

&gt; Long time never heard of fuzzy logic. Is it still popular?
&gt; --
&gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; View/change your membership options at
&gt; http://mailman.mit.edu/mailman/listinfo/piclist
">

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Mark Rages&quot; &lt;markra...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-14T18:47:00 </POSTDATE>
libapache2-mod-python

On 8/14/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Fuzzy logic has melted into part of the mainstream. This is a
&gt; very effective technique to deal with non linear systems. It is
&gt; well suited to control a system whose load and dynamics are
&gt; widely changing. A airplane burning off fuel for example.
">

A traditional control system works better than fuzzy when the system
can be accurately modeled.

If a system cannot be modeled easily, a fuzzy controller is better
than nothing, and often better than a traditional controller based on
an inaccurate model.

Bob Pease has a good description of the hype around fuzzy logic
controllers (I was going through engineering school at the time and I
remember a LOT of hype):

http://www.national.com/rap/Application/0,1570,25,00.html

Regards,
Mark
markrages@gmail
--
Mark Rages, Engineer
Midwest Telecine LLC
markra ... @midwesttelecine.com
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Peter Todd &lt;p...@petertodd.ca&gt; </POSTER>
<POSTDATE> 2007-08-14T20:31:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
On Tue, Aug 14, 2007 at 05:47:17PM -0500, Mark Rages wrote:
&gt; &gt; Fuzzy logic has melted into part of the mainstream. This is a
&gt; &gt; very effective technique to deal with non linear systems. It is
&gt; &gt; well suited to control a system whose load and dynamics are
&gt; &gt; widely changing. A airplane burning off fuel for example.

&gt; A traditional control system works better than fuzzy when the system
&gt; can be accurately modeled.

&gt; If a system cannot be modeled easily, a fuzzy controller is better
&gt; than nothing, and often better than a traditional controller based on
&gt; an inaccurate model.
">

Can fuzzy controllers perform better in situations where the specifics
of what they are controlling is changing? I read the below article, and
it mentions a ball balancing on a beam, what if the beam were floppy? Or
if the beams modulus (right term?) was changing?

<QUOTE PREVIOUSPOST="
&gt; Bob Pease has a good description of the hype around fuzzy logic
&gt; controllers (I was going through engineering school at the time and I
&gt; remember a LOT of hype):

&gt; http://www.national.com/rap/Application/0,1570,25,00.html
">

- --
http://petertodd.org
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD4DBQFGwklN3bMhDbI9xWQRAgLcAJYlWdlKhIxvt8rcAlwuzhvMzkt+AKCINx4q
g2sg81/FsNSDxJYmA2Zhcw==
=aPd2
-----END PGP SIGNATURE-----
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Gerhard Fiedler &lt;li...@connectionbrazil.com&gt; </POSTER>
<POSTDATE> 2007-08-14T23:24:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Peter Todd wrote:
&gt; Can fuzzy controllers perform better in situations where the specifics
&gt; of what they are controlling is changing? I read the below article, and
&gt; it mentions a ball balancing on a beam, what if the beam were floppy? Or
&gt; if the beams modulus (right term?) was changing?
">

If you can get a clue of how it is changing, it might. If not, just using
fuzzy doesn't help -- you need to have a clue about the target system.
Fuzzy's strength seems to be to easily translate the application area
knowledge into algorithms, not to generate knowledge out of nothing :)

Gerhard

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Peter Todd &lt;p...@petertodd.ca&gt; </POSTER>
<POSTDATE> 2007-08-15T01:29:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
On Wed, Aug 15, 2007 at 12:24:46AM -0300, Gerhard Fiedler wrote:
&gt; Peter Todd wrote:

&gt; &gt; Can fuzzy controllers perform better in situations where the specifics
&gt; &gt; of what they are controlling is changing? I read the below article, and
&gt; &gt; it mentions a ball balancing on a beam, what if the beam were floppy? Or
&gt; &gt; if the beams modulus (right term?) was changing?

&gt; If you can get a clue of how it is changing, it might. If not, just using
&gt; fuzzy doesn't help -- you need to have a clue about the target system.
&gt; Fuzzy's strength seems to be to easily translate the application area
&gt; knowledge into algorithms, not to generate knowledge out of nothing :)
">

Fair enough, that's for genetic algorithms, and then you gotta be really
good at deciding which one is a slightly better solution so I hear. :)

So, for instance, with a PID-based control system would an engineer ever
do something like model the problem at hand, but then also model how the
problem is changing and, say, change the PID constants dynamicly?

- --
http://petertodd.org
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFGwo9Q3bMhDbI9xWQRAqLQAJ41welQITu+6cDorSQZCX6VOUnVzQCfbeLR
0kP13lV0SCyMupXFFmTLDg0=
=6Alz
-----END PGP SIGNATURE-----
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Gerhard Fiedler &lt;li...@connectionbrazil.com&gt; </POSTER>
<POSTDATE> 2007-08-15T07:55:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Peter Todd wrote:
&gt;&gt;&gt; Can fuzzy controllers perform better in situations where the specifics
&gt;&gt;&gt; of what they are controlling is changing? I read the below article,
&gt;&gt;&gt; and it mentions a ball balancing on a beam, what if the beam were
&gt;&gt;&gt; floppy? Or if the beams modulus (right term?) was changing?

&gt;&gt; If you can get a clue of how it is changing, it might. If not, just
&gt;&gt; using fuzzy doesn't help -- you need to have a clue about the target
&gt;&gt; system. Fuzzy's strength seems to be to easily translate the
&gt;&gt; application area knowledge into algorithms, not to generate knowledge
&gt;&gt; out of nothing :)

&gt; Fair enough, that's for genetic algorithms, and then you gotta be really
&gt; good at deciding which one is a slightly better solution so I hear. :)

&gt; So, for instance, with a PID-based control system would an engineer ever
&gt; do something like model the problem at hand, but then also model how the
&gt; problem is changing and, say, change the PID constants dynamicly?
">

Yes, there's a whole set of quite well developed mathematical foundations
that started from there (adaptive controllers). In the generic form, this
is not a PID controller anymore, but a multi-pole controller that adapts
itself to a model of the process. It basically uses the feedback from the
process to update the model, which then in turn updates its model of the
controller, which is used to send stimulus to the process. But the same can
of course be done with a PID controller, or also a more limited form; say,
just change the PID parameters according to a table that has a set of
parameters for different value ranges of the controlled value.

Gerhard

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-15T08:59:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Mark Rages wrote:
&gt; libapache2-mod-python

&gt; On 8/14/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:
&gt; &gt; Fuzzy logic has melted into part of the mainstream. This is a
&gt; &gt; very effective technique to deal with non linear systems. It is
&gt; &gt; well suited to control a system whose load and dynamics are
&gt; &gt; widely changing. A airplane burning off fuel for example.

&gt; A traditional control system works better than fuzzy when the system
&gt; can be accurately modeled.
">

A accurately modelled system implemented with current state of
fuzzy technology will produce very similar results to a traditional
control system.

<QUOTE PREVIOUSPOST="
&gt; If a system cannot be modeled easily, a fuzzy controller is better
&gt; than nothing, and often better than a traditional controller based on
&gt; an inaccurate model.
">

I basically agree. In this case fuzzy has two advantages. 1) The ability
to smoothly move between dominate rule sets and 2) Normalize the
computation so that most of the actual math is done at the resolution
required by the output to the control system.

<QUOTE PREVIOUSPOST="
&gt; Bob Pease has a good description of the hype around fuzzy logic
&gt; controllers (I was going through engineering school at the time and I
&gt; remember a LOT of hype):

&gt; http://www.national.com/rap/Application/0,1570,25,00.html
">

Bob wrote a provocative column often titled &quot;Whats this ... about
anyway&quot; He was a talented analog guy who worked at National
and regularly stirred up debate by forcing people to get their
facts straight. In this piece he acknowledges that in non linear
systems fuzzy has advantages. Bob Pease was a part of several
of the Fuzzy Logic conferences in the 90's and at a couple of them
I had a chance to formally debate him in.

I need to be clear about tone fuzzy should be used where appropriate
as should any tool used to solve engineering problems. In the early
90's it took us about two years before we found an application that
fuzzy was the appropriate solution (simpler and more reliable) than
the conventional alternatives. Once that happened many applications
became appropriate to be implemented in fuzzy logic with linguistic
variables. What changed was the way some problems could be visualized.

Take the following example. We want to implement a green home
environment control system. In this system we want to reduce energy
consumption but minimize the personal discomfort. In the following code
fragment IS  in an if statement is a boolean operator with a continuous
range between 0 and 1. IS in the THEN part in an IF statement is
an assignment weighed by the result of the boolean compares, kind
of a level of logic commitment. Lets say the temperature in the room
is 77F (25C). Ask a bunch of your friends if the room is hot at that
temp, you are likely to get well sort of on a scale of 0..1 about a
0.65 (hot is a linguistic variable) ac is a linguistic variable and ON is
a linguistic constant likely set to 1.0. Executing the following statement
will set ac to 0.65

IF room IS hot  THEN  ac   IS ON

In a fuzzy rule set if ac is evaluated multiple times as in the following
example from a real environment controller it is combined for an
overall result to determine if the ac should be on or off.

FUZZY room_control
{
IF room IS cold THEN
ac   IS OFF
heat IS ON

IF room IS normal THEN
ac   IS OFF
heat IS OFF

IF room IS hot
THEN
ac   IS ON
heat IS OFF
IF room IS cold AND day IS morning
THEN   heat IS OFF
IF room IS cold AND OutsideTemp IS hot
THEN    heat IS OFF
IF room IS hot AND OutsideTemp IS cold
THEN   ac IS OFF
}

The last three rules are green rules designed to minimize energy
usage. The easiest way to understand a fuzzy rule is to read it
out loud.

Regards,

Walter Banks
--
Byte Craft Limited
Tel. (519) 888-6911
http://www.bytecraft.com
wal ... @bytecraft.com

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Peter Todd &lt;p...@petertodd.ca&gt; </POSTER>
<POSTDATE> 2007-08-15T10:33:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; FUZZY room_control
&gt;    {
&gt;     IF room IS cold THEN
&gt;           ac   IS OFF
&gt;           heat IS ON

&gt;     IF room IS normal THEN
&gt;            ac   IS OFF
&gt;            heat IS OFF

&gt;     IF room IS hot
&gt;         THEN
&gt;            ac   IS ON
&gt;            heat IS OFF
&gt;     IF room IS cold AND day IS morning
&gt;            THEN   heat IS OFF
&gt;     IF room IS cold AND OutsideTemp IS hot
&gt;           THEN    heat IS OFF
&gt;     IF room IS hot AND OutsideTemp IS cold
&gt;           THEN   ac IS OFF
&gt;    }
">

So the above is actual rule-sets, directly used by whatever code
generator you were using? I understand it would need more definitions
and the like as you said to fill it all out, but, wow, it sure makes it
looks easy.

- --
http://petertodd.org
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFGww6j3bMhDbI9xWQRAiaZAJ4wC2NsQXIAPlcinNPGdDBZVYmaJQCgjAov
uTtRfmfX9J93WZmJp4RPuDg=
=GAXH
-----END PGP SIGNATURE-----
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Mark Rages&quot; &lt;markra...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-15T11:35:00 </POSTDATE>
On 8/15/07, Peter Todd &lt;p ... @petertodd.ca&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; Hash: SHA1

&gt; On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; &gt; FUZZY room_control
&gt; &gt;    {
&gt; &gt;     IF room IS cold THEN
&gt; &gt;           ac   IS OFF
&gt; &gt;           heat IS ON

&gt; &gt;     IF room IS normal THEN
&gt; &gt;            ac   IS OFF
&gt; &gt;            heat IS OFF

&gt; &gt;     IF room IS hot
&gt; &gt;         THEN
&gt; &gt;            ac   IS ON
&gt; &gt;            heat IS OFF
&gt; &gt;     IF room IS cold AND day IS morning
&gt; &gt;            THEN   heat IS OFF
&gt; &gt;     IF room IS cold AND OutsideTemp IS hot
&gt; &gt;           THEN    heat IS OFF
&gt; &gt;     IF room IS hot AND OutsideTemp IS cold
&gt; &gt;           THEN   ac IS OFF
&gt; &gt;    }

&gt; So the above is actual rule-sets, directly used by whatever code
&gt; generator you were using? I understand it would need more definitions
&gt; and the like as you said to fill it all out, but, wow, it sure makes it
&gt; looks easy.
">

No, the IF /THENs aren't binary, they are fuzzy.

http://en.wikipedia.org/wiki/Fuzzy_logic

Although the output variables will have to be quantized to on or off
in this system.  That's the big source of nonlinearity in this
example.

Regards,
Mark
markrages@gmail
--
Mark Rages, Engineer
Midwest Telecine LLC
markra ... @midwesttelecine.com
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Mark Rages&quot; &lt;markra...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-15T11:42:00 </POSTDATE>
On 8/15/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; A accurately modelled system implemented with current state of
&gt; fuzzy technology will produce very similar results to a traditional
&gt; control system.
">

But the traditional control system is mathematically tractable.

Regards,
Mark
markrages@gmail
--
Mark Rages, Engineer
Midwest Telecine LLC
markra ... @midwesttelecine.com
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-15T12:12:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Mark Rages wrote:
&gt; On 8/15/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

&gt; &gt; A accurately modelled system implemented with current state of
&gt; &gt; fuzzy technology will produce very similar results to a traditional
&gt; &gt; control system.

&gt; But the traditional control system is mathematically tractable.
">

As is the fuzzy logic / linguistic variable implementation. This was
an open issue until the mid 90's . In the early 90's I would have
agreed with you. Now the linguistic variable implementation
can be proven just as solid. fuzzy is so misleading. I will try
to track some references down. A bunch of people were
working on this and arrived at solutions more or less at the
same time. Bart Kosko and Zedeh were both actively working
on this (or rather their grad students were and they got the
credit) in this 93 to 95/96. That is where I will start.

w..

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Mark Rages&quot; &lt;markra...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-15T12:37:00 </POSTDATE>
On 8/15/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; As is the fuzzy logic / linguistic variable implementation. This was
&gt; an open issue until the mid 90's . In the early 90's I would have
&gt; agreed with you. Now the linguistic variable implementation
&gt; can be proven just as solid. fuzzy is so misleading. I will try
&gt; to track some references down. A bunch of people were
&gt; working on this and arrived at solutions more or less at the
&gt; same time. Bart Kosko and Zedeh were both actively working
&gt; on this (or rather their grad students were and they got the
&gt; credit) in this 93 to 95/96. That is where I will start.
">

Well, I'm out of date then.

Can you describe, in general terms, how you would compute the minimum
cycle time for your example?  (I learn best by example.)

Regards,
Mark
markrages@gmail
--
Mark Rages, Engineer
Midwest Telecine LLC
markra ... @midwesttelecine.com
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-15T13:25:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Peter Todd wrote:
&gt; On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; &gt; FUZZY room_control
&gt; &gt;    {
&gt; &gt;     IF room IS cold THEN
&gt; &gt;           ac   IS OFF

&gt; So the above is actual rule-sets, directly used by whatever code
&gt; generator you were using? I understand it would need more definitions
&gt; and the like as you said to fill it all out, but, wow, it sure makes it
&gt; looks easy.
">

The following is the complete C/fuzzy program. What was missing
earlier is the C framework that calls the fuzzy function and the
declaration of the linguistic variables.

This is code from a development directory as we were developing
the reference design and later published it in Circuit Cellar.

Some basic information about linguistic variable declaration. In the
following declaration two things are happening.

1) room is being defined as a variable stored in a signed char
with an expected range of -40 to +150
room is being set once per cycle in main to the current room
temperature less the temperature set point for the the room.
room in this case means error in temperature.

room = room_temp - SPtemp;

2) There are three linguistic variables that can be used to describe room.

LINGUISTIC room  TYPE signed char  MIN -40  MAX +150
{
MEMBER cold   { -40,   -40,  -8,  -2 }
MEMBER normal { -3,  0,  3       }
MEMBER hot    { 0 , 13, 150 , 150 }
}

Linguistic variables are used to describe a crisp values in ordinary
terms, cold normal and hot in this case.

We can say that the &quot;room is hot&quot; All of us understand what
is meant independent of units. Linguistic variable declarations
are the formal way to tell a processor what the numerical
meaning of a linguistic variable is.

normal as in the room temperature is normal is defined above
by a syntactic shorthand { -3, 0, 3} that means for values
less than and including -3 room it will return a degree of
membership [0..1] of 0 and when room is 0 (temperature
matches the set point) it will return 1 and for all values
between there will be a linear interpolated between 0
and 1.

The third value 3 is the point where the temperature is
no longer normal and it will return a value of 0. Between
0 and 3 again there will be linear interpretation.

0
1____/\____

The syntactic shorthand when 4 arguments are used as in &quot;hot&quot; above

Below 0 it returns a 0 between 13 and 150 it returns a 1.
Between 0 and 13 the value is linear interpolated. If the
last two values didn't both go to the 150 maximum expected
value there would be linear interpolation between them as
well ie
1         ______
0____/            \_______

Linguistic variables can both be descriptive and and powerful
way to describe a physical; phenomena in ordinary terms
In this case the day is divided into 240 parts each 0.1 hour
or 6 minutes. Nice because it fits in a byte.

The linguistic variables describing the hours are

day starts at 5:30am is really day at 6:30am stays
completely day to 17:30 and by 18:30 it
is no longer day

night is not day (clue 1.0-day)

morning starts at 5:00am is really morning at 6:00am
by 8:00am is starting to not be morning and
by 9:00 am is no longer morning.

evening has a 16:00 , 17:00 , 19:00 20:00 sequence

Linguistic variables can be used as part of the program in
different ways. For example might setback time is not a
term we would use but it can be defined in terms of other
linguistic variables. In this case a fuzzy expression is
evaluated (think boolean with more bits) night and
not evening. ie set the temperature back after the
evening is over and we have all gone to bed except the
geek with the computer who has jolt to keep him warm.

One last point: night in the following definition is an easy
way to avoid dealing with midnight wrap-around

//  hours;    .1 hour 0 .. 240 for a day
LINGUISTIC hours TYPE char MIN 0 MAX 240
{
MEMBER day     { 55 ,  65 ,  175 , 185 }
MEMBER night   {FUZZY { hours IS NOT day }}
MEMBER morning {50,  60 , 80 , 90 }
MEMBER evening { 160 ,170 ,190 , 200 }
MEMBER nightsb {FUZZY { hours IS night
AND hours IS NOT evening }}
}

===Put it all together This was from a development directory
before it became a feature creature There are no rules for night
setback and the setpoint isn't adjustable. I don't think there
is anything significant missing ========

#pragma memory ROM [0x1000-8] @ 8;
#pragma memory RAM [100]  @ 0x18;
#pragma portrw porta @ 0x110;
#pragma portrw portb @ 0x111;
#pragma portrw ddra @ 0x210;
#pragma portrw ddrc @ 0x213;
#pragma vector __RESET @ 0;
#pragma vector time  @ 4;   // 60 hz input

#define C_const 122
#define F_const 220
#define C_offset -11662  /* -45.5C * 256 */
#define F_offset -12800  /* -50F * 256   */

// Thermostate set point
#define SPtemp 72

#pragma portrw temp               @ 0x112;
#pragma portrw OutsideTemp  @ 0x113;

#define fifty // powerline frequency
#ifdef fifty
#define rollover 100
#else
#define rollover 120
#endif

char ticks;   // 1/60 sec tics roll over at 120
// 1/50 sec tics roll over at 100
char seconds; // actually two seconds 180 = 6 min

//  hours;    .1 hour 0 .. 240 for a day
LINGUISTIC hours TYPE char MIN 0 MAX 240
{
MEMBER day     { 55 ,  65 ,  175 , 185 }
MEMBER night   {FUZZY { hours IS NOT day }}
MEMBER morning {50,  60 , 80 , 90 }
MEMBER evening { 160 ,170 ,190 , 200 }
MEMBER nightsb {FUZZY { hours IS night
AND hours IS NOT evening }}
}

void time (void)
/* called each 1/60 of a second  from an interupt
divide the day in 240 parts
*/
{
if (++ticks &gt;= rollover)
{
ticks = 0;
if (++seconds &gt;= 180)
{
seconds = 0;
if (++hours &gt;= 240)
{ // new day
hours = 0;
}
}
}

LINGUISTIC OutsideTemp TYPE char MIN -40 MAX 150
{
MEMBER cold { -40, -40, 40, 60 }
MEMBER cool { -40, -40, 55, 70 }
MEMBER warm { 55 , 68 , 78, 82 }
MEMBER hot  { 68 , 85, 150, 150 }

}

LINGUISTIC room  TYPE char  MIN -40  MAX +150
{
MEMBER cold   { -40,   -40,  -8,  -2 }
MEMBER normal { -3,  0,  3       }
MEMBER hot    { 0 , 13, 150 , 150 }
}

CONSEQUENCE heat TYPE char MIN 0 MAX 255 DEFUZZ cg
ACTION { portb = heat; }
{
MEMBER OFF      {   0 }
MEMBER ON       { 255 }
}

CONSEQUENCE ac TYPE char MIN 0 MAX 255 DEFUZZ cg
{
MEMBER OFF      {   0 }
MEMBER ON       { 255 }
}

FUZZY room_control
{
IF room IS cold THEN
ac   IS OFF
heat IS ON

IF room IS normal THEN
ac   IS OFF
heat IS OFF

IF room IS hot THEN
ac   IS ON
heat IS OFF
IF room IS cold AND day IS morning THEN
heat IS OFF
IF room IS cold AND OutsideTemp IS hot THEN
heat IS OFF
IF room IS hot AND OutsideTemp IS cold THEN
ac IS OFF
}

char read_temp (voidt)
{
return ((((long) temp * F_const) + F_offset) &gt;&gt; 8);
}

void main (void)
{
while(1)
{
room_temp   = read_temp();
room = room_temp - SPtemp;
room_control();
}
}

Regards,

Walter Banks
--
Byte Craft Limited
Tel. (519) 888-6911
http://www.bytecraft.com
wal ... @bytecraft.com

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-15T14:01:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Mark Rages wrote:
&gt; On 8/15/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:
&gt; &gt; As is the fuzzy logic / linguistic variable implementation. This was
&gt; &gt; an open issue until the mid 90's . In the early 90's I would have
&gt; &gt; agreed with you. Now the linguistic variable implementation
&gt; &gt; can be proven just as solid. fuzzy is so misleading. I will try
&gt; &gt; to track some references down. A bunch of people were
&gt; &gt; working on this and arrived at solutions more or less at the
&gt; &gt; same time. Bart Kosko and Zedeh were both actively working
&gt; &gt; on this (or rather their grad students were and they got the
&gt; &gt; credit) in this 93 to 95/96. That is where I will start.

&gt; Can you describe, in general terms, how you would compute the minimum
&gt; cycle time for your example?  (I learn best by example.)
">

Mark,

The way we have been implementing fuzzy/lingustic variable applications is
to pass the full source through a preprocessor that translates the
linguistic variables and their manipulation into a standard C.

After that we can do execution metrics like any C program.
More and more applications are being implemented as an event
driven process where start points are at a consistent point or in
the automotive cases tied in some way to engine cycles.

Regards,

Walter Banks
--
Byte Craft Limited
Tel. (519) 888-6911
http://www.bytecraft.com
wal ... @bytecraft.com

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Andre Abelian&quot; &lt;aabel...@mason-electric.com&gt; </POSTER>
<POSTDATE> 2007-08-15T14:10:00 </POSTDATE>
Hi to all,

I have 3 color led that I want to turn them on and off
randomly and use pwm to dim them independently. I put together
a schematic and now I am worry about if I can use 3 software PWM
to control them while reading other switches etc. The only software PWM
I am know is from Scott http://www.dattalo.com/technical/theory/pwm.html
I never tried it before but I am sure it is going to work. My question is
should I use hardware PWM if I can or software PWM will do the same job.
I use 18F4550 has only 2 hardware pwm. it is not too late to replace the pic.

thank you very much

Andre

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Gerhard Fiedler &lt;li...@connectionbrazil.com&gt; </POSTER>
<POSTDATE> 2007-08-15T14:20:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Mark Rages wrote:
&gt;&gt; A accurately modelled system implemented with current state of
&gt;&gt; fuzzy technology will produce very similar results to a traditional
&gt;&gt; control system.

&gt; But the traditional control system is mathematically tractable.
">

Fuzzy is not linear, so the linear domain math generally used with control
design won't work easily with a fuzzy controller. But when they work, they
usually only work by disregarding the nonlinearities in the system. For
some systems, this works better than for others.

Maybe it's possible to approximate a fuzzy controller with a linear model.

Gerhard

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Mark Rages&quot; &lt;markra...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-15T14:39:00 </POSTDATE>
On 8/15/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Mark Rages wrote:

&gt; &gt; Can you describe, in general terms, how you would compute the minimum
&gt; &gt; cycle time for your example?  (I learn best by example.)

&gt; Mark,

&gt; The way we have been implementing fuzzy/lingustic variable applications is
&gt; to pass the full source through a preprocessor that translates the
&gt; linguistic variables and their manipulation into a standard C.

&gt; After that we can do execution metrics like any C program.
&gt; More and more applications are being implemented as an event
&gt; driven process where start points are at a consistent point or in
&gt; the automotive cases tied in some way to engine cycles.
">

OK, I'm sorry, I didn't ask my question clearly.

I wasn't asking about the implementation details (although the
preprocessor makes a lot of sense). By &quot;cycle times&quot; I meant the time
for one on-off period for the bang-bang temperature control example,
in the steady state.

Regards,
Mark
markrages@gmail
--
Mark Rages, Engineer
Midwest Telecine LLC
markra ... @midwesttelecine.com
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Marcel Duchamp &lt;marcel.duch...@sbcglobal.net&gt; </POSTER>
<POSTDATE> 2007-08-15T14:46:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Andre Abelian wrote:
&gt; Hi to all,

&gt; I have 3 color led that I want to turn them on and off
&gt; randomly and use pwm to dim them independently. I put together
&gt; a schematic and now I am worry about if I can use 3 software PWM
&gt; to control them while reading other switches etc. The only software PWM
&gt; I am know is from Scott http://www.dattalo.com/technical/theory/pwm.html
&gt; I never tried it before but I am sure it is going to work. My question is
&gt; should I use hardware PWM if I can or software PWM will do the same job.
&gt; I use 18F4550 has only 2 hardware pwm. it is not too late to replace the pic.

&gt; thank you very much

&gt; Andre
">

Andre,
If your question is &quot;what happens to the leds brightness when you are
NOT in the software pwm routine&quot;, only you can tell.

If that is the issue, run your code in the MPLAB sim and see what the
duty cycle is: how much of the time is the pwm code running and how much
of the time is something else running.  This will give you an idea.

You will probably want to be sure your pwm cycles have all turned off
current to the leds whenever you go to do some other software task.
Otherwise, the leds will appear to flash brightly.  If they are turned
off during other code execution, then the duty cycle of pwm code to
other code will simply act as a dimmer function.  If this is short
enough, you won't notice it.

Scott's code works fine.
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Mohit Mahajan &lt;mohit.li...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-15T15:00:00 </POSTDATE>
Software PWM should be fine.

Do a search on RGB lighting patents filed by Color Kinetics. They do,
what you are planning to do, on hugely successful commercial products.
And they use PICs with software PWM. At least that is what this patent
tells us: US patent # 6016038.

HTH,
Mohit Mahajan.

<QUOTE PREVIOUSPOST="
Andre Abelian wrote:
&gt; Hi to all,

&gt; I have 3 color led that I want to turn them on and off
&gt; randomly and use pwm to dim them independently. I put together
&gt; a schematic and now I am worry about if I can use 3 software PWM
&gt; to control them while reading other switches etc. The only software PWM
&gt; I am know is from Scott http://www.dattalo.com/technical/theory/pwm.html
&gt; I never tried it before but I am sure it is going to work. My question is
&gt; should I use hardware PWM if I can or software PWM will do the same job.
&gt; I use 18F4550 has only 2 hardware pwm. it is not too late to replace the pic.

&gt; thank you very much

&gt; Andre
">

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;William \&quot;Chops\&quot; Westfield&quot; &lt;wes...@mac.com&gt; </POSTER>
<POSTDATE> 2007-08-15T15:08:00 </POSTDATE>
On Aug 15, 2007, at 11:10 AM, Andre Abelian wrote:

<QUOTE PREVIOUSPOST="
&gt; I put together
&gt; a schematic and now I am worry about if I can use 3 software PWM
&gt; to control them while reading other switches etc.
">

no problem.  The PWM demands of LEDs for visual brightess
control are pretty modest, and doing 3 LEDs should be easy
even without Scott's fancy PWM.  I did something like this
for &quot;flames&quot;, and did 5 LEDs like this:

led_all_on();
for (pwm_delay = 128; pwm_delay !=0; pwm_delay--) {
/*
* We have a random number in each PWM between 1 and 128
* and we're going to have 128 cycles of delay.  So each
* decremented output can only cross zero once, at which
* time we toggle the output state.
*/
if (--pwm1 == 0) {
led1_off;
}
if (--pwm2 == 0) {
led2_off;
}
if (--pwm3 == 0) {
led3_off;
}
if (--pwm4 == 0) {
led4_off;
}
if (--pwm5 == 0) {
led5_off;
}
} /* time for new PWM cycle */
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-15T15:11:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Mark Rages wrote:
&gt; On 8/15/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

&gt; &gt; Mark Rages wrote:

&gt; &gt; &gt; Can you describe, in general terms, how you would compute the minimum
&gt; &gt; &gt; cycle time for your example?  (I learn best by example.)

&gt; By &quot;cycle times&quot; I meant the time
&gt; for one on-off period for the bang-bang temperature control example,
&gt; in the steady state.
">

if temp IS high THEN out IS off ELSE out is on;

as simple implementation of a bang bang in fuzzy.
I am assuming that high is a singleton effectively a
one point threshold

will likely produce similar code to the C

if (temp &gt; setpoint)
out = 0;
else
out = 1;

fuzzy loses in complexity of evaluating degree of membership and
wins because practically all of the generated code is the same
resolution as the output requirement. In practical terms most of the
processing in embedded systems using linguistic variables is done at
8 bits. Degree of membership calculations effectively normalizes
the real world variables into a solution space. Linguistic variables
are almost always scaled over a focussed subset of the crisp real
world variables.

The conventional alternative is to sufficient variable range and
resolution to cover the expected working values. Carrying
around this information in the application solution can be
computationally intensive.

Both approaches could be valid, linguistic variables are an important
alternative approach to a class of problems.

w..

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;David VanHorn&quot; &lt;microb...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-15T15:53:00 </POSTDATE>
You can do it with a single timer.
Start the timer when you turn on all three outputs.
Load it with the shortest of the three times, and remember which
bit(s) get turned off then.
Wait for the timer
Turn off the appropriate bit(s), if there are any remaining, reload
the timer and do it again..

I've done this with R/C servos and printer &quot;burn&quot; pulses up to 13 at once.
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Ravi &lt;chipt...@vsnl.com&gt; </POSTER>
<POSTDATE> 2007-08-15T23:09:00 </POSTDATE>
Hello Andre,

<QUOTE PREVIOUSPOST="
&gt; I have 3 color led that I want to turn them on and off
&gt; randomly and use pwm to dim them independently. I put together
&gt; a schematic and now I am worry about if I can use 3 software PWM
&gt; to control them while reading other switches etc. The only software PWM
&gt; I am know is from Scott http://www.dattalo.com/technical/theory/pwm.html
&gt; I never tried it before but I am sure it is going to work. My question is
&gt; should I use hardware PWM if I can or software PWM will do the same job.
&gt; I use 18F4550 has only 2 hardware pwm. it is not too late to replace the pic.
">

You can use software PWM to control the intensity of the LED's. Even a
low end 12F508 can control 3 channels of LED strings.

Cheers

Ravi
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Peter Todd &lt;p...@petertodd.ca&gt; </POSTER>
<POSTDATE> 2007-08-16T01:37:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
On Wed, Aug 15, 2007 at 01:25:40PM -0400, Walter Banks wrote:
&gt; &gt; On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; &gt; &gt; FUZZY room_control
&gt; &gt; &gt;    {
&gt; &gt; &gt;     IF room IS cold THEN
&gt; &gt; &gt;           ac   IS OFF

&gt; &gt; So the above is actual rule-sets, directly used by whatever code
&gt; &gt; generator you were using? I understand it would need more definitions
&gt; &gt; and the like as you said to fill it all out, but, wow, it sure makes it
&gt; &gt; looks easy.

&gt; The following is the complete C/fuzzy program. What was missing
&gt; earlier is the C framework that calls the fuzzy function and the
&gt; declaration of the linguistic variables.
">

&lt;snip&gt;

What can I say, thank you! That was very informative.

Do you know off-hand what issue of Circuit Cellar it was published in?

I can't really think of any applications where I'd need fuzzy logic, at
least in my art, although I have a friend with a soon-to-be computer
controlled cola to water converter who might find this interesting.

- --
http://petertodd.org
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFGw+KJ3bMhDbI9xWQRAuejAJ4qGTmrcWHCZaF5jHI5r+FszamlaQCdFMsy
3N87EBuhgPGmBOJrwFBMPAk=
=ZOIi
-----END PGP SIGNATURE-----
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Randy Glenn&quot; &lt;randy.gl...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-19T12:19:00 </POSTDATE>
The article appeared in Circuit Cellar Issue 60, July 1995. PDF is here:
http://www.circuitcellar.com/library/print/hcs-pdf/60-BanksPatelKader...

As for converting cola into water, as a caffeine junkie, I must protest :)

On 8/16/07, Peter Todd &lt;p ... @petertodd.ca&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; Hash: SHA1

&gt; On Wed, Aug 15, 2007 at 01:25:40PM -0400, Walter Banks wrote:
&gt; &gt; &gt; On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; &gt; &gt; &gt; FUZZY room_control
&gt; &gt; &gt; &gt;    {
&gt; &gt; &gt; &gt;     IF room IS cold THEN
&gt; &gt; &gt; &gt;           ac   IS OFF

&gt; &gt; &gt; So the above is actual rule-sets, directly used by whatever code
&gt; &gt; &gt; generator you were using? I understand it would need more definitions
&gt; &gt; &gt; and the like as you said to fill it all out, but, wow, it sure makes it
&gt; &gt; &gt; looks easy.

&gt; &gt; The following is the complete C/fuzzy program. What was missing
&gt; &gt; earlier is the C framework that calls the fuzzy function and the
&gt; &gt; declaration of the linguistic variables.
&gt; &lt;snip&gt;

&gt; What can I say, thank you! That was very informative.

&gt; Do you know off-hand what issue of Circuit Cellar it was published in?

&gt; I can't really think of any applications where I'd need fuzzy logic, at
&gt; least in my art, although I have a friend with a soon-to-be computer
&gt; controlled cola to water converter who might find this interesting.

&gt; - --
&gt; http://petertodd.org
&gt; -----BEGIN PGP SIGNATURE-----
&gt; Version: GnuPG v1.4.6 (GNU/Linux)

&gt; iD8DBQFGw+KJ3bMhDbI9xWQRAuejAJ4qGTmrcWHCZaF5jHI5r+FszamlaQCdFMsy
&gt; 3N87EBuhgPGmBOJrwFBMPAk=
&gt; =ZOIi
&gt; -----END PGP SIGNATURE-----
&gt; --
&gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; View/change your membership options at
&gt; http://mailman.mit.edu/mailman/listinfo/piclist
">

--
-Randy Glenn
Computer Eng. and Mgt. Year V, McMaster University
Regional Student Representative, IEEE Canada

randy.glenn-at-gmail.com - glennrb-at-mcmaster.ca
randy.glenn-at-computer.org - randy_glenn-at-ieee.org
http://www.randyglenn.ca
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Walter Banks &lt;wal...@bytecraft.com&gt; </POSTER>
<POSTDATE> 2007-08-19T18:12:00 </POSTDATE>
That was one of three or four articles I wrote in Circuit cellar on this subject.

I will track down the other dates.

w..

<QUOTE PREVIOUSPOST="
Randy Glenn wrote:
&gt; The article appeared in Circuit Cellar Issue 60, July 1995. PDF is here:
&gt; http://www.circuitcellar.com/library/print/hcs-pdf/60-BanksPatelKader...

&gt; As for converting cola into water, as a caffeine junkie, I must protest :)

&gt; On 8/16/07, Peter Todd &lt;p ... @petertodd.ca&gt; wrote:
&gt; &gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; &gt; Hash: SHA1

&gt; &gt; On Wed, Aug 15, 2007 at 01:25:40PM -0400, Walter Banks wrote:
&gt; &gt; &gt; &gt; On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; &gt; &gt; &gt; &gt; FUZZY room_control
&gt; &gt; &gt; &gt; &gt;    {
&gt; &gt; &gt; &gt; &gt;     IF room IS cold THEN
&gt; &gt; &gt; &gt; &gt;           ac   IS OFF

&gt; &gt; &gt; &gt; So the above is actual rule-sets, directly used by whatever code
&gt; &gt; &gt; &gt; generator you were using? I understand it would need more definitions
&gt; &gt; &gt; &gt; and the like as you said to fill it all out, but, wow, it sure makes it
&gt; &gt; &gt; &gt; looks easy.

&gt; &gt; &gt; The following is the complete C/fuzzy program. What was missing
&gt; &gt; &gt; earlier is the C framework that calls the fuzzy function and the
&gt; &gt; &gt; declaration of the linguistic variables.
&gt; &gt; &lt;snip&gt;

&gt; &gt; What can I say, thank you! That was very informative.

&gt; &gt; Do you know off-hand what issue of Circuit Cellar it was published in?

&gt; &gt; I can't really think of any applications where I'd need fuzzy logic, at
&gt; &gt; least in my art, although I have a friend with a soon-to-be computer
&gt; &gt; controlled cola to water converter who might find this interesting.

&gt; &gt; - --
&gt; &gt; http://petertodd.org
&gt; &gt; -----BEGIN PGP SIGNATURE-----
&gt; &gt; Version: GnuPG v1.4.6 (GNU/Linux)

&gt; &gt; iD8DBQFGw+KJ3bMhDbI9xWQRAuejAJ4qGTmrcWHCZaF5jHI5r+FszamlaQCdFMsy
&gt; &gt; 3N87EBuhgPGmBOJrwFBMPAk=
&gt; &gt; =ZOIi
&gt; &gt; -----END PGP SIGNATURE-----
&gt; &gt; --
&gt; &gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; &gt; View/change your membership options at
&gt; &gt; http://mailman.mit.edu/mailman/listinfo/piclist

&gt; --
&gt; -Randy Glenn
&gt; Computer Eng. and Mgt. Year V, McMaster University
&gt; Regional Student Representative, IEEE Canada

&gt; randy.glenn-at-gmail.com - glennrb-at-mcmaster.ca
&gt; randy.glenn-at-computer.org - randy_glenn-at-ieee.org
&gt; http://www.randyglenn.ca
&gt; --
&gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; View/change your membership options at
&gt; http://mailman.mit.edu/mailman/listinfo/piclist
">

--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> &quot;Randy Glenn&quot; &lt;randy.gl...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-19T18:58:00 </POSTDATE>
The Great Gargoyle triumphs again.

<QUOTE PREVIOUSPOST="
&gt;From http://www.dtweed.com/circuitcellar/xbankswa.htm
">

* #17 October/November 1990, p. 67, Using C for Embedded Control
Building a 6805-Based Darkroom Timer
* #60 July 1995, p. 51, PDF, PDF A Home Control System Based on Fuzzy Logic
* #82 May 1997, p. 14, Selecting an 8-Bit Architecture
* #88 November 1997, p. 32, Fuzzy Concepts Using C
* #103 February 1999, p. 12, Fuzzy Logic Becomes Velvet Programming

On 8/19/07, Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; That was one of three or four articles I wrote in Circuit cellar on this subject.

&gt; I will track down the other dates.

&gt; w..

&gt; Randy Glenn wrote:

&gt; &gt; The article appeared in Circuit Cellar Issue 60, July 1995. PDF is here:
&gt; &gt; http://www.circuitcellar.com/library/print/hcs-pdf/60-BanksPatelKader...

&gt; &gt; As for converting cola into water, as a caffeine junkie, I must protest :)

&gt; &gt; On 8/16/07, Peter Todd &lt;p ... @petertodd.ca&gt; wrote:
&gt; &gt; &gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; &gt; &gt; Hash: SHA1

&gt; &gt; &gt; On Wed, Aug 15, 2007 at 01:25:40PM -0400, Walter Banks wrote:
&gt; &gt; &gt; &gt; &gt; On Wed, Aug 15, 2007 at 08:59:49AM -0400, Walter Banks wrote:
&gt; &gt; &gt; &gt; &gt; &gt; FUZZY room_control
&gt; &gt; &gt; &gt; &gt; &gt;    {
&gt; &gt; &gt; &gt; &gt; &gt;     IF room IS cold THEN
&gt; &gt; &gt; &gt; &gt; &gt;           ac   IS OFF

&gt; &gt; &gt; &gt; &gt; So the above is actual rule-sets, directly used by whatever code
&gt; &gt; &gt; &gt; &gt; generator you were using? I understand it would need more definitions
&gt; &gt; &gt; &gt; &gt; and the like as you said to fill it all out, but, wow, it sure makes it
&gt; &gt; &gt; &gt; &gt; looks easy.

&gt; &gt; &gt; &gt; The following is the complete C/fuzzy program. What was missing
&gt; &gt; &gt; &gt; earlier is the C framework that calls the fuzzy function and the
&gt; &gt; &gt; &gt; declaration of the linguistic variables.
&gt; &gt; &gt; &lt;snip&gt;

&gt; &gt; &gt; What can I say, thank you! That was very informative.

&gt; &gt; &gt; Do you know off-hand what issue of Circuit Cellar it was published in?

&gt; &gt; &gt; I can't really think of any applications where I'd need fuzzy logic, at
&gt; &gt; &gt; least in my art, although I have a friend with a soon-to-be computer
&gt; &gt; &gt; controlled cola to water converter who might find this interesting.

&gt; &gt; &gt; - --
&gt; &gt; &gt; http://petertodd.org
&gt; &gt; &gt; -----BEGIN PGP SIGNATURE-----
&gt; &gt; &gt; Version: GnuPG v1.4.6 (GNU/Linux)

&gt; &gt; &gt; iD8DBQFGw+KJ3bMhDbI9xWQRAuejAJ4qGTmrcWHCZaF5jHI5r+FszamlaQCdFMsy
&gt; &gt; &gt; 3N87EBuhgPGmBOJrwFBMPAk=
&gt; &gt; &gt; =ZOIi
&gt; &gt; &gt; -----END PGP SIGNATURE-----
&gt; &gt; &gt; --
&gt; &gt; &gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; &gt; &gt; View/change your membership options at
&gt; &gt; &gt; http://mailman.mit.edu/mailman/listinfo/piclist

&gt; &gt; --
&gt; &gt; -Randy Glenn
&gt; &gt; Computer Eng. and Mgt. Year V, McMaster University
&gt; &gt; Regional Student Representative, IEEE Canada

&gt; &gt; randy.glenn-at-gmail.com - glennrb-at-mcmaster.ca
&gt; &gt; randy.glenn-at-computer.org - randy_glenn-at-ieee.org
&gt; &gt; http://www.randyglenn.ca
&gt; &gt; --
&gt; &gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; &gt; View/change your membership options at
&gt; &gt; http://mailman.mit.edu/mailman/listinfo/piclist

&gt; --
&gt; http://www.piclist.com PIC/SX FAQ &amp; list archive
&gt; View/change your membership options at
&gt; http://mailman.mit.edu/mailman/listinfo/piclist
">

--
-Randy Glenn
Computer Eng. and Mgt. Year V, McMaster University
Regional Student Representative, IEEE Canada

randy.glenn-at-gmail.com - glennrb-at-mcmaster.ca
randy.glenn-at-computer.org - randy_glenn-at-ieee.org
http://www.randyglenn.ca
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Dave Tweed &lt;p...@dtweed.com&gt; </POSTER>
<POSTDATE> 2007-08-19T20:54:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Walter Banks &lt;wal ... @bytecraft.com&gt; wrote:
&gt; That was one of three or four articles I wrote in Circuit cellar on this
&gt; subject.

&gt; I will track down the other dates.
">

http://www.dtweed.com/circuitcellar/xbankswa.htm

-- Dave Tweed
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
<POST>
<POSTER> Peter Todd &lt;p...@petertodd.ca&gt; </POSTER>
<POSTDATE> 2007-08-20T04:56:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
On Sun, Aug 19, 2007 at 06:58:17PM -0400, Randy Glenn wrote:
&gt; The Great Gargoyle triumphs again.

&gt; &gt;From http://www.dtweed.com/circuitcellar/xbankswa.htm

&gt;     * #17 October/November 1990, p. 67, Using C for Embedded Control
&gt; Building a 6805-Based Darkroom Timer
&gt;     * #60 July 1995, p. 51, PDF, PDF A Home Control System Based on Fuzzy Logic
&gt;     * #82 May 1997, p. 14, Selecting an 8-Bit Architecture
&gt;     * #88 November 1997, p. 32, Fuzzy Concepts Using C
&gt;     * #103 February 1999, p. 12, Fuzzy Logic Becomes Velvet Programming
">

Thanks guys! Much appreciated!

- --
http://petertodd.org
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFGyVc63bMhDbI9xWQRAk1XAKCU5DKTxNCj5jkvRQON/RM2SOs+xQCdHReW
MMzRa09yI3RrKMR52e38nPs=
=YKoi
-----END PGP SIGNATURE-----
--
http://www.piclist.com PIC/SX FAQ &amp; list archive
View/change your membership options at
http://mailman.mit.edu/mailman/listinfo/piclist
</POST>
</TEXT>
</BODY>
</DOC>
