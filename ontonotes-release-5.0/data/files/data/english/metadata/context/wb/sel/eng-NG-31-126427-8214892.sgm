<DOC>
<DOCID> eng-NG-31-126427-8214892 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-08-05T21:46:00 </DATETIME>
<BODY>
<HEADLINE>
Schema Migrations in TurboGears with Migrate
</HEADLINE>
<TEXT>
<POST>
<POSTER> Timothy Freund &lt;t...@digital-achievement.com&gt; </POSTER>
<POSTDATE> 2007-08-05T21:46:00 </POSTDATE>
Hi Everyone --

I recently led a talk about database schema migrations and refactoring
in a variety of application languages.  After the talk, I thought it
might be helpful to create a screencast of setting up a TurboGears
project with TGMigrate.  I have used the combination on my last few
projects, and I would hate to work without it at this point.

Links to QuickTime and DivX versions of the screencast are available at
the following URL:

http://achievewith.us/public/articles/2007/08/05/schema-migrations-in...

Direct links to both versions may be placed in the documentation wiki if
they are deemed appropriate.

Regards,

Tim

--
Timothy Freund
http://achievewith.us
http://goodcalc.com
</POST>
<POST>
<POSTER> &quot;Walter Cruz&quot; &lt;walter....@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-06T08:36:00 </POSTDATE>
Hi Timothy

I've seen the screencast. It's great!

But, I think that to improve the screencast you need to show a *real*
migration. Like create a table User with user_id ane username, ant then in
version 2 add a password column, and in version 3 change the username length
from 40 to 255. I think that the real value of migration is on that!

[]'s
- Walter

On 8/5/07, Timothy Freund &lt;t ... @digital-achievement.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hi Everyone --

&gt; I recently led a talk about database schema migrations and refactoring
&gt; in a variety of application languages.  After the talk, I thought it
&gt; might be helpful to create a screencast of setting up a TurboGears
&gt; project with TGMigrate.  I have used the combination on my last few
&gt; projects, and I would hate to work without it at this point.

&gt; Links to QuickTime and DivX versions of the screencast are available at
&gt; the following URL:

&gt; http://achievewith.us/public/articles/2007/08/05/schema-migrations-in...

&gt; Direct links to both versions may be placed in the documentation wiki if
&gt; they are deemed appropriate.

&gt; Regards,

&gt; Tim

&gt; --
&gt; Timothy Freund
&gt; http://achievewith.us
&gt; http://goodcalc.com
">
</POST>
<POST>
<POSTER> Timothy Freund &lt;t...@digital-achievement.com&gt; </POSTER>
<POSTDATE> 2007-08-07T00:20:00 </POSTDATE>
Walter --

Thanks for the encouragement!

Yes, I agree that a &quot;real&quot; migration screencast is in order.  I think
that at least one of the demonstrated migrations will take a table with
data that isn't normalized and normalize it.  That shows off some of the
power of Migrate - because the upgrades are done in Python, we are free
to write whatever code is needed to save that data while altering
existing tables.

I suppose a ready-to-run demo might be nice as well?

Thanks again,

Tim

<QUOTE PREVIOUSPOST="
Walter Cruz wrote:
&gt; Hi Timothy

&gt; I've seen the screencast. It's great!

&gt; But, I think that to improve the screencast you need to show a *real*
&gt; migration. Like create a table User with user_id ane username, ant then
&gt; in version 2 add a password column, and in version 3 change the username
&gt; length from 40 to 255. I think that the real value of migration is on that!

&gt; []'s
&gt; - Walter

&gt; On 8/5/07, *Timothy Freund* &lt;t ... @digital-achievement.com
&gt; &lt;mailto:t ... @digital-achievement.com&gt;&gt; wrote:

&gt;     Hi Everyone --

&gt;     I recently led a talk about database schema migrations and refactoring
&gt;     in a variety of application languages.  After the talk, I thought it
&gt;     might be helpful to create a screencast of setting up a TurboGears
&gt;     project with TGMigrate.  I have used the combination on my last few
&gt;     projects, and I would hate to work without it at this point.

&gt;     Links to QuickTime and DivX versions of the screencast are available at
&gt;     the following URL:

&gt; http://achievewith.us/public/articles/2007/08/05/schema-migrations-in...
&gt;     &lt; http://achievewith.us/public/articles/2007/08/05/schema-migrations-in... &gt;

&gt;     Direct links to both versions may be placed in the documentation wiki if
&gt;     they are deemed appropriate.

&gt;     Regards,

&gt;     Tim

&gt;     --
&gt;     Timothy Freund
&gt; http://achievewith.us &lt; http://achievewith.us &gt;
&gt; http://goodcalc.com
">

--
Timothy Freund
http://achievewith.us
http://goodcalc.com
</POST>
<POST>
<POSTER> Ant &lt;ant...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-07T07:00:00 </POSTDATE>
Interesting screencast. I have a couple of projects which use
SQLObject (still the default engine), and I've recently had the need
to modify the schema. Is Migrate a compelling reason to change to
using SA? And how easy would it be to switch to SA (given that the
projects are pretty small)? Or does anyone know of a similar tool for
SQLObject?

Cheers,
--
Ant...

http://antroy.blogspot.com/
</POST>
<POST>
<POSTER> Timothy Freund &lt;t...@digital-achievement.com&gt; </POSTER>
<POSTDATE> 2007-08-07T08:25:00 </POSTDATE>
Thanks for watching!

I did just that with a small project.  The code hadn't been touched in a
while, and I had a large number of pending improvements that would
require schema changes.  I reasoned that the (small) pain of migrating
to SQLAlchemy would make up for itself with each migration script.

So if this is a fairly feature complete project, you may not make up for
the initial trouble of migrating. If you have a grand vision to
implement, then the time saved with Migrate may justify the time spent
switching.

Some anecdotal numbers:

My small project really was small.  I had two model, plus the identity
related models.  I spent a few hours doing the conversion, and the
identity tables gave me the most trouble.  It seems like there was a
quirk with the table names between the two identity providers that took
me a while to notice.

If you choose to convert, I'd suggest the following:
* Set aside a couple of hours
* Back up your database
* Use version control like subversion, even if you don't normally.
* Don't forget to change your database URL from &quot;sqlobject.dburi&quot; to
&quot;sqlalchemy.dburi&quot;

Good luck, and let us know how it goes,

Tim

<QUOTE PREVIOUSPOST="
Ant wrote:
&gt; Interesting screencast. I have a couple of projects which use
&gt; SQLObject (still the default engine), and I've recently had the need
&gt; to modify the schema. Is Migrate a compelling reason to change to
&gt; using SA? And how easy would it be to switch to SA (given that the
&gt; projects are pretty small)? Or does anyone know of a similar tool for
&gt; SQLObject?

&gt; Cheers,
&gt; --
&gt; Ant...

&gt; http://antroy.blogspot.com/
">

--
Timothy Freund
http://achievewith.us
http://goodcalc.com
</POST>
<POST>
<POSTER> Ant &lt;ant...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-07T09:07:00 </POSTDATE>
On Aug 7, 1:25 pm, Timothy Freund &lt;t ... @digital-achievement.com&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; My small project really was small.  I had two model, plus the identity
&gt; related models.  I spent a few hours doing the conversion, and the
&gt; identity tables gave me the most trouble.  It seems like there was a
&gt; quirk with the table names between the two identity providers that took
&gt; me a while to notice.
">

Well, I have two projects, one of which is only used by me, and is
begging for a complete rewrite in any case (and it isn't critical to
migrate the data to the new version). The other project is a bit
bigger (around 5 models I guess), but the production version has a lot
of data in it and is a collaborative tool - other users are using it,
so the prospect of downtime is not so good! However, I have some new
features to integrate, and these *will* require schema changes.

It will probably be a little while before I attempt this, but will let
you know how it goes (or most likely cry for help here during the
process ;-) )

Cheers,

--
Ant...

http://antroy.blogspot.com/
</POST>
<POST>
<POSTER> gasolin &lt;gaso...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-07T11:51:00 </POSTDATE>
Hi Timothy

Great screencast :)

Can I link the screencast to the tgmigrate page?

BTW, have you tried to use migrate with Elixir?

--
Fred
</POST>
<POST>
<POSTER> Tim Freund &lt;t...@digital-achievement.com&gt; </POSTER>
<POSTDATE> 2007-08-07T13:41:00 </POSTDATE>
Please do!

I haven't yet looked at Elixir at all.  All of my current SQLAlchemy
projects use the assignmapper, but I think Elixir will make it in to
my next project.

Thanks!

Tim

On Aug 7, 10:51 am, gasolin &lt;gaso ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hi Timothy

&gt; Great screencast :)

&gt; Can I link the screencast to the tgmigrate page?

&gt; BTW, have you tried to use migrate with Elixir?

&gt; --
&gt; Fred
">
</POST>
<POST>
<POSTER> gasolin &lt;gaso...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-09T11:12:00 </POSTDATE>
Hi,

updated to tgmigrate front page
http://code.google.com/p/tgmigrate/

On 8月8日, 上午1時41分, Tim Freund &lt;t ... @digital-achievement.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Please do!

&gt; I haven't yet looked at Elixir at all.  All of my current SQLAlchemy
&gt; projects use the assignmapper, but I think Elixir will make it in to
&gt; my next project.

&gt; Thanks!

&gt; Tim

&gt; On Aug 7, 10:51 am, gasolin &lt;gaso ... @gmail.com&gt; wrote:

&gt; &gt; Hi Timothy

&gt; &gt; Great screencast :)

&gt; &gt; Can I link the screencast to the tgmigrate page?

&gt; &gt; BTW, have you tried to use migrate with Elixir?

&gt; &gt; --
&gt; &gt; Fred
">
</POST>
</TEXT>
</BODY>
</DOC>
