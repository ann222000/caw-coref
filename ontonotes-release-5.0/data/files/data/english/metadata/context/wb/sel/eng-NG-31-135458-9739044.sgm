<DOC>
<DOCID> eng-NG-31-135458-9739044 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-12-02T07:56:00 </DATETIME>
<BODY>
<HEADLINE>
slackbuilds.net
</HEADLINE>
<TEXT>
<POST>
<POSTER> Olive &lt;olive...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-02T07:56:00 </POSTDATE>
I knew http://www.slackbuilds.org but I have found
http://www.slackbuilds.net . It is based on the same context (the
explanations are in French but you can easily get the build scripts;
click on &quot;slackbuilds&quot; and you will find a svn link). They have
apparently more packages (including a set of buildscript for Gnome).
Anyone knew that? I wonder why two projects are needed.

Olive
</POST>
<POST>
<POSTER> hel...@hullen.de (Helmut Hullen) </POSTER>
<POSTDATE> 2007-12-02T08:16:00 </POSTDATE>
Hallo, Olive,

Du meintest am 02.12.07:

<QUOTE PREVIOUSPOST="
&gt; I knew http://www.slackbuilds.org but I have found
&gt; http://www.slackbuilds.net . It is based on the same context (the
&gt; explanations are in French but you can easily get the build scripts;
&gt; click on &quot;slackbuilds&quot; and you will find a svn link). They have
&gt; apparently more packages (including a set of buildscript for Gnome).
&gt; Anyone knew that? I wonder why two projects are needed.
">

I need a german site too ...

Viele Gruesse
Helmut

&quot;Ubuntu&quot; -- an African word, meaning &quot;Slackware is too hard for me&quot;.
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-02T08:52:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
&gt; I knew http://www.slackbuilds.org but I have found
&gt; http://www.slackbuilds.net . It is based on the same context (the
&gt; explanations are in French but you can easily get the build scripts;
&gt; click on &quot;slackbuilds&quot; and you will find a svn link). They have
&gt; apparently more packages (including a set of buildscript for Gnome).
&gt; Anyone knew that? I wonder why two projects are needed.
">

hi, the builds scripts are all commented in english, the changlog is in
english too. You can post on the forum in english, there is no
restriction (a lot speak english better than me, fortunately). You're
just welcome.

I can precise the differences between sb.org and sb.net :
- the scripts on sb.net must be launch in user, not as root.
- the hierarchie is the same as slackware on sb.net (a/ ap/ gnome/
- -yes it has been revived- l/ ...)
- I don't know how it's working on sb.org script, but builds scripts on
sb.net include an advanced dependencies manager : you read the line
&quot;#depend:&quot; on the begining of the script and you just find on the svn
all &quot;words&quot; following on the line, and install the corresponding package
before installing the main package. A real human advanced managing
isn't ? :) And if you want sexy options with your soft, a &quot;# Suggests:&quot;
line purpose you some packages, not needs, but which offert more
features to the soft.

- --
aster
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHUrik9sCa4LW0nIwRAtPzAJwJIlhcSXBS9Ije8XhWBfqHqOjX6ACfTBMJ
gEziIQAjXCyfeaejYWWKo8g=
=k5+9
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> +Alan Hicks+ &lt;a...@lizella.netWORK&gt; </POSTER>
<POSTDATE> 2007-12-02T14:43:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 2007-12-02, Olive &lt;olive ... @tele2allin.be&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I knew http://www.slackbuilds.org but I have found
&gt; http://www.slackbuilds.net . It is based on the same context (the
&gt; explanations are in French but you can easily get the build scripts;
&gt; click on &quot;slackbuilds&quot; and you will find a svn link). They have
&gt; apparently more packages (including a set of buildscript for Gnome).
&gt; Anyone knew that? I wonder why two projects are needed.
">

The two projects are maintained by different groups and with different
goals.  Use whichever you prefer, though fo obvious reasons I prefer
SBo.

SBo (my short-hand from slackbuilds.org) tries to make build scripts
available that are as &quot;true&quot; to how we feel Pat would make them
himself.  In other words, there's no extraneous dependency management
beyond a README file, everything is pacakged up in /usr, and by and
large we try to keep them as simple as possible.  Each script in our
repository is checked over by at least 1 member of the admin team to
ensure that it is &quot;perfect&quot; (for some definition of &quot;perfect&quot;).  We try
to weed out any major problems and ensure that each will compile just
fine on a stock Slackware installation.

I cannot speak for slackbuilds.net as I am unfamiliar with that
project.

- --
It is better to hear the rebuke of the wise,
Than for a man to hear the song of fools.
Ecclesiastes 7:5
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHUwrvrZS6hX/gvjoRAlrtAKDf5BdztRZecRAawIE0jTdrRw6NcgCgxmC+
u/9OjsUj0RlOJTXTUJxcARI=
=zuyR
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> Mikhail Zotov &lt;invalid_mux...@lenta.ru&gt; </POSTER>
<POSTDATE> 2007-12-02T15:07:00 </POSTDATE>
On Sun, 02 Dec 2007 13:56:18 +0100

<QUOTE PREVIOUSPOST="
Olive &lt;olive ... @tele2allin.be&gt; wrote:
&gt; I knew http://www.slackbuilds.org but I have found
&gt; http://www.slackbuilds.net . It is based on the same context (the
&gt; explanations are in French but you can easily get the build scripts;
&gt; click on &quot;slackbuilds&quot; and you will find a svn link). They have
&gt; apparently more packages (including a set of buildscript for Gnome).
&gt; Anyone knew that?
">

You can find more here:

http://slackworld.berlios.de/links.html

<QUOTE PREVIOUSPOST="
&gt; I wonder why two projects are needed.
">

IMHO, they are needed by the same reason why multiple Linux
distributions are needed.  Maybe just for fun? ;-)

--
Mikhail
</POST>
<POST>
<POSTER> ciol &lt;cio...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-12-02T15:43:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Olive wrote:
&gt; I wonder why two projects are needed.
">

Because slackbuilds.org does not support fakeroot (or you have to
execute all the script with fakeroot, which sometimes fails).

Both disregard an important point though: they install in /usr by
default, whereas they *should* install in /usr/local (that's why PV set
$PATH as /usr/local:...)
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-02T15:48:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I say !

no sorry, I'm using aioe server, an open nntp server, and sometime it
seems to have some problem : give my client an error (about size) but
the msg seem to pass anyway.

another time, sorry for repetitions.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHUxoB9sCa4LW0nIwRAsYlAJ9VLrWa8u/8YEzsH5isy9P1qP3SXgCfaJOo
iTWggMGmFp4rLv8gIPZJm7w=
=8mLh
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> Realto Margarino &lt;r...@justlinux.ca&gt; </POSTER>
<POSTDATE> 2007-12-02T15:56:00 </POSTDATE>
Jérôme PRIOR &lt;res ... @inside.net&gt; says:

pgp trash troll delete

<QUOTE PREVIOUSPOST="
&gt;I say !
&gt;no sorry, I'm using aioe server, an open nntp server, and sometime
&gt;it seems to have some problem : give my client an error (about
&gt;size) but the msg seem to pass anyway.
">

It's the pgp that's doing it.  Try removing pgp from all of your
applications.

cordially, as always,

rm
</POST>
<POST>
<POSTER> hel...@hullen.de (Helmut Hullen) </POSTER>
<POSTDATE> 2007-12-02T16:40:00 </POSTDATE>
Hallo, ciol,

Du meintest am 02.12.07:

<QUOTE PREVIOUSPOST="
&gt;&gt; I wonder why two projects are needed.
&gt; Because slackbuilds.org does not support fakeroot (or you have to
&gt; execute all the script with fakeroot, which sometimes fails).
&gt; Both disregard an important point though: they install in /usr by
&gt; default, whereas they *should* install in /usr/local (that's why PV
&gt; set $PATH as /usr/local:...)
">

No - &quot;/usr/local&quot; is for my very private packets. Not for &quot;world wide&quot;
packages close to the official packets.

Viele Gruesse
Helmut

&quot;Ubuntu&quot; -- an African word, meaning &quot;Slackware is too hard for me&quot;.
</POST>
<POST>
<POSTER> ciol &lt;cio...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-12-02T17:11:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Helmut Hullen wrote:
&gt; No - &quot;/usr/local&quot; is for my very private packets. Not for &quot;world wide&quot;
&gt; packages close to the official packets.
">

NO.
/usr/local is for _all_ packages which are not official.
What if you have package X from slackbuild, not in slackware 12, but
that will be in slackware 13?
</POST>
<POST>
<POSTER> A Guy Called Tyketto &lt;tyke...@sbcglobal.net.invalid&gt; </POSTER>
<POSTDATE> 2007-12-02T20:38:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
Realto Margarino &lt;r ... @justlinux.ca&gt; wrote:
&gt; J?r?me PRIOR &lt;res ... @inside.net&gt; says:

&gt; pgp trash troll delete

&gt;&gt;I say !

&gt;&gt;no sorry, I'm using aioe server, an open nntp server, and sometime
&gt;&gt;it seems to have some problem : give my client an error (about
&gt;&gt;size) but the msg seem to pass anyway.

&gt; It's the pgp that's doing it.  Try removing pgp from all of your
&gt; applications.
">

We tried removing your mother, but that didn't help us with
you, did it..?

BL.
- --
Brad Littlejohn                         | Email:     tyke ... @sbcglobal.net
Unix Systems Administrator,             |           tyke ... @ozemail.com.au
Web + NewsMaster, BOFH.. Smeghead! :)   | http://www.wizard.com/~tyketto
PGP: 1024D/E319F0BF 6980 AAD6 7329 E9E6 D569  F620 C819 199A E319 F0BF

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHU13yyBkZmuMZ8L8RAmWoAJwLnP+Qkzp+jhRfJdWe9+nokcRrqQCaAjfD
KGoSfMHExbgBj5SXb6TSwWY=
=Oj9M
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> hel...@hullen.de (Helmut Hullen) </POSTER>
<POSTDATE> 2007-12-03T03:29:00 </POSTDATE>
Hallo, ciol,

Du meintest am 02.12.07:

<QUOTE PREVIOUSPOST="
&gt;&gt; No - &quot;/usr/local&quot; is for my very private packets. Not for &quot;world
&gt;&gt; wide&quot; packages close to the official packets.
&gt; NO.
&gt; /usr/local is for _all_ packages which are not official.
&gt; What if you have package X from slackbuild, not in slackware 12, but
&gt; that will be in slackware 13?
">

In the last years (more than 5 years) that has happened often. Seamless.
My major non official source is &quot;linuxpackages.net&quot;, and all packages
I've got there the (many) last years don't use &quot;/usr/local&quot;. And that's
the way I want.
If Patrick takes a packet from there to the official site nothing else
has to be changed.

By the way: &quot;PATH&quot; prefers &quot;/usr/local/bin&quot;. If Patrick takes a packet
from &quot;linuxpackages.net&quot; to the official site which uses &quot;/usr/local/
bin&quot; then calling the application without path always would lead to the
non official version. That's nothing I want.

Viele Gruesse
Helmut

&quot;Ubuntu&quot; -- an African word, meaning &quot;Slackware is too hard for me&quot;.
</POST>
<POST>
<POSTER> Manuel Reimer &lt;mrei...@expires-31-12-2007.news-group.org&gt; </POSTER>
<POSTDATE> 2007-12-03T03:48:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
ciol wrote:
&gt; Because slackbuilds.org does not support fakeroot (or you have to
&gt; execute all the script with fakeroot, which sometimes fails).
">

If a script fails to execute with fakeroot, then you may fix it and post
the fix to the mailing list. I'm sure the fix will be added.

I test the scripts, I want to contribute to SBo, with fakeroot for the
first time, and so far this always worked.

<QUOTE PREVIOUSPOST="
&gt; Both disregard an important point though: they install in /usr by
&gt; default, whereas they *should* install in /usr/local (that's why PV set
&gt; $PATH as /usr/local:...)
">

/usr/local not always works. At least for libraries, this may cause
trouble.

CU

Manuel
</POST>
<POST>
<POSTER> Niki Kovacs &lt;mic...@mouse.com&gt; </POSTER>
<POSTDATE> 2007-12-03T03:56:00 </POSTDATE>
Le Sun, 02 Dec 2007 19:43:26 +0000, +Alan Hicks+ a écrit :

<QUOTE PREVIOUSPOST="
&gt; I cannot speak for slackbuilds.net as I am unfamiliar with that project.
">

I'm somehow familiar with the project. The project leader Nicolas Parein
aka _Hitek_ was so kind to teach me the basics of writing SlackBuild
scripts a few years ago.

The scripts on slackbuilds.net are quite clean, and they build Slackware
packages like those on slackbuilds.org. I see two major differences,
maybe three.

1) The scripts invariably use fakeroot to avoid damage. I see the point
in that, but I never use it, since wrecking my entire system with an rm -
rf $TMP and an unset TMP variable only happened once to me, but I still
remember the feeling. IMHO, using fakeroot is like riding a bicycle with
two supplementary rear wheels. ('fakeroot' is for sissies. I use
'fuckroot', a technique where the slightest typo results in a major
breakdown of my whole LAN :oD)

2) The scripts all contain a wget download routine, so they take care of
fetching the sources for you, and checking their integrity with a simple
md5sum check.

3) The third difference I see is the availability of some &quot;packs&quot; like
for instance the GNOME packages. I gave the gnome-minimal pack a shot
lately, but it failed to build, so I wrote my own instead (... only to
find out that I hate GNOME anyway, but that's another story :oD).

cheers,

Niki
</POST>
<POST>
<POSTER> Olive &lt;olive...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-03T03:59:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Helmut Hullen wrote:
&gt; Hallo, ciol,

&gt; Du meintest am 02.12.07:

&gt;&gt;&gt; No - &quot;/usr/local&quot; is for my very private packets. Not for &quot;world
&gt;&gt;&gt; wide&quot; packages close to the official packets.

&gt;&gt; NO.
&gt;&gt; /usr/local is for _all_ packages which are not official.
&gt;&gt; What if you have package X from slackbuild, not in slackware 12, but
&gt;&gt; that will be in slackware 13?

&gt; In the last years (more than 5 years) that has happened often. Seamless.
&gt; My major non official source is &quot;linuxpackages.net&quot;, and all packages
&gt; I've got there the (many) last years don't use &quot;/usr/local&quot;. And that's
&gt; the way I want.
&gt; If Patrick takes a packet from there to the official site nothing else
&gt; has to be changed.
">

Although I am not sure that to use /usr/local for a tested and widely
available package; your argument is bad. If PV want to include one of
these packages in the official release, he will not do it without
reading the corresponding ./Slackbuild script and changing the scripts
to use /usr instead of /usr/local (or vice versa) is just trivial.

Olive
</POST>
<POST>
<POSTER> Olive &lt;olive...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-03T03:55:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Manuel Reimer wrote:
&gt; ciol wrote:
&gt;&gt; Because slackbuilds.org does not support fakeroot (or you have to
&gt;&gt; execute all the script with fakeroot, which sometimes fails).

&gt; If a script fails to execute with fakeroot, then you may fix it and post
&gt; the fix to the mailing list. I'm sure the fix will be added.
">

The main problem is that you should not compile and especially
./configure in a fakeroot environment. The ./configure auto detect some
setting of the system and these settings could not correspond in a
fakeroot environment. Although it might still work for individual
packages it is definitively not a good practice. The proper way to use
fakeroot is just to put the correct permission / ownership in the
packages (as well as create special files, mainly in /dev but these are
managed by udev these days).

Olive
</POST>
<POST>
<POSTER> Tom N &lt;t...@somewhere.com&gt; </POSTER>
<POSTDATE> 2007-12-03T04:16:00 </POSTDATE>
On 2007-12-03, Manuel Reimer &lt;mrei ... @expires-31-12-2007.news-group.org&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; ciol wrote:
">

....

<QUOTE PREVIOUSPOST="
&gt; /usr/local not always works. At least for libraries, this may cause
&gt; trouble.
">

I have had many problems with libs in /usr/local/lib when building apps
from source. Even though that path is in my /etc/ld.so.conf and this
is where they were put during the process of building the libs from
source with just ./configure, make, make install.

I've ended up having to copy them to /usr/lib.

(this was not in a fakeroot environment)

Tom

--
simpleman.s43
That would be at gee male
</POST>
<POST>
<POSTER> Olive &lt;olive...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-03T04:10:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Niki Kovacs wrote:
&gt; Le Sun, 02 Dec 2007 19:43:26 +0000, +Alan Hicks+ a écrit :

&gt;&gt; I cannot speak for slackbuilds.net as I am unfamiliar with that project.

&gt; I'm somehow familiar with the project. The project leader Nicolas Parein
&gt; aka _Hitek_ was so kind to teach me the basics of writing SlackBuild
&gt; scripts a few years ago.

&gt; The scripts on slackbuilds.net are quite clean, and they build Slackware
&gt; packages like those on slackbuilds.org. I see two major differences,
&gt; maybe three.

&gt; 1) The scripts invariably use fakeroot to avoid damage. I see the point
&gt; in that, but I never use it, since wrecking my entire system with an rm -
&gt; rf $TMP and an unset TMP variable only happened once to me, but I still
&gt; remember the feeling. IMHO, using fakeroot is like riding a bicycle with
&gt; two supplementary rear wheels. ('fakeroot' is for sissies. I use
&gt; 'fuckroot', a technique where the slightest typo results in a major
&gt; breakdown of my whole LAN :oD)
">

The Unix philosophy is &quot;never be root unles you really have too&quot; and the
fact is that you do not have to be root to build packages. I much prefer
the way Slackbuilds.net do. Although for a well tested script as the
official ones (and maybe also the slackbuilds.org packages) this might
not be a problem; it can be a problem for the person that write the
scripts. It can also be a problem if for some reason someone want to
modify an official script.

<QUOTE PREVIOUSPOST="
&gt; 2) The scripts all contain a wget download routine, so they take care of
&gt; fetching the sources for you, and checking their integrity with a simple
&gt; md5sum check.
">

This is a very weak difference. I have a small script that automatically
download the slackbuilds.org packages (you just type downslack in the
directory in which the .SlackBuild file resides. Here it is

---------------------------
#! /bin/sh

set -e
eval $( cat *.info | grep DOWNLOAD= )
wget -T 20 -c $DOWNLOAD
----------------------------

But the sclakbuilds.net approach is not a bad idea.

<QUOTE PREVIOUSPOST="
&gt; 3) The third difference I see is the availability of some &quot;packs&quot; like
&gt; for instance the GNOME packages. I gave the gnome-minimal pack a shot
&gt; lately, but it failed to build, so I wrote my own instead (... only to
&gt; find out that I hate GNOME anyway, but that's another story :oD).
">

You say that gnome minimal fail to build? Have you see this in the build
script?

#!/bin/sh

# /!\ Ce script est à executer en tant qu'utilisateur ROOT /!\
# /!\ You must run this script as ROOT /!\

set -e

# *MODIFY THIS VARIABLE!*  Normal user account (eg /home/your-user/)
USER=hitek
[...]

I do not like gnome but I like some of the gnome apps. What I would like
is the necessary gnome libraries to buils gnome packages but without the
whole gnome desktop.

Olive
</POST>
<POST>
<POSTER> Niki Kovacs &lt;mic...@mouse.com&gt; </POSTER>
<POSTDATE> 2007-12-03T07:38:00 </POSTDATE>
Le Mon, 03 Dec 2007 10:10:46 +0100, Olive a écrit :

<QUOTE PREVIOUSPOST="
&gt; The Unix philosophy is &quot;never be root unles you really have too&quot; and the
&gt; fact is that you do not have to be root to build packages. I much prefer
&gt; the way Slackbuilds.net do. Although for a well tested script as the
&gt; official ones (and maybe also the slackbuilds.org packages) this might
&gt; not be a problem;
">

Well, in some rare cases when I have doubts if make install DESTDIR=$PKG
will work, it can happen that I give it a shot as a normal user. But
since in any case I have a dedicated build box double-booting on a
sandbox install, I just don't care about fakeroot.

I know that bit of UNIX philosophy. But I also know that Patrick V.
builds all his packages as root. It's a case of &quot;being more royalist than
the king himself&quot; :oD

<QUOTE PREVIOUSPOST="
&gt; This is a very weak difference. I have a small script that automatically
&gt; download the slackbuilds.org packages (you just type downslack in the
&gt; directory in which the .SlackBuild file resides.
">

Nice idea! Though I usually include a wget routine directly in my own
scripts, since the whole build on my build box is automated, launched
from a master build script, and the scripts reside in an SVN tree.

<QUOTE PREVIOUSPOST="
&gt; You say that gnome minimal fail to build? Have you see this in the build
&gt; script?

&gt; # *MODIFY THIS VARIABLE!*  Normal user account (eg /home/your-user/)
&gt; USER=hitek
">

Yeah, sure, I saw it. But when I tried it (maybe 2 months ago), some of
the source directories were badly symlinked, and I just didn't have the
heart to correct all that manually. Maybe it's been corrected since.

cheers,

Niki
</POST>
<POST>
<POSTER> Olive &lt;ol...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-03T08:37:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Niki Kovacs wrote:
&gt; Le Mon, 03 Dec 2007 10:10:46 +0100, Olive a écrit :

&gt;&gt; The Unix philosophy is &quot;never be root unles you really have too&quot; and the
&gt;&gt; fact is that you do not have to be root to build packages. I much prefer
&gt;&gt; the way Slackbuilds.net do. Although for a well tested script as the
&gt;&gt; official ones (and maybe also the slackbuilds.org packages) this might
&gt;&gt; not be a problem;

&gt; Well, in some rare cases when I have doubts if make install DESTDIR=$PKG
&gt; will work, it can happen that I give it a shot as a normal user. But
&gt; since in any case I have a dedicated build box double-booting on a
&gt; sandbox install, I just don't care about fakeroot.
">

Instead of dual booting; you can use chroot. You type chroot /newroot
and you are in the other installation. I often do that to chroot in
another distribution. Correctly configured (you have to take care of the
/proc /dev /sys as well as some permissions); you can launch about
anything in the chroot including 3D apps. This approach is much more
convenient than to dual boot. But this is a little of this thread; we
can start a new thread on this subject if someone is interested.

<QUOTE PREVIOUSPOST="
&gt; I know that bit of UNIX philosophy. But I also know that Patrick V.
&gt; builds all his packages as root. It's a case of &quot;being more royalist than
&gt; the king himself&quot; :oD
">

I do not consider P.V. as a &quot;King&quot;. He is the maintainer of Slackware
not a divinity. This approach to build as root is something that I do
not like but as a whole I still prefer Slackware to other distributions
especially because there is no tons of patches making the software
unstable and because I can just configure and tweak my systems without
having take care of a Debian/Ubuntu/Gentoo/Whatever-way. But if someone
point me another distribution satisfying these two conditions; i would
definitively give it a try.

<QUOTE PREVIOUSPOST="
&gt;&gt; This is a very weak difference. I have a small script that automatically
&gt;&gt; download the slackbuilds.org packages (you just type downslack in the
&gt;&gt; directory in which the .SlackBuild file resides.

&gt; Nice idea! Though I usually include a wget routine directly in my own
&gt; scripts, since the whole build on my build box is automated, launched
&gt; from a master build script, and the scripts reside in an SVN tree.
">

I agree with you this is a nice idea. But The difference is too weak
IMHO to justify yet another philosophy.

Olive
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-03T13:09:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
&gt; &gt; You say that gnome minimal fail to build? Have you see this in the
&gt; &gt; build script?

&gt; &gt; # *MODIFY THIS VARIABLE!*  Normal user account (eg /home/your-user/)
&gt; &gt; USER=hitek

&gt; Yeah, sure, I saw it. But when I tried it (maybe 2 months ago), some
&gt; of the source directories were badly symlinked, and I just didn't
&gt; have the heart to correct all that manually. Maybe it's been
&gt; corrected since.
">

hi Niki,

you use svn depot, and svn is a devellopement branch. I try it, it failed. I
talk about it in the forum, and 2 days laters all works fine. Did you do it ?

PS : is my message, responding to this thread, where I talk about sb.net too is
passed ? The one where I begin by  : &quot;I can, I see it born and I use it daily.
On SBn all scripts are also
packaged in /usr, and man pages are gzip, binaries and some libraries are ...&quot; ?
My nntp server seems to have matter. thx
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHVEY99sCa4LW0nIwRAknOAJ43zn/8xmlAlN/NEmX0pU+SOwna6QCcDaX3
XNJsbYgkiXSqkdBUvp79QYQ=
=W9Xj
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> ciol &lt;cio...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-12-03T13:10:00 </POSTDATE>
man ldconfig

<QUOTE PREVIOUSPOST="
Tom N wrote:
&gt; On 2007-12-03, Manuel Reimer &lt;mrei ... @expires-31-12-2007.news-group.org&gt; wrote:
&gt;&gt; ciol wrote:
&gt; ....

&gt;&gt; /usr/local not always works. At least for libraries, this may cause
&gt;&gt; trouble.

&gt; I have had many problems with libs in /usr/local/lib when building apps
&gt; from source. Even though that path is in my /etc/ld.so.conf and this
&gt; is where they were put during the process of building the libs from
&gt; source with just ./configure, make, make install.

&gt; I've ended up having to copy them to /usr/lib.

&gt; (this was not in a fakeroot environment)

&gt; Tom
">
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-03T13:10:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; &gt; You say that gnome minimal fail to build? Have you see this in the
&gt; &gt; build script?

&gt; &gt; # *MODIFY THIS VARIABLE!*  Normal user account (eg /home/your-user/)
&gt; &gt; USER=hitek

&gt; Yeah, sure, I saw it. But when I tried it (maybe 2 months ago), some
&gt; of the source directories were badly symlinked, and I just didn't
&gt; have the heart to correct all that manually. Maybe it's been
&gt; corrected since.
">

hi Niki,

you use svn depot, and svn is a devellopement branch. I try it, it failed. I
talk about it in the forum, and 2 days laters all works fine. Did you do it ?

PS : is my message, responding to this thread, where I talk about sb.net too is
passed ? The one where I begin by  : &quot;I can, I see it born and I use it daily.
On SBn all scripts are also
packaged in /usr, and man pages are gzip, binaries and some libraries are ...&quot; ?
My nntp server seems to have matter. thx
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-03T13:13:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; &gt; You say that gnome minimal fail to build? Have you see this in the
&gt; &gt; build script?

&gt; &gt; # *MODIFY THIS VARIABLE!*  Normal user account (eg /home/your-user/)
&gt; &gt; USER=hitek

&gt; Yeah, sure, I saw it. But when I tried it (maybe 2 months ago), some
&gt; of the source directories were badly symlinked, and I just didn't
&gt; have the heart to correct all that manually. Maybe it's been
&gt; corrected since.
">

hi Niki,

you use svn depot, and svn is a devellopement branch. I try it, it
failed. I talk about it in the forum, and 2 days laters all works fine.
Did you do it ?

PS : is my message, responding to this thread, where I talk about
sb.net too is passed ? The one where I begin by  : &quot;I can, I see it
born and I use it daily. On SBn all scripts are also
packaged in /usr, and man pages are gzip, binaries and some libraries
are ...&quot; ? My nntp server seems to have matter. thx
</POST>
<POST>
<POSTER> ciol &lt;cio...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-12-03T13:15:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Manuel Reimer wrote:
&gt; If a script fails to execute with fakeroot, then you may fix it and post
&gt; the fix to the mailing list. I'm sure the fix will be added.
">

The fix is to accept that you are wrong and that you should do what
slackbuild.net does.
Only chown and makepkg are done with fakeroot:

PACKAGING=&quot;
chown root:root . -R
/sbin/makepkg -l y -c n $OUT/$NAMETGZ-$VERSION-$ARCH-$BUILD.tgz
rm -rf $PKG
rm -rf $TMP/$NAME
&quot;
if type -p fakeroot ; then
echo &quot;$PACKAGING&quot; | fakeroot
else
su -c &quot;$PACKAGING&quot;
fi

see http://wiki.slackbuilds.net/exemple
</POST>
<POST>
<POSTER> Olive &lt;olive...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-03T13:22:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Jérôme PRIOR wrote:
&gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; Hash: SHA1

&gt;&gt;&gt; You say that gnome minimal fail to build? Have you see this in the
&gt;&gt;&gt; build script?

&gt;&gt;&gt; # *MODIFY THIS VARIABLE!*  Normal user account (eg /home/your-user/)
&gt;&gt;&gt; USER=hitek
&gt;&gt; Yeah, sure, I saw it. But when I tried it (maybe 2 months ago), some
&gt;&gt; of the source directories were badly symlinked, and I just didn't
&gt;&gt; have the heart to correct all that manually. Maybe it's been
&gt;&gt; corrected since.

&gt; hi Niki,

&gt; you use svn depot, and svn is a devellopement branch. I try it, it failed. I
&gt; talk about it in the forum, and 2 days laters all works fine. Did you do it ?
">

But I read on http://www.slackbuilds.net/AutoIndex/index.php that the
FTP access is simply a snapshot of the SVN made of a regular basis and
not a release. The explanations suggests that the svn branch is no more
stable that the FTP access. Do I miss something?

Olive
</POST>
<POST>
<POSTER> Niki Kovacs &lt;mic...@mouse.com&gt; </POSTER>
<POSTDATE> 2007-12-03T13:34:00 </POSTDATE>
Le Mon, 03 Dec 2007 14:37:18 +0100, Olive a écrit :

<QUOTE PREVIOUSPOST="
&gt; Instead of dual booting; you can use chroot. You type chroot /newroot
&gt; and you are in the other installation. I often do that to chroot in
&gt; another distribution. Correctly configured (you have to take care of the
&gt; /proc /dev /sys as well as some permissions); you can launch about
&gt; anything in the chroot including 3D apps. This approach is much more
&gt; convenient than to dual boot. But this is a little of this thread; we
&gt; can start a new thread on this subject if someone is interested.
">

Again, thanks for the advice. But it's a bit missing the point.

1) The Sandbox is what it should be: a sandbox. An environment to try out
things, especially those liable to create havoc on my system.

2) The Buildbox is what it should be: a buildbox. A clean install of
Slackware, only serving one single purpose: build my own set of packages
cleanly, in order to distribute them on a series of production machines
here. No more, no less.

It's like in real life: there's no sense mixing a playground and a
parking area for military vehicles :oD

<QUOTE PREVIOUSPOST="
&gt; I do not consider P.V. as a &quot;King&quot;. He is the maintainer of Slackware
&gt; not a divinity. This approach to build as root is something that I do
&gt; not like but as a whole I still prefer Slackware to other distributions
&gt; especially because there is no tons of patches making the software
&gt; unstable and because I can just configure and tweak my systems without
&gt; having take care of a Debian/Ubuntu/Gentoo/Whatever-way. But if someone
&gt; point me another distribution satisfying these two conditions; i would
&gt; definitively give it a try.
">

In that case, I'd recommend Greg Shafer's DIY Linux ( http://www.diy-
linux.org/) and Jaguar Linux ( http://www.jaguarlinux.com/ ). A
perfectionist's heaven and hell :oD

cheers,

Niki
</POST>
<POST>
<POSTER> Niki Kovacs &lt;mic...@mouse.com&gt; </POSTER>
<POSTDATE> 2007-12-03T13:46:00 </POSTDATE>
Le Mon, 03 Dec 2007 19:15:30 +0100, ciol a écrit :

<QUOTE PREVIOUSPOST="
&gt; The fix is to accept that you are wrong and that you should do what
&gt; slackbuild.net does.
">

This should pretty much answer the question stated above, pondering the
existence of no less than two distinct sites dedicated to SlackBuilds.
The slackbuilds.org folks got all wrong, so we're gonna count ourselves
lucky to have slackbuilds.net around.
</POST>
<POST>
<POSTER> Tom N &lt;t...@somewhere.com&gt; </POSTER>
<POSTDATE> 2007-12-03T19:04:00 </POSTDATE>
On 2007-12-03, ciol &lt;cio ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Tom N wrote:
&gt;&gt; On 2007-12-03, Manuel Reimer &lt;mrei ... @expires-31-12-2007.news-group.org&gt; wrote:
&gt;&gt;&gt; ciol wrote:
&gt;&gt; ....

&gt;&gt;&gt; /usr/local not always works. At least for libraries, this may cause
&gt;&gt;&gt; trouble.

&gt;&gt; I have had many problems with libs in /usr/local/lib when building apps
&gt;&gt; from source. Even though that path is in my /etc/ld.so.conf and this
&gt;&gt; is where they were put during the process of building the libs from
&gt;&gt; source with just ./configure, make, make install.

&gt;&gt; I've ended up having to copy them to /usr/lib.

&gt;&gt; (this was not in a fakeroot environment)

&gt;&gt; Tom

&gt; man ldconfig
">

-p
Print the lists of directories and candidate libraries stored in the current cache.

Hi ciol. I found the manpage on the web. Ran ldconfig -p and the libs in
/usr/local/lib show up. So now I am even more confused. :-)

But it is good to have the manpage. Thanks.

Tom

--
simpleman.s43
That would be at gee male
</POST>
<POST>
<POSTER> Beej Jorgensen &lt;b...@beej.us&gt; </POSTER>
<POSTDATE> 2007-12-03T19:05:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
ciol  &lt;cio ... @gmail.com&gt; wrote:
&gt;What if you have package X from slackbuild, not in slackware 12, but
&gt;that will be in slackware 13?
">

Then won't package X be removed from /usr/local and slack 13's package
installed in /usr when I upgradepkg?

I'm not sure how that's different than if package X was in /usr.

-Beej
</POST>
<POST>
<POSTER> Robby Workman &lt;newsgro...@rlworkman.net&gt; </POSTER>
<POSTDATE> 2007-12-04T00:00:00 </POSTDATE>
On 2007-12-02, ciol &lt;cio ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Olive wrote:
&gt;&gt; I wonder why two projects are needed.

&gt; Because slackbuilds.org does not support fakeroot (or you have to
&gt; execute all the script with fakeroot, which sometimes fails).
">

Here's my take on that:
http://lists.slackbuilds.org/pipermail/slackbuilds-users/2007-May/000...

<QUOTE PREVIOUSPOST="
&gt; Both disregard an important point though: they install in /usr by
&gt; default, whereas they *should* install in /usr/local (that's why PV set
&gt; $PATH as /usr/local:...)
">

...and I'll post this one again since it's mentioned here too:
http://lists.slackbuilds.org/pipermail/slackbuilds-users/2007-Februar...

-RW
</POST>
<POST>
<POSTER> Robby Workman &lt;newsgro...@rlworkman.net&gt; </POSTER>
<POSTDATE> 2007-12-04T00:02:00 </POSTDATE>
On 2007-12-02, ciol &lt;cio ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Helmut Hullen wrote:
&gt;&gt; No - &quot;/usr/local&quot; is for my very private packets. Not for &quot;world wide&quot;
&gt;&gt; packages close to the official packets.

&gt; NO.
&gt; /usr/local is for _all_ packages which are not official.
&gt; What if you have package X from slackbuild, not in slackware 12, but
&gt; that will be in slackware 13?
">

It's called upgradepkg(8)

-RW
</POST>
<POST>
<POSTER> Robby Workman &lt;newsgro...@rlworkman.net&gt; </POSTER>
<POSTDATE> 2007-12-04T00:06:00 </POSTDATE>
On 2007-12-03, ciol &lt;cio ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Manuel Reimer wrote:
&gt;&gt; If a script fails to execute with fakeroot, then you may fix it and post
&gt;&gt; the fix to the mailing list. I'm sure the fix will be added.

&gt; The fix is to accept that you are wrong and that you should do what
&gt; slackbuild.net does.
&gt; Only chown and makepkg are done with fakeroot:
">

I have nothing against using someone using fakeroot if they
desire, but the SlackBuilds.org project has no plans to support
it in our builds.  If that makes us &quot;wrong&quot; then I guess we'll
just be &quot;wrong&quot; (along with official Slackware).

It distills to a matter of trust - either one trusts the team
to release tested scripts that don't do &quot;Bad Things&quot; or one does
not.  If one does not trust our team, then by all means, don't
use our stuff - it's that simple.

-RW
</POST>
<POST>
<POSTER> Olive &lt;olive...@tele2allin.be&gt; </POSTER>
<POSTDATE> 2007-12-04T03:59:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; I have nothing against using someone using fakeroot if they
&gt; desire, but the SlackBuilds.org project has no plans to support
&gt; it in our builds.  If that makes us &quot;wrong&quot; then I guess we'll
&gt; just be &quot;wrong&quot; (along with official Slackware).
">

Patrik Volkerding has probably his reasons which I do not know. But
there is a tendency by some persons on this list to consider P.V. as a
kind of divinity and simply answering &quot;P.V do the same&quot; is not a
sufficient answer. I you do a choice; please have arguments. I am sure
that P.V. does not take its decision simply because someone that he
considers &quot;perfect&quot; do the same.

<QUOTE PREVIOUSPOST="
&gt; It distills to a matter of trust - either one trusts the team
&gt; to release tested scripts that don't do &quot;Bad Things&quot; or one does
&gt; not.  If one does not trust our team, then by all means, don't
&gt; use our stuff - it's that simple.
">

I must say that although I valuate and use slackbuilds.org; I do not
agree. I do not think you will intentionaly put damaging scripts on
slackbuilds.org but what if a mistake. Quite often the upstream author
recommends not building as root for this reason (as an example among
other read the README in the Linux kernel source). Nobody can just say
that he will never do a mistake; I would not even put such a trust in
myself.

Another problem is if someone want to modify a script. When I do that I
would be much more comfortable with the fakeroot approach. Also using
fakeroot is more comfortable for the person who write the scripts (I
have written a few scrits).

Olive
</POST>
<POST>
<POSTER> Niki Kovacs &lt;mic...@mouse.com&gt; </POSTER>
<POSTDATE> 2007-12-04T04:44:00 </POSTDATE>
Le Tue, 04 Dec 2007 09:59:50 +0100, Olive a écrit :

<QUOTE PREVIOUSPOST="
&gt; Patrik Volkerding has probably his reasons which I do not know. But
&gt; there is a tendency by some persons on this list to consider P.V. as a
&gt; kind of divinity and simply answering &quot;P.V do the same&quot; is not a
&gt; sufficient answer.
">

Speaking of divinity. I've been following the fakeroot vs. root debate
for a while, and I can't help feeling that the whole discussion is being
undermined by motivations of a more theological and/or psychological
dimension.

In short, shall I humbly savour the taste of my own insignificance (e. g.
use fakeroot) or dwell pompously in God-like hybris (e. g. use root)?
Discussions of that questions are developed with a zeal only equalled by
that of medieval byzantine theologists.

Let's just pray to the Goddess of Simplicity, shall we?

Niki
</POST>
<POST>
<POSTER> Manuel Reimer &lt;mrei...@expires-31-12-2007.news-group.org&gt; </POSTER>
<POSTDATE> 2007-12-04T05:30:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
ciol wrote:
&gt; Manuel Reimer wrote:
&gt;&gt; If a script fails to execute with fakeroot, then you may fix it and
&gt;&gt; post the fix to the mailing list. I'm sure the fix will be added.
&gt; The fix is to accept that you are wrong and that you should do what
&gt; slackbuild.net does.
&gt; Only chown and makepkg are done with fakeroot:
">

Why? All the checks in ./configure will do well with fakeroot, as
fakeroot just spoofs file owners to be root where they arent in real.
This causes &quot;tar&quot; to create a valid tgz package.

CU

Manuel
</POST>
<POST>
<POSTER> Mark South &lt;mark.so...@null.invalid&gt; </POSTER>
<POSTDATE> 2007-12-04T05:35:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
On Tue, 04 Dec 2007 09:44:10 +0000, Niki Kovacs wrote:
&gt; Le Tue, 04 Dec 2007 09:59:50 +0100, Olive a écrit :

&gt;&gt; Patrik Volkerding has probably his reasons which I do not know. But
&gt;&gt; there is a tendency by some persons on this list to consider P.V. as a
&gt;&gt; kind of divinity and simply answering &quot;P.V do the same&quot; is not a
&gt;&gt; sufficient answer.

&gt; Speaking of divinity. I've been following the fakeroot vs. root debate
&gt; for a while, and I can't help feeling that the whole discussion is being
&gt; undermined by motivations of a more theological and/or psychological
&gt; dimension.
">

Could we agree on &quot;philosophical dimension&quot;?

And probably not undermined, but the divisions appearing are along
philosophical lines.

<QUOTE PREVIOUSPOST="
&gt; In short, shall I humbly savour the taste of my own insignificance (e.
&gt; g. use fakeroot) or dwell pompously in God-like hybris (e. g. use root)?
&gt; Discussions of that questions are developed with a zeal only equalled by
&gt; that of medieval byzantine theologists.
">

The philosophical gap is exactly that: does one trust to power being used
wisely and without error at all times, preferably unencumbered by
timewasting restrictions, or does one believe that a task should be
accomplished with the lowest possible privilege and therefore the lowest
overall risk?

Those concerned with security and stability and who believe in human
fallibility will prefer the latter approach.  Those who trust their skill
and experience, and who never do development while tired or drunk will
prefer the latter.

<QUOTE PREVIOUSPOST="
&gt; Let's just pray to the Goddess of Simplicity, shall we?
">

She used to post here, didn't she?  But I guess she finished college.
</POST>
<POST>
<POSTER> Mark South &lt;mark.so...@null.invalid&gt; </POSTER>
<POSTDATE> 2007-12-04T11:35:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
On Sun, 02 Dec 2007 13:56:18 +0100, Olive wrote:
&gt; I knew http://www.slackbuilds.org but I have found
&gt; http://www.slackbuilds.net . It is based on the same context (the
&gt; explanations are in French but you can easily get the build scripts;
&gt; click on &quot;slackbuilds&quot; and you will find a svn link). They have
&gt; apparently more packages (including a set of buildscript for Gnome).
&gt; Anyone knew that? I wonder why two projects are needed.
">

Maybe not only two.  I just had this link pop up in the feed from
linux.com:

http://www.linux.com/feature/121499

Has anybody here used src2pkg?  It may have been mentioned but if it was I
missed it.  If anyone has used it, whaddyathink?
</POST>
<POST>
<POSTER> +Alan Hicks+ &lt;a...@lizella.netWORK&gt; </POSTER>
<POSTDATE> 2007-12-04T11:42:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 2007-12-03, Olive &lt;olive ... @tele2allin.be&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I have a small script that automatically
&gt; download the slackbuilds.org packages (you just type downslack in the
&gt; directory in which the .SlackBuild file resides. Here it is

&gt; ---------------------------
&gt; #! /bin/sh

&gt; set -e
&gt; eval $( cat *.info | grep DOWNLOAD= )
&gt; wget -T 20 -c $DOWNLOAD
&gt; ----------------------------
">

Please note that at this time, this is very bad form and could result
in some crazy behavior.  The problem is a simple one, and one we should
have solved soon.  The variable values in the info files are not
quoted, so it's possible to see something like:

DOWNLOAD= http://www.foo.bar/foo-1.tar.gz&amp;rm;\ -fr\ \/

Obviously such an obvious problem wouldn't make it past the admin team,
but there are many HTTP links that use the ampersand.  Anything after
that would be interpreted as a command to execute.  Most likely you'll
just end up with a lot of &quot;file not found&quot; bash errors and the like,
and wget will fail to locate the proper file.

Plans are in the works to double quote the values of all variables in
the .info files to avoid this issue.  Then, something like the
following should work.

wget -T 20 $(grep DOWNLOAD *.info | cut -f 2- -d '=' )

Please note I've not tested this at all. :^)

- --
It is better to hear the rebuke of the wise,
Than for a man to hear the song of fools.
Ecclesiastes 7:5
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHVYOErZS6hX/gvjoRAkP5AJsGkNykC6fnrd5slpJIP6gPiGpJfgCggQCy
KeJuwrvHO8uXH6caB6b0Hu0=
=PmuA
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> ciol &lt;cio...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-12-04T12:26:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Manuel Reimer wrote:
&gt; Why? All the checks in ./configure will do well with fakeroot
">

Obviously you have never tried it.
</POST>
<POST>
<POSTER> ciol &lt;cio...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-12-04T12:34:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Robby Workman wrote:
">

&gt;Remember: simple is good!  :)

Simplicity is to be sure that when you create the package, it will not
do something weird in {/*}\$HOME, by only adding very few lines.

I don't care. Man are stupid: they are too proud to change what they
have done for long.
</POST>
<POST>
<POSTER> Niki Kovacs &lt;mic...@mouse.com&gt; </POSTER>
<POSTDATE> 2007-12-04T12:54:00 </POSTDATE>
Le Tue, 04 Dec 2007 18:34:20 +0100, ciol a écrit :

<QUOTE PREVIOUSPOST="
&gt; I don't care. Man are stupid: they are too proud to change what they
&gt; have done for long.
">

In case someone wondered: ciol is the resident Slackware troll from
France. Let's leave it at that for the introduction. Update your
killfiles, folks.

cheers, er, *plonk*

Niki
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-04T14:10:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
&gt; Please note that at this time, this is very bad form and could result
&gt; in some crazy behavior.  The problem is a simple one, and one we
&gt; should have solved soon.  The variable values in the info files are
&gt; not quoted, so it's possible to see something like:

&gt; DOWNLOAD= http://www.foo.bar/foo-1.tar.gz&amp;rm;\ -fr\ \/
">

this is not a matter, you use fakeroot or su -c no ? NO! arf, sorry for you ;)
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHVaY99sCa4LW0nIwRAr+6AJ9PwkJ+urQYnTA6dDS6ntl88hBYrACcDOgs
19o2EoRTQgAIoYWNB0jIoO4=
=SJ6I
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> Jérôme PRIOR &lt;res...@inside.net&gt; </POSTER>
<POSTDATE> 2007-12-04T14:12:00 </POSTDATE>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

<QUOTE PREVIOUSPOST="
&gt; Please note that at this time, this is very bad form and could result
&gt; in some crazy behavior.  The problem is a simple one, and one we
&gt; should have solved soon.  The variable values in the info files are
&gt; not quoted, so it's possible to see something like:

&gt; DOWNLOAD= http://www.foo.bar/foo-1.tar.gz&amp;rm;\ -fr\ \/
">

this is not a matter, you use fakeroot or su -c no ? NO! arf, sorry for you ;)
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQFHVaaD9sCa4LW0nIwRAln+AJ9NfXoBpbOF56yXdg2E5DfwCr65BQCff+kD
5pV3Sh4OMglN7UvkDr4AeTw=
=N90Z
-----END PGP SIGNATURE-----
</POST>
<POST>
<POSTER> Jérôme Prior &lt;x...@noname.org&gt; </POSTER>
<POSTDATE> 2007-12-04T17:27:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; The two projects are maintained by different groups and with different
&gt; goals.  Use whichever you prefer, though fo obvious reasons I prefer
&gt; SBo.

&gt; SBo (my short-hand from slackbuilds.org) tries to make build scripts
&gt; available that are as &quot;true&quot; to how we feel Pat would make them himself.
&gt;  In other words, there's no extraneous dependency management beyond a
&gt; README file, everything is pacakged up in /usr, and by and large we try
&gt; to keep them as simple as possible.  Each script in our repository is
&gt; checked over by at least 1 member of the admin team to ensure that it is
&gt; &quot;perfect&quot; (for some definition of &quot;perfect&quot;).  We try to weed out any
&gt; major problems and ensure that each will compile just fine on a stock
&gt; Slackware installation.

&gt; I cannot speak for slackbuilds.net as I am unfamiliar with that project.
">

first message isn't pass, I hope this one do.
When I talk about &quot;dependancies manager&quot; it was a joke. Really is simply
a line commented : #Depends:soft1,sof2,... for help de packager to find
other slackbuilds in svn. All soft are not mentionned in this line : only
those aren't in Slackware. So, a real &quot;manager&quot; isn't it ? There is
README file only if something is important to say : &quot;gtk-last break xfce,
trac need a subversion with swig support, ...&quot;, not systematicly. Some
patches can be included, only if there is very usefull, or be included on
the next version of the soft. Patch for candies features simply ignore.

Another thing, is testing. A SlackBuilder must test his SlackBuild on a
vanilla Slackware. I don't know if I say, but it's simply stupid to
provide a SlackBuild that is not test and build the package on a vanilla
slackware. An exemple is Vym. On my Slackware it just work fine ! Of
course, I've got qt-4, but Slackware provid qt-3, and vym-last do not
build on qt-3. This is an uncouth exemple, but other exemple exist : trac
works fine on my Slackware, because I've got subversion rebuild with
swig, if not, trac not display websvn ... and exemple like this there is
thousand.

Finally, all packages build via scripts from SlackBuilds.net are also
perfect :
- correct PATH
- slack-desc
- goods permissions
- gzip man pages
- strip libraries and binaries when avaible (some binaries cannot be
stripped)
- all important file in /usr/doc/pkg-version (even if the LHS indicated /
usr/share/doc)
- what else ? all is simply good :)

Using sbn or sbo, the most important is to edit the script before launch
it, otherwise, just take a binary somewhere in the web.

--
aster, with a fucking open nntp server working ... sometimes
</POST>
<POST>
<POSTER> Martijn Dekker &lt;mart...@inlv.demon.nl&gt; </POSTER>
<POSTDATE> 2007-12-05T09:00:00 </POSTDATE>
In article &lt;1196764239 ... @user.newsoffice.de&gt;,
Manuel Reimer &lt;mrei ... @expires-31-12-2007.news-group.org&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; ciol wrote:

&gt; &gt; Manuel Reimer wrote:
&gt; &gt;&gt; If a script fails to execute with fakeroot, then you may fix it and
&gt; &gt;&gt; post the fix to the mailing list. I'm sure the fix will be added.

&gt; &gt; The fix is to accept that you are wrong and that you should do what
&gt; &gt; slackbuild.net does.
&gt; &gt; Only chown and makepkg are done with fakeroot:

&gt; Why? All the checks in ./configure will do well with fakeroot, as
">

That's incorrect. Even the man page of fakeroot states that fakeroot
will confuse configure.

You should only run fakeroot for those commands for which you actually
need fake root privileges, such as 'chown' and 'makepkg'. The build
process itself should not ever run in a fakeroot environment.

<QUOTE PREVIOUSPOST="
&gt; fakeroot just spoofs file owners to be root where they arent in real.
&gt; This causes &quot;tar&quot; to create a valid tgz package.
">

No, it does more than that -- it remembers the faked effects of 'chown'
for instance. Read the man page.

- Martijn
</POST>
<POST>
<POSTER> Robby Workman &lt;newsgro...@rlworkman.net&gt; </POSTER>
<POSTDATE> 2007-12-05T14:20:00 </POSTDATE>
On 2007-12-04, Olive &lt;olive ... @tele2allin.be&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt;&gt; I have nothing against using someone using fakeroot if they
&gt;&gt; desire, but the SlackBuilds.org project has no plans to support
&gt;&gt; it in our builds.  If that makes us &quot;wrong&quot; then I guess we'll
&gt;&gt; just be &quot;wrong&quot; (along with official Slackware).

&gt; Patrik Volkerding has probably his reasons which I do not know. But
&gt; there is a tendency by some persons on this list to consider P.V. as a
&gt; kind of divinity and simply answering &quot;P.V do the same&quot; is not a
&gt; sufficient answer. I you do a choice; please have arguments. I am sure
&gt; that P.V. does not take its decision simply because someone that he
&gt; considers &quot;perfect&quot; do the same.
">

Nor do I. Of course, I didn't intend that statement to mean that we
were doing it that way because that's how Pat does it, but then, we
do try to stay as &quot;true&quot; to Slackware as possible.  Ultimately, it's
not an issue of whether our approach is &quot;perfect&quot; -- it's not.
Neither are the other alternatives (fakeroot, etcetera).  It's simply
a matter of looking at the options and choosing the one that best
fits, and for us, that option is to align with official Slackware as
much as possible.

On a related note, that's why we don't accept scripts in our repo
for things that are part of the official Slackware package tree.
We have no desire to try to maintain parts of official Slackware,
and in fact, I don't think it's a good idea at all to install newer
versions of things that are part of Slackware unless you actually
*need* some new functionality offered in the new package version.
I've seen too many cases of people wanting the &quot;new and shiny&quot;
version numbers of software, and in the process of getting it (or
attempting to so), they make things exponentially worse.  Anyway,
that's another subject, so I'll hush... :)

<QUOTE PREVIOUSPOST="
&gt;&gt; It distills to a matter of trust - either one trusts the team
&gt;&gt; to release tested scripts that don't do &quot;Bad Things&quot; or one does
&gt;&gt; not.  If one does not trust our team, then by all means, don't
&gt;&gt; use our stuff - it's that simple.

&gt; I must say that although I valuate and use slackbuilds.org; I do not
&gt; agree. I do not think you will intentionaly put damaging scripts on
&gt; slackbuilds.org but what if a mistake. Quite often the upstream author
&gt; recommends not building as root for this reason (as an example among
&gt; other read the README in the Linux kernel source). Nobody can just say
&gt; that he will never do a mistake; I would not even put such a trust in
&gt; myself.
">

Well, yeah, nobody's perfect - that's for sure.  I still posit that it
is indeed a matter of trust.  You trust that the build scripts (and
resulting packages) in official Slackware will not do Bad Things to
your system, and very rarely does that happen (and when it does, it's
in the -current development tree, where it's a known risk).  The same
applies to our project and the others - either you trust the maintainers
or you don't.  I personally think we as a group have a pretty damn good
track record, but of course, I'm biased :)

On a related note, the &quot;nobody's perfect&quot; idea is exactly why we don't
unilaterally place our *own* scripts into our repository.  For example,
I've got 10-12 waiting in our pending queue, another maintainer has
5-6 in it, and there's probably another with one or two in it, but as
a matter of policy, we require another team member to test and approve
our own submissions, just like any other submission.  Of course, if the
changes are trivial (typographical errors, simple version bumps, ...),
then we typically waive that requirement, but you get the idea.

<QUOTE PREVIOUSPOST="
&gt; Another problem is if someone want to modify a script. When I do that I
&gt; would be much more comfortable with the fakeroot approach. Also using
&gt; fakeroot is more comfortable for the person who write the scripts (I
&gt; have written a few scrits).
">

Perhaps it is, and like I said earlier, I have no problem with fakeroot
in general.  It is not, however, in the official Slackware package tree,
and until/unless that changes, we will not require it or support it as
a means of creating packages with our build scripts.

-RW
</POST>
<POST>
<POSTER> Manuel Reimer &lt;mrei...@expires-31-12-2007.news-group.org&gt; </POSTER>
<POSTDATE> 2007-12-06T05:55:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
ciol wrote:
&gt; Obviously you have never tried it.
">

I've tried this several times.

AFAIK it's pretty common on Debian systems to use fakeroot to create
deb packages.

CU

Manuel
</POST>
</TEXT>
</BODY>
</DOC>
