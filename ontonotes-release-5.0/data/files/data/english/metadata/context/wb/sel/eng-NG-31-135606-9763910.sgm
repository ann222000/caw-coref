<DOC>
<DOCID> eng-NG-31-135606-9763910 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2008-01-26T13:21:00 </DATETIME>
<BODY>
<HEADLINE>
Visual Studio 2008 with Access 2003 backend
</HEADLINE>
<TEXT>
<POST>
<POSTER> anjee &lt;anjee...@cogeco.ca&gt; </POSTER>
<POSTDATE> 2008-01-26T13:21:00 </POSTDATE>
Hello all,
We are in the process of rewriting a large application that uses an
Access 2003 backend database.  Unfortunately we will be building and
releasing the application in phases which means we are tied to the
existing backend model/structure since users will be running both the
new app and old app concurrently.  We are thinking of using VS to
rewrite the application, we currently have VS 2005.
My first question is if VS 2008 supports this outdated technology.
And secondly, what are the benefits of upgrading to VS 2008 over VS
2005?
</POST>
<POST>
<POSTER> &quot;Jamie Fraser&quot; &lt;jamie.fra...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-27T05:16:00 </POSTDATE>
VS2008 (or, rather .NET 3.5) does support access.

The benefits of .NET 3.5 over .NET 2.0 (or 1.1) are numerous, however
I'd strongly advocate using a different backend if your application
does indeed fall into the scope of &quot;large&quot;. Access isn't designed for
this - there are numerous ways around the &quot;must run concurrently with
old version&quot; problem. Why not try outlining how your system works
here, and I'm sure someone will come up with a good way of doing just
that?

On 26/01/2008, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hello all,
&gt; We are in the process of rewriting a large application that uses an
&gt; Access 2003 backend database.  Unfortunately we will be building and
&gt; releasing the application in phases which means we are tied to the
&gt; existing backend model/structure since users will be running both the
&gt; new app and old app concurrently.  We are thinking of using VS to
&gt; rewrite the application, we currently have VS 2005.
&gt; My first question is if VS 2008 supports this outdated technology.
&gt; And secondly, what are the benefits of upgrading to VS 2008 over VS
&gt; 2005?
">
</POST>
<POST>
<POSTER> &quot;Peter Groenewegen&quot; &lt;pgro...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-27T05:36:00 </POSTDATE>
You can still connect to Access. MS will allways support OleDB connections.

If you are thinking about syncronizing databases you should have a look as
SSIS (Part of SQL Server).

--
Peter

On Jan 26, 2008 7:21 PM, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hello all,
&gt; We are in the process of rewriting a large application that uses an
&gt; Access 2003 backend database.  Unfortunately we will be building and
&gt; releasing the application in phases which means we are tied to the
&gt; existing backend model/structure since users will be running both the
&gt; new app and old app concurrently.  We are thinking of using VS to
&gt; rewrite the application, we currently have VS 2005.
&gt; My first question is if VS 2008 supports this outdated technology.
&gt; And secondly, what are the benefits of upgrading to VS 2008 over VS
&gt; 2005?
">
</POST>
<POST>
<POSTER> Dennis Hoyer &lt;Dennis.ho...@gmx.net&gt; </POSTER>
<POSTDATE> 2008-01-27T07:16:00 </POSTDATE>
If that doesen't work, i think you can use an odbc connection to
connect to your database

....
http://www.xing.com/profile/dennis_Hoyer2
http://home.arcor.de/Dennis.hoyer

On 27 Jan., 11:36, &quot;Peter Groenewegen&quot; &lt;pgro ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; You can still connect to Access. MS will allways support OleDB connections.

&gt; If you are thinking about syncronizing databases you should have a look as
&gt; SSIS (Part of SQL Server).

&gt; --
&gt; Peter

&gt; On Jan 26, 2008 7:21 PM, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

&gt; &gt; Hello all,
&gt; &gt; We are in the process of rewriting a large application that uses an
&gt; &gt; Access 2003 backend database.  Unfortunately we will be building and
&gt; &gt; releasing the application in phases which means we are tied to the
&gt; &gt; existing backend model/structure since users will be running both the
&gt; &gt; new app and old app concurrently.  We are thinking of using VS to
&gt; &gt; rewrite the application, we currently have VS 2005.
&gt; &gt; My first question is if VS 2008 supports this outdated technology.
&gt; &gt; And secondly, what are the benefits of upgrading to VS 2008 over VS
&gt; &gt; 2005?- Zitierten Text ausblenden -

&gt; - Zitierten Text anzeigen -
">
</POST>
<POST>
<POSTER> Charles &lt;charlesalo...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-28T12:42:00 </POSTDATE>
Access is a great beginner database.

What industry is your application being developed for?

How many tables are involved and what are the relationships between
them?

VS should support Access 2003 but I'm more than certain SQL Server
2005 is a better choice for your app.

On Jan 27, 5:16 am, &quot;Jamie Fraser&quot; &lt;jamie.fra ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; VS2008 (or, rather .NET 3.5) does support access.

&gt; The benefits of .NET 3.5 over .NET 2.0 (or 1.1) are numerous, however
&gt; I'd strongly advocate using a different backend if your application
&gt; does indeed fall into the scope of &quot;large&quot;. Access isn't designed for
&gt; this - there are numerous ways around the &quot;must run concurrently with
&gt; old version&quot; problem. Why not try outlining how your system works
&gt; here, and I'm sure someone will come up with a good way of doing just
&gt; that?

&gt; On 26/01/2008, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

&gt; &gt; Hello all,
&gt; &gt; We are in the process of rewriting a large application that uses an
&gt; &gt; Access 2003 backend database.  Unfortunately we will be building and
&gt; &gt; releasing the application in phases which means we are tied to the
&gt; &gt; existing backend model/structure since users will be running both the
&gt; &gt; new app and old app concurrently.  We are thinking of using VS to
&gt; &gt; rewrite the application, we currently have VS 2005.
&gt; &gt; My first question is if VS 2008 supports this outdated technology.
&gt; &gt; And secondly, what are the benefits of upgrading to VS 2008 over VS
&gt; &gt; 2005?- Hide quoted text -

&gt; - Show quoted text -
">
</POST>
<POST>
<POSTER> anjee &lt;anjee...@cogeco.ca&gt; </POSTER>
<POSTDATE> 2008-01-28T21:47:00 </POSTDATE>
Thank you for your posts.

The backend database is very large, close to 200 tables and 214
relationships.  It's at it's limits supporting up to a 8 users
concurently.  We would love to move away from Access and into SQL
Server, however due to financial concerns we will be rewriting the
application in phases.  Which means in order for a company to benefit
from the entire application they will need to run both the old app and
the new app.  The only way we feel we can accomplish this is to
continue using the existing backend until perhaps we phase out the
existing application altogether.

The current front end application is a bloated Access mde application
(56MB) that was originally written in Access 2.0 and has been upgraded
with each new version release.  We are turning our focus to the web
now and were thinking that Visual Studio would be the tool to use.  We
are just a little skeptical of jumping on board given our restriction
of the Access backend.

On Jan 28, 12:42 pm, Charles &lt;charlesalo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Access is a great beginner database.

&gt; What industry is your application being developed for?

&gt; How many tables are involved and what are the relationships between
&gt; them?

&gt; VS should support Access 2003 but I'm more than certain SQL Server
&gt; 2005 is a better choice for your app.

&gt; On Jan 27, 5:16 am, &quot;Jamie Fraser&quot; &lt;jamie.fra ... @gmail.com&gt; wrote:

&gt; &gt; VS2008 (or, rather .NET 3.5) does support access.

&gt; &gt; The benefits of .NET 3.5 over .NET 2.0 (or 1.1) are numerous, however
&gt; &gt; I'd strongly advocate using a different backend if your application
&gt; &gt; does indeed fall into the scope of &quot;large&quot;. Access isn't designed for
&gt; &gt; this - there are numerous ways around the &quot;must run concurrently with
&gt; &gt; old version&quot; problem. Why not try outlining how your system works
&gt; &gt; here, and I'm sure someone will come up with a good way of doing just
&gt; &gt; that?

&gt; &gt; On 26/01/2008, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

&gt; &gt; &gt; Hello all,
&gt; &gt; &gt; We are in the process of rewriting a large application that uses an
&gt; &gt; &gt; Access 2003 backend database.  Unfortunately we will be building and
&gt; &gt; &gt; releasing the application in phases which means we are tied to the
&gt; &gt; &gt; existing backend model/structure since users will be running both the
&gt; &gt; &gt; new app and old app concurrently.  We are thinking of using VS to
&gt; &gt; &gt; rewrite the application, we currently have VS 2005.
&gt; &gt; &gt; My first question is if VS 2008 supports this outdated technology.
&gt; &gt; &gt; And secondly, what are the benefits of upgrading to VS 2008 over VS
&gt; &gt; &gt; 2005?- Hide quoted text -

&gt; &gt; - Show quoted text -- Hide quoted text -

&gt; - Show quoted text -
">
</POST>
<POST>
<POSTER> &quot;Charles A. Lopez&quot; &lt;charlesalo...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-29T12:11:00 </POSTDATE>
Sounds like a project I could join. :-)

I'd suggest the following. Put time limits on what you're trying to
accomplish. Use project management concepts.

How many users do you want your app to support? I'm thinking you'll run into
locking and concurrency issues. When that time comes, don't forget the
&quot;pidgeon hole principle&quot; aka &quot;the box principle&quot;.

You'll also need to sell the idea of SQL Server. No company has unlimited
resources but eventually the cost of maintaing the old solution will
outweigh the cost of developing a new one.

How long has this company been in business? How long do they want to stay in
business? Change almost always provokes anxiety.

200 tables and 214 relationships... sounds way too complicated. You could
probably reduce that. Don't try to support every crazy feature requested.

Microsoft has many partners (I'm one of them) that have probably already
implemented something similar to what you're trying to accomplish.

Last question: What's the companies budget?

On 1/28/08, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Thank you for your posts.

&gt; The backend database is very large, close to 200 tables and 214
&gt; relationships.  It's at it's limits supporting up to a 8 users
&gt; concurently.  We would love to move away from Access and into SQL
&gt; Server, however due to financial concerns we will be rewriting the
&gt; application in phases.  Which means in order for a company to benefit
&gt; from the entire application they will need to run both the old app and
&gt; the new app.  The only way we feel we can accomplish this is to
&gt; continue using the existing backend until perhaps we phase out the
&gt; existing application altogether.

&gt; The current front end application is a bloated Access mde application
&gt; (56MB) that was originally written in Access 2.0 and has been upgraded
&gt; with each new version release.  We are turning our focus to the web
&gt; now and were thinking that Visual Studio would be the tool to use.  We
&gt; are just a little skeptical of jumping on board given our restriction
&gt; of the Access backend.

&gt; On Jan 28, 12:42 pm, Charles &lt;charlesalo ... @gmail.com&gt; wrote:
&gt; &gt; Access is a great beginner database.

&gt; &gt; What industry is your application being developed for?

&gt; &gt; How many tables are involved and what are the relationships between
&gt; &gt; them?

&gt; &gt; VS should support Access 2003 but I'm more than certain SQL Server
&gt; &gt; 2005 is a better choice for your app.

&gt; &gt; On Jan 27, 5:16 am, &quot;Jamie Fraser&quot; &lt;jamie.fra ... @gmail.com&gt; wrote:

&gt; &gt; &gt; VS2008 (or, rather .NET 3.5) does support access.

&gt; &gt; &gt; The benefits of .NET 3.5 over .NET 2.0 (or 1.1) are numerous, however
&gt; &gt; &gt; I'd strongly advocate using a different backend if your application
&gt; &gt; &gt; does indeed fall into the scope of &quot;large&quot;. Access isn't designed for
&gt; &gt; &gt; this - there are numerous ways around the &quot;must run concurrently with
&gt; &gt; &gt; old version&quot; problem. Why not try outlining how your system works
&gt; &gt; &gt; here, and I'm sure someone will come up with a good way of doing just
&gt; &gt; &gt; that?

&gt; &gt; &gt; On 26/01/2008, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

&gt; &gt; &gt; &gt; Hello all,
&gt; &gt; &gt; &gt; We are in the process of rewriting a large application that uses an
&gt; &gt; &gt; &gt; Access 2003 backend database.  Unfortunately we will be building and
&gt; &gt; &gt; &gt; releasing the application in phases which means we are tied to the
&gt; &gt; &gt; &gt; existing backend model/structure since users will be running both
&gt; the
&gt; &gt; &gt; &gt; new app and old app concurrently.  We are thinking of using VS to
&gt; &gt; &gt; &gt; rewrite the application, we currently have VS 2005.
&gt; &gt; &gt; &gt; My first question is if VS 2008 supports this outdated technology.
&gt; &gt; &gt; &gt; And secondly, what are the benefits of upgrading to VS 2008 over VS
&gt; &gt; &gt; &gt; 2005?- Hide quoted text -

&gt; &gt; &gt; - Show quoted text -- Hide quoted text -

&gt; &gt; - Show quoted text -
">

--
Charles A. Lopez
charlesalo ... @gmail.com

Start your career with Charles A. Lopez TECHNOLOGY - Send your resume to
charlesalo ... @gmail.com

http://cs.nyu.edu/web/People/alumni.html

1-800-GOOG411 - Google's free 411 service
</POST>
<POST>
<POSTER> &quot;Andrew Badera&quot; &lt;and...@badera.us&gt; </POSTER>
<POSTDATE> 2008-01-29T12:13:00 </POSTDATE>
Way too complicated? Charles, feel free to be offended: have you ever worked
on anything at the enterprise level? Financial? Insurance? Science? This is
a tiny database.

On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; 200 tables and 214 relationships... sounds way too complicated. You could
&gt; probably reduce that. Don't try to support every crazy feature requested.
">
</POST>
<POST>
<POSTER> &quot;Andrew Badera&quot; &lt;and...@badera.us&gt; </POSTER>
<POSTDATE> 2008-01-29T12:14:00 </POSTDATE>
And as long as we're selling ourselves on here, I, too, am a Microsoft
partner, and have dealt with databases far larger than this on a regular
basis.

Charles, please knock it off, I don't want your sales pitch in MY inbox,
thanks in advance.

On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Sounds like a project I could join. :-)

&gt; I'd suggest the following. Put time limits on what you're trying to
&gt; accomplish. Use project management concepts.

&gt; How many users do you want your app to support? I'm thinking you'll run
&gt; into locking and concurrency issues. When that time comes, don't forget the
&gt; &quot;pidgeon hole principle&quot; aka &quot;the box principle&quot;.

&gt; You'll also need to sell the idea of SQL Server. No company has unlimited
&gt; resources but eventually the cost of maintaing the old solution will
&gt; outweigh the cost of developing a new one.

&gt; How long has this company been in business? How long do they want to stay
&gt; in business? Change almost always provokes anxiety.

&gt; 200 tables and 214 relationships... sounds way too complicated. You could
&gt; probably reduce that. Don't try to support every crazy feature requested.

&gt; Microsoft has many partners (I'm one of them) that have probably already
&gt; implemented something similar to what you're trying to accomplish.

&gt; Last question: What's the companies budget?

&gt; On 1/28/08, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

&gt; &gt; Thank you for your posts.

&gt; &gt; The backend database is very large, close to 200 tables and 214
&gt; &gt; relationships.  It's at it's limits supporting up to a 8 users
&gt; &gt; concurently.  We would love to move away from Access and into SQL
&gt; &gt; Server, however due to financial concerns we will be rewriting the
&gt; &gt; application in phases.  Which means in order for a company to benefit
&gt; &gt; from the entire application they will need to run both the old app and
&gt; &gt; the new app.  The only way we feel we can accomplish this is to
&gt; &gt; continue using the existing backend until perhaps we phase out the
&gt; &gt; existing application altogether.

&gt; &gt; The current front end application is a bloated Access mde application
&gt; &gt; (56MB) that was originally written in Access 2.0 and has been upgraded
&gt; &gt; with each new version release.  We are turning our focus to the web
&gt; &gt; now and were thinking that Visual Studio would be the tool to use.  We
&gt; &gt; are just a little skeptical of jumping on board given our restriction
&gt; &gt; of the Access backend.

&gt; &gt; On Jan 28, 12:42 pm, Charles &lt;charlesalo ... @gmail.com&gt; wrote:
&gt; &gt; &gt; Access is a great beginner database.

&gt; &gt; &gt; What industry is your application being developed for?

&gt; &gt; &gt; How many tables are involved and what are the relationships between
&gt; &gt; &gt; them?

&gt; &gt; &gt; VS should support Access 2003 but I'm more than certain SQL Server
&gt; &gt; &gt; 2005 is a better choice for your app.

&gt; &gt; &gt; On Jan 27, 5:16 am, &quot;Jamie Fraser&quot; &lt;jamie.fra ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; VS2008 (or, rather .NET 3.5) does support access.

&gt; &gt; &gt; &gt; The benefits of .NET 3.5 over .NET 2.0 (or 1.1) are numerous,
&gt; &gt; however
&gt; &gt; &gt; &gt; I'd strongly advocate using a different backend if your application
&gt; &gt; &gt; &gt; does indeed fall into the scope of &quot;large&quot;. Access isn't designed
&gt; &gt; for
&gt; &gt; &gt; &gt; this - there are numerous ways around the &quot;must run concurrently
&gt; &gt; with
&gt; &gt; &gt; &gt; old version&quot; problem. Why not try outlining how your system works
&gt; &gt; &gt; &gt; here, and I'm sure someone will come up with a good way of doing
&gt; &gt; just
&gt; &gt; &gt; &gt; that?

&gt; &gt; &gt; &gt; On 26/01/2008, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

&gt; &gt; &gt; &gt; &gt; Hello all,
&gt; &gt; &gt; &gt; &gt; We are in the process of rewriting a large application that uses
&gt; &gt; an
&gt; &gt; &gt; &gt; &gt; Access 2003 backend database.  Unfortunately we will be building
&gt; &gt; and
&gt; &gt; &gt; &gt; &gt; releasing the application in phases which means we are tied to the
&gt; &gt; &gt; &gt; &gt; existing backend model/structure since users will be running both
&gt; &gt; the
&gt; &gt; &gt; &gt; &gt; new app and old app concurrently.  We are thinking of using VS to
&gt; &gt; &gt; &gt; &gt; rewrite the application, we currently have VS 2005.
&gt; &gt; &gt; &gt; &gt; My first question is if VS 2008 supports this outdated technology.
&gt; &gt; &gt; &gt; &gt; And secondly, what are the benefits of upgrading to VS 2008 over
&gt; &gt; VS
&gt; &gt; &gt; &gt; &gt; 2005?- Hide quoted text -

&gt; &gt; &gt; &gt; - Show quoted text -- Hide quoted text -

&gt; &gt; &gt; - Show quoted text -

&gt; --
&gt; Charles A. Lopez
&gt; charlesalo ... @gmail.com

&gt; Start your career with Charles A. Lopez TECHNOLOGY - Send your resume to
&gt; charlesalo ... @gmail.com

&gt; http://cs.nyu.edu/web/People/alumni.html

&gt; 1-800-GOOG411 - Google's free 411 service
">

--
--Andy Badera
http://andrew.badera.us/
and ... @badera.us
(518) 641-1280
Google me: http://www.google.com/search?q=andrew+badera
</POST>
<POST>
<POSTER> &quot;Charles A. Lopez&quot; &lt;charlesalo...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-29T12:34:00 </POSTDATE>
Yah, 200 tables is way too large.

I bet there's plenty of redundancy in those tables.

Major projects can be taken on focusing on at most 14 critical items. The
database itself nor the tables is as important as the real business
processes revolving around the data.

Let me see the 200+ tables you're working at the Enterprise level and I'll
show you some Business Process Reengineering we could do to make it more
efficient. I can save that company major bucks.

This conversation doesn't even matter because the only thing that's
important is to satisfy the clients business needs. An argument about the
number of tables is pointless. Let's just say N tables. and R relationships.

I was a former engineering student so let's think of the the N and R as the
constants of integration. They don't really matter in the grander scheme of
things.

On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Way too complicated? Charles, feel free to be offended: have you ever
&gt; worked on anything at the enterprise level? Financial? Insurance? Science?
&gt; This is a tiny database.

&gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; 200 tables and 214 relationships... sounds way too complicated. You
&gt; &gt; could probably reduce that. Don't try to support every crazy feature
&gt; &gt; requested.
">

--
Charles A. Lopez
charlesalo ... @gmail.com

Start your career with Charles A. Lopez TECHNOLOGY - Send your resume to
charlesalo ... @gmail.com

http://cs.nyu.edu/web/People/alumni.html

1-800-GOOG411 - Google's free 411 service
</POST>
<POST>
<POSTER> &quot;Andrew Badera&quot; &lt;and...@badera.us&gt; </POSTER>
<POSTDATE> 2008-01-29T12:36:00 </POSTDATE>
Charles, your ego dwarfs even mine sometimes.

Apparently you have not, in fact, worked on major league enterprise systems.
Your argument is phallic, and fallacious. But no fellatio for you.

There are plenty of real life systems out there with near-zero redundancy
with hundreds, thousands, of tables. Try getting a real job in a real
industry in today's world, your perspective appears uninformed.

On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Yah, 200 tables is way too large.

&gt; I bet there's plenty of redundancy in those tables.

&gt; Major projects can be taken on focusing on at most 14 critical items. The
&gt; database itself nor the tables is as important as the real business
&gt; processes revolving around the data.

&gt; Let me see the 200+ tables you're working at the Enterprise level and I'll
&gt; show you some Business Process Reengineering we could do to make it more
&gt; efficient. I can save that company major bucks.

&gt; This conversation doesn't even matter because the only thing that's
&gt; important is to satisfy the clients business needs. An argument about the
&gt; number of tables is pointless. Let's just say N tables. and R relationships.

&gt; I was a former engineering student so let's think of the the N and R as
&gt; the constants of integration. They don't really matter in the grander scheme
&gt; of things.

&gt; On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

&gt; &gt; Way too complicated? Charles, feel free to be offended: have you ever
&gt; &gt; worked on anything at the enterprise level? Financial? Insurance? Science?
&gt; &gt; This is a tiny database.

&gt; &gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; &gt; 200 tables and 214 relationships... sounds way too complicated. You
&gt; &gt; &gt; could probably reduce that. Don't try to support every crazy feature
&gt; &gt; &gt; requested.

&gt; &gt; http://cs.nyu.edu/web/People/alumni.html

&gt; &gt; 1-800-GOOG411 - Google's free 411 service
">

--
--Andy Badera
http://andrew.badera.us/
and ... @badera.us
(518) 641-1280
Google me: http://www.google.com/search?q=andrew+badera
</POST>
<POST>
<POSTER> &quot;Andrew Badera&quot; &lt;and...@badera.us&gt; </POSTER>
<POSTDATE> 2008-01-29T12:44:00 </POSTDATE>
Looking at your resume, Charles, I am far from impressed. Nothing on there
indicates in the LEAST that you have any enterprise experience. At best,
there's one bank you apparently did a project for in 1997.

http://adoboprime.com/links/resume_charleslopez_071211.pdf

Please stop commenting on things regarding which you have no apparent
experience or insight. It devalues the forum.

On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Charles, your ego dwarfs even mine sometimes.

&gt; Apparently you have not, in fact, worked on major league enterprise
&gt; systems. Your argument is phallic, and fallacious. But no fellatio for you.

&gt; There are plenty of real life systems out there with near-zero redundancy
&gt; with hundreds, thousands, of tables. Try getting a real job in a real
&gt; industry in today's world, your perspective appears uninformed.

&gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; Yah, 200 tables is way too large.

&gt; &gt; I bet there's plenty of redundancy in those tables.

&gt; &gt; Major projects can be taken on focusing on at most 14 critical items.
&gt; &gt; The database itself nor the tables is as important as the real business
&gt; &gt; processes revolving around the data.

&gt; &gt; Let me see the 200+ tables you're working at the Enterprise level and
&gt; &gt; I'll show you some Business Process Reengineering we could do to make it
&gt; &gt; more efficient. I can save that company major bucks.

&gt; &gt; This conversation doesn't even matter because the only thing that's
&gt; &gt; important is to satisfy the clients business needs. An argument about the
&gt; &gt; number of tables is pointless. Let's just say N tables. and R relationships.

&gt; &gt; I was a former engineering student so let's think of the the N and R as
&gt; &gt; the constants of integration. They don't really matter in the grander scheme
&gt; &gt; of things.

&gt; &gt; On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

&gt; &gt; &gt; Way too complicated? Charles, feel free to be offended: have you ever
&gt; &gt; &gt; worked on anything at the enterprise level? Financial? Insurance? Science?
&gt; &gt; &gt; This is a tiny database.

&gt; &gt; &gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; 200 tables and 214 relationships... sounds way too complicated. You
&gt; &gt; &gt; &gt; could probably reduce that. Don't try to support every crazy feature
&gt; &gt; &gt; &gt; requested.

&gt; &gt; &gt; http://cs.nyu.edu/web/People/alumni.html

&gt; &gt; &gt; 1-800-GOOG411 - Google's free 411 service

&gt; --
&gt; --Andy Badera
&gt; http://andrew.badera.us/
&gt; and ... @badera.us
&gt; (518) 641-1280
&gt; Google me: http://www.google.com/search?q=andrew+badera
">

--
--Andy Badera
http://andrew.badera.us/
and ... @badera.us
(518) 641-1280
Google me: http://www.google.com/search?q=andrew+badera
</POST>
<POST>
<POSTER> &quot;Charles A. Lopez&quot; &lt;charlesalo...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-29T12:50:00 </POSTDATE>
Hey Andy,

Are you having a bad day?

This conversation is not very fruitful and doesn't benefit anyone.

It is possible that we are both correct. Isn't it? Or are you always right?

On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Charles, your ego dwarfs even mine sometimes.

&gt; Apparently you have not, in fact, worked on major league enterprise
&gt; systems. Your argument is phallic, and fallacious. But no fellatio for you.

&gt; There are plenty of real life systems out there with near-zero redundancy
&gt; with hundreds, thousands, of tables. Try getting a real job in a real
&gt; industry in today's world, your perspective appears uninformed.

&gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; Yah, 200 tables is way too large.

&gt; &gt; I bet there's plenty of redundancy in those tables.

&gt; &gt; Major projects can be taken on focusing on at most 14 critical items.
&gt; &gt; The database itself nor the tables is as important as the real business
&gt; &gt; processes revolving around the data.

&gt; &gt; Let me see the 200+ tables you're working at the Enterprise level and
&gt; &gt; I'll show you some Business Process Reengineering we could do to make it
&gt; &gt; more efficient. I can save that company major bucks.

&gt; &gt; This conversation doesn't even matter because the only thing that's
&gt; &gt; important is to satisfy the clients business needs. An argument about the
&gt; &gt; number of tables is pointless. Let's just say N tables. and R relationships.

&gt; &gt; I was a former engineering student so let's think of the the N and R as
&gt; &gt; the constants of integration. They don't really matter in the grander scheme
&gt; &gt; of things.

&gt; &gt;  On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

&gt; &gt; &gt; Way too complicated? Charles, feel free to be offended: have you ever
&gt; &gt; &gt; worked on anything at the enterprise level? Financial? Insurance? Science?
&gt; &gt; &gt; This is a tiny database.

&gt; &gt; &gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; 200 tables and 214 relationships... sounds way too complicated. You
&gt; &gt; &gt; &gt; could probably reduce that. Don't try to support every crazy feature
&gt; &gt; &gt; &gt; requested.

&gt; &gt; &gt; http://cs.nyu.edu/web/People/alumni.html

&gt; &gt; &gt; 1-800-GOOG411 - Google's free 411 service

&gt; --
&gt; --Andy Badera
&gt; http://andrew.badera.us/
&gt; and ... @badera.us
&gt; (518) 641-1280
&gt; Google me: http://www.google.com/search?q=andrew+badera
">

--
Charles A. Lopez
charlesalo ... @gmail.com

Start your career with Charles A. Lopez TECHNOLOGY - Send your resume to
charlesalo ... @gmail.com

http://cs.nyu.edu/web/People/alumni.html

1-800-GOOG411 - Google's free 411 service
</POST>
<POST>
<POSTER> &quot;Andrew Badera&quot; &lt;and...@badera.us&gt; </POSTER>
<POSTDATE> 2008-01-29T12:54:00 </POSTDATE>
Bad day? Not in the least. But I'm a bit tired of hearing someone speak from
his various orifices as though he has all the answers, when in fact it has
become clear just which orifice he's speaking from primarily.

Just because a database is big, or huge, doesn't mean it's redundant. Just
because it's redundant, doesn't mean there's room for optimization.
Denormalization can be a performance optimization, as we all know. And in
today's world of HIPAA, SOX and all that rigmarole, you are FORCED to
denormalize to preserve state-at-time-of-transaction in finance, insurance,
etc. etc. etc.

You made an assumption, a bad one, while trying, yet again, to sell your
services, and I've called you out on it. Bad day? Not at all, just tried of
your spam in my inbox.

On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hey Andy,

&gt; Are you having a bad day?

&gt; This conversation is not very fruitful and doesn't benefit anyone.

&gt; It is possible that we are both correct. Isn't it? Or are you always
&gt; right?

&gt; On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

&gt; &gt; Charles, your ego dwarfs even mine sometimes.

&gt; &gt; Apparently you have not, in fact, worked on major league enterprise
&gt; &gt; systems. Your argument is phallic, and fallacious. But no fellatio for you.

&gt; &gt; There are plenty of real life systems out there with near-zero
&gt; &gt; redundancy with hundreds, thousands, of tables. Try getting a real job in a
&gt; &gt; real industry in today's world, your perspective appears uninformed.

&gt; &gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; &gt; Yah, 200 tables is way too large.

&gt; &gt; &gt; I bet there's plenty of redundancy in those tables.

&gt; &gt; &gt; Major projects can be taken on focusing on at most 14 critical items.
&gt; &gt; &gt; The database itself nor the tables is as important as the real business
&gt; &gt; &gt; processes revolving around the data.

&gt; &gt; &gt; Let me see the 200+ tables you're working at the Enterprise level and
&gt; &gt; &gt; I'll show you some Business Process Reengineering we could do to make it
&gt; &gt; &gt; more efficient. I can save that company major bucks.

&gt; &gt; &gt; This conversation doesn't even matter because the only thing that's
&gt; &gt; &gt; important is to satisfy the clients business needs. An argument about the
&gt; &gt; &gt; number of tables is pointless. Let's just say N tables. and R relationships.

&gt; &gt; &gt; I was a former engineering student so let's think of the the N and R
&gt; &gt; &gt; as the constants of integration. They don't really matter in the grander
&gt; &gt; &gt; scheme of things.

&gt; &gt; &gt;  On 1/29/08, Andrew Badera &lt;and ... @badera.us&gt; wrote:

&gt; &gt; &gt; &gt; Way too complicated? Charles, feel free to be offended: have you
&gt; &gt; &gt; &gt; ever worked on anything at the enterprise level? Financial? Insurance?
&gt; &gt; &gt; &gt; Science? This is a tiny database.

&gt; &gt; &gt; &gt; On 1/29/08, Charles A. Lopez &lt;charlesalo ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; &gt; 200 tables and 214 relationships... sounds way too complicated.
&gt; &gt; &gt; &gt; &gt; You could probably reduce that. Don't try to support every crazy feature
&gt; &gt; &gt; &gt; &gt; requested.

&gt; &gt; &gt; &gt; http://cs.nyu.edu/web/People/alumni.html

&gt; &gt; &gt; &gt; 1-800-GOOG411 - Google's free 411 service

&gt; &gt; --
&gt; &gt; --Andy Badera
&gt; &gt; http://andrew.badera.us/
&gt; &gt; and ... @badera.us
&gt; &gt; (518) 641-1280
&gt; &gt; Google me: http://www.google.com/search?q=andrew+badera

&gt; &gt; http://cs.nyu.edu/web/People/alumni.html

&gt; &gt; 1-800-GOOG411 - Google's free 411 service
">

--
--Andy Badera
http://andrew.badera.us/
and ... @badera.us
(518) 641-1280
Google me: http://www.google.com/search?q=andrew+badera
</POST>
<POST>
<POSTER> &quot;Smith, Peter&quot; &lt;PSmit...@analysts.com&gt; </POSTER>
<POSTDATE> 2008-01-29T13:00:00 </POSTDATE>
________________________________

Andrew Badera comments:

<QUOTE PREVIOUSPOST="
&gt;And in today's world of HIPAA, SOX and all that rigmarole, you are
">

FORCED to denormalize to preserve state-at-time-of-&gt;transaction in
finance, insurance, etc. etc. etc.

Heck, not even compliance problems. Much as I love normalization, 'state
at time of transaction' is rather important, especially if you're not
thinking about it. First app I ever wrote for business had all kinds of
problems like this, as the lawyers went back into the cute little
database that maintained billing timesheets, and wanted their client
lists to print out from 3 months ago. And of course, that state didn't
quite exist anywhere.

Yeah, that's MORE than just a normalization issue (it also had to do
with not having good change history or delete constraints) but it
certainly was generated by a desire to normalize everything and reduce
duplication of data.

_____
Peter Smith
</POST>
<POST>
<POSTER> Michael O &lt;cleveridea....@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-29T14:24:00 </POSTDATE>
My background is data.  A 200 table schema can absolutely positively
be a normalized schema (even for a department-sized application).  In
fact, normalization techniques often mean *more* tables than a schema
without normalization.

@Charles L - 14?  Where does such a specific number come from?  Is
that how you approach every solution?  That number appears very
arbitrary and problematic in prejudicing your ability to analyze
systems.

@Andrew B - You know I'm a big fan of your knuckle-glove style, but
you turn every one off with your sexual obscenities.

@Peter S - You'd love the flashback technologies in Oracle, lets you
query data (with normal SQL) with a point in time clause - which
eliminates lots of clunky database structure/storage and application
code to get at the same.  You can query recent points in time on ALL
your data (by traversing the logs) and any point in time on data if
you establish flashback archiving for those structures (which
implicitly consumes disk of course).

Michael O
http://blog.crisatunity.com
</POST>
<POST>
<POSTER> &quot;Andrew Badera&quot; &lt;and...@badera.us&gt; </POSTER>
<POSTDATE> 2008-01-29T14:26:00 </POSTDATE>
Michael:

There's nothing sexual in what I wrote, and if you find something sexual
there, it is merely the product of your own mind, and possibly indicative of
its proximity to a gutter.

On 1/29/08, Michael O &lt;cleveridea. ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; @Andrew B - You know I'm a big fan of your knuckle-glove style, but
&gt; you turn every one off with your sexual obscenities.
">
</POST>
<POST>
<POSTER> Michael O &lt;cleveridea....@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-29T14:30:00 </POSTDATE>
@anjee

I completely understand your need to take a scheduled approach.  IMHO,
the first step for you is to get the data itself out of Access.
There's no reason you can go ahead and move your schema and its data
to SQL Server Express.  Then replace the data in your Access
application with links to those tables.  Your Access forms and queries
can work with those linked tables the same as it could if the tables
were physically in Access.

Then go about the work of building a non-Access interface (WebForms,
WinForms, etc.) to the SQL Server schema.  There's no compelling
reason why you can't have multiple interfaces simultaneously acting
your single schema.  This makes the migration path feasible.

Michael O
http://blog.crisatunity.com

On Jan 28, 8:47 pm, anjee &lt;anjee ... @cogeco.ca&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Thank you for your posts.

&gt; The backend database is very large, close to 200 tables and 214
&gt; relationships.  It's at it's limits supporting up to a 8 users
&gt; concurently.  We would love to move away from Access and into SQL
&gt; Server, however due to financial concerns we will be rewriting the
&gt; application in phases.  Which means in order for a company to benefit
&gt; from the entire application they will need to run both the old app and
&gt; the new app.  The only way we feel we can accomplish this is to
&gt; continue using the existing backend until perhaps we phase out the
&gt; existing application altogether.

&gt; The current front end application is a bloated Access mde application
&gt; (56MB) that was originally written in Access 2.0 and has been upgraded
&gt; with each new version release.  We are turning our focus to the web
&gt; now and were thinking that Visual Studio would be the tool to use.  We
&gt; are just a little skeptical of jumping on board given our restriction
&gt; of the Access backend.
">

- Show quoted text -
</POST>
</TEXT>
</BODY>
</DOC>
