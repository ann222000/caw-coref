<DOC>
<DOCID> eng-NG-31-128538-8374572 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-08-04T07:25:00 </DATETIME>
<BODY>
<HEADLINE>
are generic relations production ready?
</HEADLINE>
<TEXT>
<POST>
<POSTER> A Mele &lt;antonio.m...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-04T07:25:00 </POSTDATE>
Hi,

The generic relations status showed in the wiki is &quot;Code move is done
(Malcolm), admin support (Jacob) not done. Needs newforms-admin merge
first.&quot;
Does that mean generic relations are production ready although they
are not yet implenteed in the admin?

Regards,
A Mele
</POST>
<POST>
<POSTER> &quot;Jacob Kaplan-Moss&quot; &lt;jacob.kaplanm...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-04T10:34:00 </POSTDATE>
On 8/4/07, A Mele &lt;antonio.m ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Does that mean generic relations are production ready although they
&gt; are not yet implenteed in the admin?
">

Exactly - the code's fine; there's just no admin support yet.

Jacob
</POST>
<POST>
<POSTER> A Mele &lt;antonio.m...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-04T10:45:00 </POSTDATE>
That's fine! Thank you Jacob!

On 4 ago, 16:34, &quot;Jacob Kaplan-Moss&quot; &lt;jacob.kaplanm ... @gmail.com&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; On 8/4/07, A Mele &lt;antonio.m ... @gmail.com&gt; wrote:

&gt; &gt; Does that mean generic relations are production ready although they
&gt; &gt; are not yet implenteed in the admin?

&gt; Exactly - the code's fine; there's just no admin support yet.

&gt; Jacob
">
</POST>
<POST>
<POSTER> &quot;James Bennett&quot; &lt;ubernost...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-04T18:21:00 </POSTDATE>
On 8/4/07, Jacob Kaplan-Moss &lt;jacob.kaplanm ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 8/4/07, A Mele &lt;antonio.m ... @gmail.com&gt; wrote:
&gt; &gt; Does that mean generic relations are production ready although they
&gt; &gt; are not yet implenteed in the admin?

&gt; Exactly - the code's fine; there's just no admin support yet.
">

Though if you have a look at, say, django-tagging, you'll see that
it's not hard to provide your own admin admin interface for a generic
relation (django-tagging presents it as a text input for typing in a
set of tags).

--
&quot;Bureaucrat Conrad, you are technically correct -- the best kind of correct.&quot;
</POST>
<POST>
<POSTER> Alex Nikolaenkov &lt;nikolaen...@actimind.com&gt; </POSTER>
<POSTDATE> 2007-08-05T09:02:00 </POSTDATE>
Hello guys,
Django is positioned as a tool for perfectionists. So there is a
few questions which are very valuable for guys making the best web-sites:

* Case-sensitive urls.
Take a look:
http://www.coastalbeat.com/news/2007/jul/30/simpsons/
http://www.coastalbeat.com/news/2007/jul/30/Simpsons/
The urls are pretty same. But the second one causes 404 Response.
While typing the second url the user tries to access typing its
address and types &quot;Simpsons&quot; instead of &quot;simpsons&quot;. In terms of
nix-like systems this is a major difference.. But nix systems are
designed for professionals, not for my 50 year old aunt browsing
the Internet. She knows nothing about different interpretation of
letters in the computer world. When I was watching google video
about django (by Jacob) I though: Hey, some cool guys finally
understood that crappy urls are bad. Let's do some more work and
make urls usable and accessible. Furthermore if user sees 404 error
instead of page one was looking for, that's not his loss, that is a
loss of the site. What do you think?

** I've posted corresponding ticket.
http://code.djangoproject.com/ticket/5090
Now it is closed as &quot;won't fix&quot;. At least the resolution should be
changed to &quot;By Design&quot; if you guys don't like sites built on django
being convenient.

Here is an example of case-insensitive urls. They rock:
http://www.askeri.ru/PUBLISH/
http://www.askeri.ru/publish/

* What do you think about including Web Typography support as a
built-in django feature?

--
Best regards,
Alex                          mailto:nikolaen ... @actimind.com
</POST>
<POST>
<POSTER> &quot;James Bennett&quot; &lt;ubernost...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-05T09:15:00 </POSTDATE>
On 8/5/07, Alex Nikolaenkov &lt;nikolaen ... @actimind.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt;    The urls are pretty same. But the second one causes 404 Response.
&gt;    While typing the second url the user tries to access typing its
&gt;    address and types &quot;Simpsons&quot; instead of &quot;simpsons&quot;. In terms of
&gt;    nix-like systems this is a major difference.. But nix systems are
&gt;    designed for professionals, not for my 50 year old aunt browsing
&gt;    the Internet. She knows nothing about different interpretation of
&gt;    letters in the computer world.
">

Yet there's a very good counter-argument to this: the same people who
don't have any notion of case-sensitivity also don't really have any
notion of trying to type out a full URL in hopes of getting the page
they want; instead, they click links or use a search engine. Many even
type domain names into search engines because they don't understand
how the browser address bar works, or even that they have such a thing
(for much the same reason, security indicators which appear in the
browser's address bar have long been known to be worthless).

--
&quot;Bureaucrat Conrad, you are technically correct -- the best kind of correct.&quot;
</POST>
<POST>
<POSTER> Alex Nikolaenkov &lt;nikolaen...@actimind.com&gt; </POSTER>
<POSTDATE> 2007-08-05T09:31:00 </POSTDATE>
You wrote 5 ??????? 2007 ?., 17:15:11:

<QUOTE PREVIOUSPOST="
&gt; On 8/5/07, Alex Nikolaenkov &lt;nikolaen ... @actimind.com&gt; wrote:
&gt;&gt;    The urls are pretty same. But the second one causes 404 Response.
&gt;&gt;    While typing the second url the user tries to access typing its
&gt;&gt;    address and types &quot;Simpsons&quot; instead of &quot;simpsons&quot;. In terms of
&gt;&gt;    nix-like systems this is a major difference.. But nix systems are
&gt;&gt;    designed for professionals, not for my 50 year old aunt browsing
&gt;&gt;    the Internet. She knows nothing about different interpretation of
&gt;&gt;    letters in the computer world.
&gt; Yet there's a very good counter-argument to this: the same people who
&gt; don't have any notion of case-sensitivity also don't really have any
&gt; notion of trying to type out a full URL in hopes of getting the page
&gt; they want; instead, they click links or use a search engine. Many even
&gt; type domain names into search engines because they don't understand
&gt; how the browser address bar works, or even that they have such a thing
&gt; (for much the same reason, security indicators which appear in the
&gt; browser's address bar have long been known to be worthless).
">

Some of them do not and some do. Now a lot of people work with computer
but only a few are programmers and understand THE BIG DIFFERENCE. The
comprehensive urls are very good. You can remember them. It's very
easy and cool.

Imagine that your site hosting photos has got the following urls
belonging to different users:
http://mysite.com/John/
http://mysite.com/john .

One got to the John's homepage and liked
his photos very much. But suddenly his browser crashes and the only
thing he remembers that he was at the &quot;john's page at mysite.com&quot;. So
he navigates to the location bar types &quot; http://mysite.com/john &quot; and
is redirected to some porno photos of his beloved cat. Confusing, isn't it?
The case of the link is not a big deal for the end user. Do you feel
the difference?

--
Best regards,
Alex                          mailto:nikolaen ... @actimind.com
</POST>
<POST>
<POSTER> Mikhail Gusarov &lt;dotted...@dottedmag.net&gt; </POSTER>
<POSTDATE> 2007-08-05T09:47:00 </POSTDATE>
Twas brillig at 17:31:05 05.08.2007 UTC+04 when Alex Nikolaenkov did gyre and gimble:

AN&gt; Some of them do not and some do. Now a lot of people work with computer but
AN&gt; only a few are programmers and understand THE BIG DIFFERENCE. The
AN&gt; comprehensive urls are very good. You can remember them.

AN&gt; It's very easy and cool.

Please create a middleware which downcases all the URLs coming to the Django
requests and post it somewhere. It is very easy and cool.

PS: When you realize that REST and HTTP is not only for browsers and not only
for humans, you understand why such a conversion is plainly unacceptable for a
generic-purpose framework.

--
JID: dotted ... @jabber.dottedmag.net
</POST>
<POST>
<POSTER> &quot;James Bennett&quot; &lt;ubernost...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-05T09:50:00 </POSTDATE>
On 8/5/07, Alex Nikolaenkov &lt;nikolaen ... @actimind.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Imagine that your site hosting photos has got the following urls
&gt; belonging to different users:
&gt; http://mysite.com/John/
&gt; http://mysite.com/john .
">

Except those aren't different URLs. And now that I'm slightly more
awake I'm wondering why we're even having this debate:

http://www.b-list.org/weblog/categories/django
http://www.b-list.org/weblog/categories/Django

Django handles both just fine, returns the same page for both.

http://www.b-list.org/weblog/2007/06/25/hacking-comments-without-hack...
http://www.b-list.org/weblog/2007/06/25/HACKING-COMMENTS-WITHOUT-HACK...

Again, works just fine. Which says that case-sensitivity is not
something Django is imposing.

And again, I'll reiterate that the type of user who doesn't understand
case-sensitivity is the type of user who -- verified by repeated
real-world usability testing -- finds MySpace by going to Google and
typing &quot;myspace.com&quot; into the search box. An astonishingly high
percentage of web

<QUOTE PREVIOUSPOST="
&gt; One got to the John's homepage and liked
&gt; his photos very much. But suddenly his browser crashes and the only
&gt; thing he remembers that he was at the &quot;john's page at mysite.com&quot;. So
&gt; he navigates to the location bar types &quot; http://mysite.com/john &quot; and
&gt; is redirected to some porno photos of his beloved cat. Confusing, isn't it?
&gt; The case of the link is not a big deal for the end user. Do you feel
&gt; the difference?

&gt; --
&gt; Best regards,
&gt;  Alex                          mailto:nikolaen ... @actimind.com
">

--
&quot;Bureaucrat Conrad, you are technically correct -- the best kind of correct.&quot;
</POST>
<POST>
<POSTER> &quot;James Bennett&quot; &lt;ubernost...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-05T09:56:00 </POSTDATE>
Finger slipped on the &quot;send&quot; shortcut, continuing where I left off...

On 8/5/07, James Bennett &lt;ubernost ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; And again, I'll reiterate that the type of user who doesn't understand
&gt; case-sensitivity is the type of user who -- verified by repeated
&gt; real-world usability testing -- finds MySpace by going to Google and
&gt; typing &quot;myspace.com&quot; into the search box. An astonishingly high
&gt; percentage of web
">

users are unaware of the existence of the address bar in any way,
shape or form. They're not the sort of people who type in the address
bar to try to guess the right URL, and are likely to have only a foggy
notion of the URL at all.

Which is why your approach is problematic; you're simultaneously
assuming familiarity and unfamiliarity with the Web on the part of
users, to the point where you're advocating that in one case they're
unable to figure out how a URL works but in another are able to do it
just fine. Which, unfortunately, isn't the case in the real world, and
trying to forcibly normalize URLs to a particular case won't work.
And, incidentally, the HTTP spec states that while the host and scheme
of an HTTP URL should be compared case-insensitively, it recommends
(with an upper-case RFC &quot;SHOULD&quot;) that the rest of it be compared
case-sensitively.

--
&quot;Bureaucrat Conrad, you are technically correct -- the best kind of correct.&quot;
</POST>
<POST>
<POSTER> David Danier &lt;goliath.mailingl...@gmx.de&gt; </POSTER>
<POSTDATE> 2007-08-05T10:09:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; And again, I'll reiterate that the type of user who doesn't understand
&gt; case-sensitivity is the type of user who -- verified by repeated
&gt; real-world usability testing -- finds MySpace by going to Google and
&gt; typing &quot;myspace.com&quot; into the search box. An astonishingly high
&gt; percentage of web
">

Full ACK

In addition people who try to type URLs themselves often use what they
learned from Wikipedia: &quot;Type it in your style&quot;. Which means the
following URLs are the same, too:
* xx.wikipedia.org/wiki/Some Thing
* xx.wikipedia.org/wiki/Some_Thing
* xx.wikipedia.org/wiki/some thing

Or to sum this up: Most of the time there is more needed to fit all the
needs professional users want (slash appended or not,
whitespace/dash/underscore are the same, URL is case-insensitive,
special chars are translated on the fly (e.g. umlauts, ä -&gt; ae)). So
this definitely needs to be put into your own middleware or view (which
does the redirect).

Greetings, David Danier
</POST>
<POST>
<POSTER> &quot;Brett Hoerner&quot; &lt;bretthoer...@bretthoerner.com&gt; </POSTER>
<POSTDATE> 2007-08-05T10:17:00 </POSTDATE>
On 8/5/07, James Bennett &lt;ubernost ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Django handles both just fine, returns the same page for both.
">

Not on our live site.  And I just made a fresh django-trunk project to
test it, didn't work there either.  Although aren't resolvers just
normal Python REs, so you could possibly have set this for yourself
somehow?

Regardless, I agree with James in that 'normal users' don't type URLs,
and I like having objects available from one exact URL.  I'm sure
Google is smart, but who knows what search engines do when they see
the same things available from different-cased URLs.  Sort of like the
append_slash problem, right?  We don't want to confuse the computer in
this case.

Brett
</POST>
<POST>
<POSTER> &quot;James Bennett&quot; &lt;ubernost...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-05T10:36:00 </POSTDATE>
On 8/5/07, Brett Hoerner &lt;bretthoer ... @bretthoerner.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Not on our live site.  And I just made a fresh django-trunk project to
&gt; test it, didn't work there either.  Although aren't resolvers just
&gt; normal Python REs, so you could possibly have set this for yourself
&gt; somehow?
">

I'm almost certain it has to do with a combination of the regular
expression patterns for the URLs (minor contribution) and the database
collation in use (major contribution). Which, again, means that it's
not something Django is necessarily imposing on applications, but is
instead something that's in the hands of a user of the framework.

--
&quot;Bureaucrat Conrad, you are technically correct -- the best kind of correct.&quot;
</POST>
<POST>
<POSTER> &quot;Jacob Kaplan-Moss&quot; &lt;jacob.kaplanm...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-05T10:48:00 </POSTDATE>
On 8/5/07, James Bennett &lt;ubernost ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I'm almost certain it has to do with a combination of the regular
&gt; expression patterns for the URLs (minor contribution) and the database
&gt; collation in use (major contribution). Which, again, means that it's
&gt; not something Django is necessarily imposing on applications, but is
&gt; instead something that's in the hands of a user of the framework.
">

To expand a bit further: if you want to support case-insensitive URLs,
you'll need to do three things:

1. Use case-insensitive urlpatterns. That is, use ``[A-Za-z]`` instead
of ``[a-z]`` (or, better yet, use ``\w``).

2. Use case-insensitive lookups: use ``__icontains`` or ``__iexact``
instead of ``__contains`` or ``__exact``.

3. Normalize when creating slugs or other attributes to be used in
URLs (this prevents collisions between &quot;Foo&quot; and &quot;foo&quot; at the database
level). I usually normalize to lowercase because I don't like
SHOUTING, but it doesn't really matter.

Jacob
</POST>
</TEXT>
</BODY>
</DOC>
