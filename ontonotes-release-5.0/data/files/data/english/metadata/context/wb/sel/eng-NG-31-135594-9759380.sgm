<DOC>
<DOCID> eng-NG-31-135594-9759380 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-11-02T12:18:00 </DATETIME>
<BODY>
<HEADLINE>
Font size
</HEADLINE>
<TEXT>
<POST>
<POSTER> JWS &lt;j...@my.home&gt; </POSTER>
<POSTDATE> 2007-11-02T12:18:00 </POSTDATE>
I just started learning Java, and as a result made my first
applet, which can be seen at http://www.jw-stumpel.nl/bounce.html .
Never mind the rest of the page; please look at the applet at the
bottom of the page. There is also a link to the source code. The
applet uses only what I believe to be &quot;basic&quot; Java, awt (no
Swing), basically because, well, I haven't studied that far yet.

I tried it only with the few computers and browsers that I have
access to, and it seemed to be alright. But some then on-line
viewers (I think mostly Mac users) complained that the font is too
big, so some of the labels near the buttons are not shown
completely, being crowded out by neighbouring buttons.

I do not use a layout manager; all buttons etc. get their
positioning from &quot;setBounds&quot;, which specifies their location in
pixels.

The applet does not specify anything related to fonts, so I
suppose it uses some default. Is it possible to set this default
(in pixel size) such that it works on all systems?

Thanks in advance, Jan
</POST>
<POST>
<POSTER> Hunter Gratzner &lt;a24...@googlemail.com&gt; </POSTER>
<POSTDATE> 2007-11-02T12:51:00 </POSTDATE>
On Nov 2, 5:18 pm, JWS &lt;j ... @my.home&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I do not use a layout manager;
">

Change that.
</POST>
<POST>
<POSTER> Knute Johnson &lt;nos...@rabbitbrush.frazmtn.com&gt; </POSTER>
<POSTDATE> 2007-11-02T14:19:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
JWS wrote:
&gt; I just started learning Java, and as a result made my first
&gt; applet, which can be seen at http://www.jw-stumpel.nl/bounce.html .
&gt; Never mind the rest of the page; please look at the applet at the
&gt; bottom of the page. There is also a link to the source code. The
&gt; applet uses only what I believe to be &quot;basic&quot; Java, awt (no
&gt; Swing), basically because, well, I haven't studied that far yet.

&gt; I tried it only with the few computers and browsers that I have
&gt; access to, and it seemed to be alright. But some then on-line
&gt; viewers (I think mostly Mac users) complained that the font is too
&gt; big, so some of the labels near the buttons are not shown
&gt; completely, being crowded out by neighbouring buttons.

&gt; I do not use a layout manager; all buttons etc. get their
&gt; positioning from &quot;setBounds&quot;, which specifies their location in
&gt; pixels.

&gt; The applet does not specify anything related to fonts, so I
&gt; suppose it uses some default. Is it possible to set this default
&gt; (in pixel size) such that it works on all systems?

&gt; Thanks in advance, Jan
">

Your applet is very cool.  I found no problems with font size or layout
issues.  As you have discovered however they do show up on some
platforms.  Layout managers are fairly easy to use but you would have to
do some redesign of your Applet.  Commonly, graphics are drawn onto
Panels or Canvases.  These components can then be added to a top level
container such as an Applet or Frame.

I did find one interesting thing in your code that is often seen in
folks transitioning from C/C++.

C[0] = (M[0].x &lt; 0) ? true : false;

&lt; returns a boolean so your code would be the equivalent of:

if (M[0].x &lt; 0 == true)
C[0] = true;
else
C[0] = false;

C[0] = M[0].x &lt; 0;

will suffice and to a Java program eminently more readable.

--

Knute Johnson
email s/nospam/knute/
</POST>
<POST>
<POSTER> JWS &lt;j...@my.home&gt; </POSTER>
<POSTDATE> 2007-11-02T16:03:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Knute Johnson wrote:
&gt; Layout managers are fairly easy to use but you would have to
&gt; do some redesign of your Applet.  Commonly, graphics are drawn onto
&gt; Panels or Canvases.  These components can then be added to a top level
&gt; container such as an Applet or Frame.
">

Thanks for your remarks. Now I'll study layout managers, panels,
and canvases.

<QUOTE PREVIOUSPOST="
&gt; I did find one interesting thing in your code that is often seen in
&gt; folks transitioning from C/C++.
&gt; C[0] = (M[0].x &lt; 0) ? true : false;
&gt; &lt; returns a boolean so your code would be the equivalent of:
&gt; if (M[0].x &lt; 0 == true)
&gt;     C[0] = true;
&gt; else
&gt;     C[0] = false;

&gt; C[0] = M[0].x &lt; 0;

&gt; will suffice and to a Java program eminently more readable.
">

Right! C[0] = M[0].x &lt; 0; would work in C (the language) as well,
provided C (the array) is an array of integers. But of course in
Java, &quot;&lt;&quot; returns booleans directly, not integers, so this true:
false thing is not needed. Thanks for the tip.

Another question if I may: Java has automatic garbage collection.
In my applet I have this complicated class Mass_Spring_System
which is instantiated by

springs = new Mass_Spring_System (Nmasses, timestep);

If I want to change e.g. the number of masses, I now do

springs = null;
springs = new Mass_Spring_System (newNmasses, timestep);

It works, it is extremely simple, it has not produced problems so
far, but I am a little bit worried about it. Can the automatic
garbage collector really handle this? Mass_Spring_System contains
a lot of other things (like arrays of objects). To avoid memory
leaks, shouldn't I make them &quot;null&quot; separately through some kind
of &quot;destructor&quot; method in Mass_Spring_System?

Regards, Jan
</POST>
<POST>
<POSTER> &quot;Daniel Dyer&quot; &lt;&quot;You don&#39;t need it&quot;&gt; </POSTER>
<POSTDATE> 2007-11-02T16:21:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
On Fri, 02 Nov 2007 16:18:01 -0000, JWS &lt;j ... @my.home&gt; wrote:
&gt; I tried it only with the few computers and browsers that I have
&gt; access to, and it seemed to be alright. But some then on-line
&gt; viewers (I think mostly Mac users) complained that the font is too
&gt; big, so some of the labels near the buttons are not shown
&gt; completely, being crowded out by neighbouring buttons.
">

Here's what it looks like in Opera (and Safari) under OS X:

http://www.uncommons.org/collisions.png

AWT components (and Swing components using Apple's look-and-feel) tend to
be a bit bigger on OS X than on Windows.

<QUOTE PREVIOUSPOST="
&gt; I do not use a layout manager; all buttons etc. get their
&gt; positioning from &quot;setBounds&quot;, which specifies their location in
&gt; pixels.
">

That's the root of your problem.  LayoutManagers are the cross-platform
solution so that you don't have to know exactly how many pixels your
controls will require on a given platform.

Dan.

--
Daniel Dyer
https://watchmaker.dev.java.net - Evolutionary Computation for Java
</POST>
<POST>
<POSTER> JWS &lt;j...@my.home&gt; </POSTER>
<POSTDATE> 2007-11-02T17:00:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Daniel Dyer wrote:
&gt; Here's what it looks like in Opera (and Safari) under OS X:

&gt; http://www.uncommons.org/collisions.png
">

Thanks much for this useful feedback. I got another picture from a
Mac user which looks slightly different. It is now clear to me
that one cannot count on there being some &quot;default Java font&quot;.

<QUOTE PREVIOUSPOST="
&gt; AWT components (and Swing components using Apple's
&gt; look-and-feel) tend to be a bit bigger on OS X than on Windows.

&gt;&gt; I do not use a layout manager; all buttons etc. get their
&gt;&gt; positioning from &quot;setBounds&quot;, which specifies their location
&gt;&gt; in pixels.

&gt; That's the root of your problem.  LayoutManagers are the
&gt; cross-platform solution so that you don't have to know exactly
&gt; how many pixels your controls will require on a given platform.
">

Do you think I should use the &quot;flow&quot; layout manager? This could (I
presume) result in the present line of buttons ending up as 2
lines. However, it seems that in the HTML page serving up the
applet, I have to fix both the width and the height.

Oh well, anyway, I'll first study a bit and experiment. And (I
just thought) I can create more space by removing the &quot;speed&quot;
options from the applet. Almost all users would want to use the
&quot;fast&quot; speed anyway. The simpler, the better.

Regards, Jan
</POST>
<POST>
<POSTER> Lew &lt;l...@lewscanon.com&gt; </POSTER>
<POSTDATE> 2007-11-02T17:21:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
JWS wrote:
&gt; Another question if I may: Java has automatic garbage collection.
&gt; In my applet I have this complicated class Mass_Spring_System
&gt; which is instantiated by

&gt; springs = new Mass_Spring_System (Nmasses, timestep);
">

You should eschew underscores in class names, method names and non-constant
variable names.  Variables like &quot;Nmasses&quot; should begin with a lower-case
letter (unlike classes) and begin each subsequent compound word part with an
upper-case letter (&quot;camelCase&quot;), thus, &quot;nMasses&quot;.

<QUOTE PREVIOUSPOST="
&gt; If I want to change e.g. the number of masses, I now do

&gt; springs = null;
">

You don't need to set springs to a throwaway null value.

<QUOTE PREVIOUSPOST="
&gt; springs = new Mass_Spring_System (newNmasses, timestep);
">

This will suffice.

<QUOTE PREVIOUSPOST="
&gt; It works, it is extremely simple, it has not produced problems so
&gt; far, but I am a little bit worried about it. Can the automatic
&gt; garbage collector really handle this?
">

Yes.

<QUOTE PREVIOUSPOST="
&gt; Mass_Spring_System contains a lot of other things (like arrays of objects). To avoid memory
&gt; leaks, shouldn't I make them &quot;null&quot; separately through some kind
&gt; of &quot;destructor&quot; method in Mass_Spring_System?
">

No.

What you should do is make sure those elements are not separately reachable.
For example, if you have a class:

public class Foo
{
private Bar bar;
public void setBar( Bar b )
{
bar = b;
}
public Bar getBar ()
{
return bar;
}

<QUOTE PREVIOUSPOST="
}
">

and some other routine does:
Foo foo = new Foo();
foo.setBar( obtainABar() );
List&lt;Bar&gt; bars = new ArrayList&lt;Bar&gt;();
foos.add( foo.getBar() );

now the bars List contains a reference to the Bar.  While the Foo can be
cleaned up, the Bar cannot until that reference is gone.

Setting elements to null is usually useless; for one thing that won't get rid
of the other references.  For another, it falsely documents the algorithm.

Give up thinking of &quot;destructors&quot; in Java.  You may think of &quot;dispose()&quot; or
&quot;cleanup()&quot; operations if the object manages a resource such as a database
connection.

Java actually favors short-lived objects that are allocated and quickly abandoned.

Scour around the java.sun.com site for articles on garbage collection.  Also
IBM DeveloperWorks has a series of articles by Brian Goetz, some of which
address these matters.

--
Lew
</POST>
<POST>
<POSTER> Patricia Shanahan &lt;p...@acm.org&gt; </POSTER>
<POSTDATE> 2007-11-02T17:23:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Lew wrote:
&gt; JWS wrote:
&gt;&gt; Another question if I may: Java has automatic garbage collection.
&gt;&gt; In my applet I have this complicated class Mass_Spring_System
&gt;&gt; which is instantiated by

&gt;&gt; springs = new Mass_Spring_System (Nmasses, timestep);

&gt; You should eschew underscores in class names, method names and
&gt; non-constant variable names.
">

I know this is the convention, and I usually follow it, but why?

Many identifiers are multiple words. Doesn't Mass_Spring_System make it
easier to see where the words start than jamming them together as
MassSpringSystem?

Patricia
</POST>
<POST>
<POSTER> Knute Johnson &lt;nos...@rabbitbrush.frazmtn.com&gt; </POSTER>
<POSTDATE> 2007-11-02T18:45:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
JWS wrote:
&gt; Daniel Dyer wrote:

&gt;&gt; Here's what it looks like in Opera (and Safari) under OS X:

&gt;&gt; http://www.uncommons.org/collisions.png

&gt; Thanks much for this useful feedback. I got another picture from a
&gt; Mac user which looks slightly different. It is now clear to me
&gt; that one cannot count on there being some &quot;default Java font&quot;.

&gt;&gt; AWT components (and Swing components using Apple's
&gt;&gt; look-and-feel) tend to be a bit bigger on OS X than on Windows.

&gt;&gt;&gt; I do not use a layout manager; all buttons etc. get their
&gt;&gt;&gt; positioning from &quot;setBounds&quot;, which specifies their location
&gt;&gt;&gt; in pixels.
&gt;&gt; That's the root of your problem.  LayoutManagers are the
&gt;&gt; cross-platform solution so that you don't have to know exactly
&gt;&gt; how many pixels your controls will require on a given platform.

&gt; Do you think I should use the &quot;flow&quot; layout manager? This could (I
&gt; presume) result in the present line of buttons ending up as 2
&gt; lines. However, it seems that in the HTML page serving up the
&gt; applet, I have to fix both the width and the height.
">

The fixed size is one of the problems with Applets.  There are always
going to be trade offs there.

Flow layout will arrange all of the components with the same margins.
GridBagLayout is the most sophisticated but also is the most
complicated.  If you want some help with GBL just post again.

--

Knute Johnson
email s/nospam/knute/
</POST>
<POST>
<POSTER> Hunter Gratzner &lt;a24...@googlemail.com&gt; </POSTER>
<POSTDATE> 2007-11-02T19:17:00 </POSTDATE>
On Nov 2, 7:19 pm, Knute Johnson &lt;nos ... @rabbitbrush.frazmtn.com&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; JWS wrote:
&gt; I did find one interesting thing in your code that is often seen in
&gt; folks transitioning from C/C++.

&gt; C[0] = (M[0].x &lt; 0) ? true : false;
">

Such code is also superfluous in C/C++.
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-02T23:32:00 </POSTDATE>
On Fri, 02 Nov 2007 17:18:01 +0100, JWS &lt;j ... @my.home&gt; wrote, quoted or
indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt;I just started learning Java, and as a result made my first
&gt;applet, which can be seen at http://www.jw-stumpel.nl/bounce.html .
">

good lord. What a complicated Applet for a newbie!

You are drawing text with:

k.drawString (&quot;Nmasses:&quot;, 10, 100);

and

Checkbox speed1  = new Checkbox (&quot;slow&quot;, speedGroup, false);

You can select a font with
k.setFont( new Font( &quot;Dialog&quot;, Font.PLAIN, 12 );

or

Font cbfont = new Font( &quot;Dialog&quot;, Font.PLAIN, 12 );
speed1.setFont ( cbfont );

People will likely give you a rote reply that you should be using a
Layout.  You can't very well do that since you have an animation.  I
was intrigued by your approach.  Most people would tackle it using a
Canvas or JPanel and drawing the whole thing from scratch with
Graphics methods.  You probably don't even need an offscreen buffer.
Swing should do that for you.  For superspeed you could use a
VolatileImage.

--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-02T23:33:00 </POSTDATE>
On Fri, 02 Nov 2007 14:23:55 -0700, Patricia Shanahan &lt;p ... @acm.org&gt;
wrote, quoted or indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt;I know this is the convention, and I usually follow it, but why?
">

$ and _ are reserved for automatically generated names.  By avoiding
them, you ensure no conflicts.
--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-02T23:36:00 </POSTDATE>
On Fri, 02 Nov 2007 23:17:33 -0000, Hunter Gratzner
&lt;a24 ... @googlemail.com&gt; wrote, quoted or indirectly quoted someone who
said :

<QUOTE PREVIOUSPOST="
&gt;&gt; C[0] = (M[0].x &lt; 0) ? true : false;

&gt;Such code is also superfluous in C/C++.
">

simple write

c[0] = m[0].x &lt; 0;

See http://mindprod.com/jgloss/codingconventions.html

for how to name your variables, methods, classes etc.

When you ignore the conventions, you code is quite confusing.

I wish the compiler had enforced the conventions from day 1.  Perhaps
at least bad names could be &quot;deprecated&quot;.
--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-02T23:39:00 </POSTDATE>
On Fri, 02 Nov 2007 20:21:10 -0000, &quot;Daniel Dyer&quot; &lt;&quot;You don't need
it&quot;&gt; wrote, quoted or indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt; http://www.uncommons.org/collisions.png
">

Dear O.P.
You have mixed elements whose size you have no control over with
elements you have precisely sized.  This gets you in trouble. Layouts
help you out of this in the static case.

For your particular problem,  I think you best off to do all your
checkboxes with a layout and all your little dancing boxes with
Graphics.fillRect.  Make the window for the Applet with some padding
to handle cases like the Safari rendering.

See http://mindprod.com/jgloss/layout.html
--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> Patricia Shanahan &lt;p...@acm.org&gt; </POSTER>
<POSTDATE> 2007-11-02T23:57:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Roedy Green wrote:
&gt; On Fri, 02 Nov 2007 14:23:55 -0700, Patricia Shanahan &lt;p ... @acm.org&gt;
&gt; wrote, quoted or indirectly quoted someone who said :

&gt;&gt; I know this is the convention, and I usually follow it, but why?

&gt; $ and _ are reserved for automatically generated names.  By avoiding
&gt; them, you ensure no conflicts.
">

Where and how was &quot;_&quot; reserved?

&quot;$&quot; is, of course, reserved for mechanically generated identifiers by
the JLS:

&quot;The Java letters include uppercase and lowercase ASCII Latin letters
A-Z (\u0041-\u005a), and a-z (\u0061-\u007a), and, for historical
reasons, the ASCII underscore (_, or \u005f) and dollar sign ($, or
\u0024). The $ character should be used only in mechanically generated
source code or, rarely, to access preexisting names on legacy systems.&quot;

[ http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#3.8 ]

Patricia
</POST>
<POST>
<POSTER> Mark Space &lt;marksp...@sbc.global.net&gt; </POSTER>
<POSTDATE> 2007-11-02T23:57:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Knute Johnson wrote:
&gt;&gt; Do you think I should use the &quot;flow&quot; layout manager? This could (I
&gt;&gt; presume) result in the present line of buttons ending up as 2
&gt;&gt; lines. However, it seems that in the HTML page serving up the
&gt;&gt; applet, I have to fix both the width and the height.
">

One solution might be to determine the needed height and width
dynamically and have a server side script or Javascript on the client
side set it.

In the short term, just leave some extra space in the applet panel so
things can grow without spilling off the edge.

<QUOTE PREVIOUSPOST="
&gt; Flow layout will arrange all of the components with the same margins.
&gt; GridBagLayout is the most sophisticated but also is the most
&gt; complicated.  If you want some help with GBL just post again.
">

I'd get NetBeans and use the GUI tool to just lay out a JPanel, myself.
</POST>
<POST>
<POSTER> Lew &lt;l...@lewscanon.com&gt; </POSTER>
<POSTDATE> 2007-11-03T00:08:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Patricia Shanahan wrote:
&gt; Where and how was &quot;_&quot; reserved?

&gt; &quot;The Java letters include uppercase and lowercase ASCII Latin letters
&gt; A-Z (\u0041-\u005a), and a-z (\u0061-\u007a), and, for historical
&gt; reasons, the ASCII underscore (_, or \u005f) and dollar sign ($, or
&gt; \u0024). The $ character should be used only in mechanically generated
&gt; source code or, rarely, to access preexisting names on legacy systems.&quot;

&gt; [ http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#3.8 ]
">

It is clear that _ is not reserved /per se/, but that phrase &quot;for historical
reasons&quot; sure seems to indicate disapproval of the underscore character for
common use.

Sun promulgates these conventions to simplify inter-human conversation.  I
don't fully agree with all their suggestions (in particular, I disagree with
putting the opening brace on the same line as its control structure), but for
the most part I find that they regularize and empower the conversation.

To paraphrase a fundamentalist bumper sticker, &quot;The Code Convention document
says it, Sun wrote it, and I follow it (mostly).&quot;

Microsoft favors camel case as well for their C# conventions, but they
promulgate a different version of it.  I guess the pundits of both camps feel
that underscoreless identifiers are superior.

Are they right?  Not in any objective manner that I can detect.  But a
standard is a standard, just like for some irrational reason you have to avoid
certain harmless hand gestures (middle finger extended, or index and middle
fingers in a &quot;V&quot; with the back of the hand outward, or thumb and forefinger in
a circle with the other three fingers extended, depending on the culture, to
name three).  There is no intrinsic meaning in either situation, just a social
convention.

I admit I prefer not having to type underscores, but I promote the conventions
as advice because they are conventions and generally aid readability.

Except for that opening brace one.

--
Lew
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-03T00:43:00 </POSTDATE>
On Fri, 02 Nov 2007 20:57:25 -0700, Patricia Shanahan &lt;p ... @acm.org&gt;
wrote, quoted or indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt;Where and how was &quot;_&quot; reserved?
">

It is not formally reserved, but it is a natural for use in generating
names related to other names, such as in decompilers and JSP-like
generators.

There are also the smalltalk conventions for using _.

I have also seen _ used for instance variables.
Then there is link between setter parm and backing variable.

--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> &quot;Andrew Thompson&quot; &lt;u32984@uwe&gt; </POSTER>
<POSTDATE> 2007-11-03T01:11:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Knute Johnson wrote:
">

..

<QUOTE PREVIOUSPOST="
&gt;The fixed size is one of the ..
">

(many)

<QUOTE PREVIOUSPOST="
&gt;..problems with Applets.
">

But I have done some test to try and get around it.
&lt; http://www.physci.org/test/resize/ &gt; and especially
&lt; http://www.physci.org/test/resize/fullwnd5.html &gt;

Which should be the full width and height of the browser
window, no matter how large or small it is (go on, try
resizing the browser window - I 'dare' you).

--
Andrew Thompson
http://www.athompson.info/andrew/

Message posted via JavaKB.com
http://www.javakb.com/Uwe/Forums.aspx/java-setup/200711/1
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-03T02:18:00 </POSTDATE>
On Sat, 03 Nov 2007 00:08:01 -0400, Lew &lt;l ... @lewscanon.com&gt; wrote,
quoted or indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt;Are they right?  Not in any objective manner that I can detect.
">

CamelCase are easier to type and keep variables shorter.

--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> JWS &lt;j...@my.home&gt; </POSTER>
<POSTDATE> 2007-11-03T10:37:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Roedy Green wrote:
&gt; People will likely give you a rote reply that you should be
&gt; using a Layout.  You can't very well do that since you have an
&gt; animation.  I was intrigued by your approach.  Most people
&gt; would tackle it using a Canvas or JPanel and drawing the whole
&gt; thing from scratch with Graphics methods.  You probably don't
&gt; even need an offscreen buffer. Swing should do that for you.
&gt; For superspeed you could use a VolatileImage.
">

After this, I'll probably keep quiet for a while, because it is
clear that there is much that I still have to learn. Just let me
say that I am very impressed with the quality of the many answers
I got so far in this group, from you and from others -- this is
instead of thanking everyone individually.

Just one thing: you just said

<QUOTE PREVIOUSPOST="
&gt; People will likely give you a rote reply that you should be
&gt; using a Layout. You can't very well do that since you have an
&gt; animation.
">

Are Layouts incompatible with animation? {Confused++;}

Regards, Jan
</POST>
<POST>
<POSTER> Knute Johnson &lt;nos...@rabbitbrush.frazmtn.com&gt; </POSTER>
<POSTDATE> 2007-11-03T12:23:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Andrew Thompson wrote:
&gt; Knute Johnson wrote:
&gt; ..
&gt;&gt; The fixed size is one of the ..

&gt; (many)

&gt;&gt; ..problems with Applets.

&gt; But I have done some test to try and get around it.
&gt; &lt; http://www.physci.org/test/resize/ &gt; and especially
&gt; &lt; http://www.physci.org/test/resize/fullwnd5.html &gt;

&gt; Which should be the full width and height of the browser
&gt; window, no matter how large or small it is (go on, try
&gt; resizing the browser window - I 'dare' you).
">

Andrew:

I went to look at the source and it is a lot of garbage.  Your main page
has a lot of &lt;% ... in it too.  Not sure what's up with that.

I would like to know how you get the applet to resize :-).

--

Knute Johnson
email s/nospam/knute/
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-03T12:39:00 </POSTDATE>
On Sat, 03 Nov 2007 15:37:11 +0100, JWS &lt;j ... @my.home&gt; wrote, quoted or
indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt;&gt; People will likely give you a rote reply that you should be
&gt;&gt; using a Layout. You can't very well do that since you have an
&gt;&gt; animation.

&gt;Are Layouts incompatible with animation? {Confused++;}
">

In animation you want precise positioning.  Layouts are designed for
approximate, looks-reasonable on any platform positioning.  You could
write your own Layout that gave you precise positioning.

Usually in animation you are stretching to get speed.  Layouts are not
speed demons. You normally only call them every few seconds.

Usually for animation you work at a low level, in the paintComponent
routine with fillRect and drawString. You do this:
1. for precise positioning
2. for speed
3. to allow you to use various tricks to get super speed for smooth
movement. Ironically &quot;oozier&quot; the animation, the faster it has to be.
You don't need much speed to get a jumpy animation.

--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> JWS &lt;j...@my.home&gt; </POSTER>
<POSTDATE> 2007-11-03T14:13:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Roedy Green wrote:
&gt;&gt; Are Layouts incompatible with animation? {Confused++;}

&gt; In animation you want precise positioning.  Layouts are
&gt; designed for approximate, looks-reasonable on any platform
&gt; positioning.  You could write your own Layout that gave you
&gt; precise positioning.

&gt; Usually in animation you are stretching to get speed.  Layouts
&gt; are not speed demons. You normally only call them every few
&gt; seconds.
">

Aha..

<QUOTE PREVIOUSPOST="
&gt; Usually for animation you work at a low level, in the
&gt; paintComponent routine with fillRect and drawString. You do
&gt; this:
&gt; 1. for precise positioning
&gt; 2. for speed
&gt; 3. to allow you to use various tricks to get super speed for
&gt; smooth movement. Ironically &quot;oozier&quot; the animation, the faster
&gt; it has to be. You don't need much speed to get a jumpy
&gt; animation.
">

True. I also noticed by now that 'oozy' animation is difficult to
achieve.

Are you saying that GUI elements, such as buttons, are redrawn in
every 'frame' of an animation, and that therefore these GUI
elements should be as simple as possible, without Layout? Is
there no way to have only the moving part of the applet redrawn?

I tried to do this in my own applet, by not re-drawing the parts
of the picture which do not change, but this would be pointless if
the whole GUI is redrawn anyway.

Regards, Jan
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-03T16:47:00 </POSTDATE>
On Sat, 03 Nov 2007 19:13:27 +0100, JWS &lt;j ... @my.home&gt; wrote, quoted or
indirectly quoted someone who said :

<QUOTE PREVIOUSPOST="
&gt;Are you saying that GUI elements, such as buttons, are redrawn in
&gt;every 'frame' of an animation, and that therefore these GUI
&gt;elements should be as simple as possible, without Layout? Is
&gt;there no way to have only the moving part of the applet redrawn?
">

Swing goes to great lengths to avoid repainting any more Components or
parts of Components than necessary.  But in animation, basically you
are painting an entire frame, with everything moved to new places,
unless you have done something clever such as repaint(clipregion),
offscreen bit maps you bitblt into place, or, the ultimate,
VolatileImage, where you have rendered pieces already inside the
invisible part of the hardware Regen buffer you blast onscreen.

Quite some time ago I wrote a smooth scroller for Knute using
VolatileImage. The irony was I really had to squirm to create a
majestic slow oozy scroll of a large bit map image.

see http://mindprod.com/jgloss/flicker.html
for some techniques for smoother animation.
--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
<POST>
<POSTER> &quot;Andrew Thompson&quot; &lt;u32984@uwe&gt; </POSTER>
<POSTDATE> 2007-11-03T18:38:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Knute Johnson wrote:
">

..

<QUOTE PREVIOUSPOST="
&gt;I would like to know how you get the applet to resize :-).
">

The fact people keep saying that, means I should explain
it better - it was never intended to be a secret.  But the
thing is, the trick is in the HTML itself.

Have a look at the (HTML) source, and see if you can figure
it.  If not, I will expand..

(By the way - I am more interested in getting some JWS
launched examples of your code up, rather than applets!)

--
Andrew Thompson
http://www.athompson.info/andrew/

Message posted via JavaKB.com
http://www.javakb.com/Uwe/Forums.aspx/java-setup/200711/1
</POST>
<POST>
<POSTER> &quot;Andrew Thompson&quot; &lt;u32984@uwe&gt; </POSTER>
<POSTDATE> 2007-11-03T18:46:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
JWS wrote:
">

..

<QUOTE PREVIOUSPOST="
&gt;Are you saying that GUI elements, such as buttons, are redrawn in
&gt;every 'frame' of an animation, and that therefore these GUI
&gt;elements should be as simple as possible, without Layout? Is
&gt;there no way to have only the moving part of the applet redrawn?
">

Don't render directly to the 'root pane'.

Thinks of it this way.  Imagine doing the masses-on-spring
animation in a Panel or JPanel.  Then it could be put into the
CENTER constraint of the BorderLayout* of an applet, frame,
window, ..dialog, ..

* Not that it has to be put in the CENTER of a BorderLayout,
but mostly that is where I'd put the main 'panel/component
of interest'.

I discourage *ever* doing a custom rendering in something other
than a containter, and in fact, I will usually put all the the GUI
elements (e.g. the anim panel, buttons and radio buttons) into
another panel that is 'the GUI', then tat (J)Panel can be used
wherever and however needed.

Has anybody metioned nested layouts, yet?

--
Andrew Thompson
http://www.athompson.info/andrew/

Message posted via JavaKB.com
http://www.javakb.com/Uwe/Forums.aspx/java-setup/200711/1
</POST>
<POST>
<POSTER> Knute Johnson &lt;nos...@rabbitbrush.frazmtn.com&gt; </POSTER>
<POSTDATE> 2007-11-03T18:52:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Andrew Thompson wrote:
&gt; Knute Johnson wrote:
&gt; ..
&gt;&gt; I would like to know how you get the applet to resize :-).

&gt; The fact people keep saying that, means I should explain
&gt; it better - it was never intended to be a secret.  But the
&gt; thing is, the trick is in the HTML itself.

&gt; Have a look at the (HTML) source, and see if you can figure
&gt; it.  If not, I will expand..
">

I'll look.

<QUOTE PREVIOUSPOST="
&gt; (By the way - I am more interested in getting some JWS
&gt; launched examples of your code up, rather than applets!)
">

Email me off list and tell me what you've got on your mind.

--

Knute Johnson
email s/nospam/knute/
</POST>
<POST>
<POSTER> Knute Johnson &lt;nos...@rabbitbrush.frazmtn.com&gt; </POSTER>
<POSTDATE> 2007-11-03T18:54:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Andrew Thompson wrote:
&gt; Knute Johnson wrote:
&gt; ..
&gt;&gt; I would like to know how you get the applet to resize :-).

&gt; The fact people keep saying that, means I should explain
&gt; it better - it was never intended to be a secret.  But the
&gt; thing is, the trick is in the HTML itself.

&gt; Have a look at the (HTML) source, and see if you can figure
&gt; it.  If not, I will expand..

&gt; (By the way - I am more interested in getting some JWS
&gt; launched examples of your code up, rather than applets!)
">

&lt;applet
code=&quot;PlafChanger.class&quot;
codebase=&quot;.&quot;
alt=&quot;Pluggable Look'n'Feel Changer appears here if Java is enabled&quot;
width='100%'    --------&gt;&gt;&gt;&gt; that's it?
height='250'&gt;

I didn't know you could do that!

--

Knute Johnson
email s/nospam/knute/
</POST>
<POST>
<POSTER> &quot;Andrew Thompson&quot; &lt;u32984@uwe&gt; </POSTER>
<POSTDATE> 2007-11-03T19:37:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Knute Johnson wrote:
&gt;&gt; ..
&gt;&gt;&gt; I would like to know how you get the applet to resize :-).
..
&gt;&lt;applet
&gt;    code=&quot;PlafChanger.class&quot;
&gt;    codebase=&quot;.&quot;
&gt;    alt=&quot;Pluggable Look'n'Feel Changer appears here if Java is enabled&quot;
&gt;    width='100%'    --------&gt;&gt;&gt;&gt; that's it?
">

It sure is.  Simple, huh?  With no dependencies on JS.

To get a 'full width *&amp;* height' HTML is a bit trickier, check
example 5 source for comments - all the way to the bottom.

<QUOTE PREVIOUSPOST="
&gt;    height='250'&gt;

&gt;I didn't know you could do that!
">

;-)

--
Andrew Thompson
http://www.athompson.info/andrew/

Message posted via http://www.javakb.com
</POST>
<POST>
<POSTER> Roedy Green &lt;see_webs...@mindprod.com.invalid&gt; </POSTER>
<POSTDATE> 2007-11-03T23:25:00 </POSTDATE>
On Sat, 03 Nov 2007 15:54:07 -0700, Knute Johnson
&lt;nos ... @rabbitbrush.frazmtn.com&gt; wrote, quoted or indirectly quoted
someone who said :

<QUOTE PREVIOUSPOST="
&gt;I didn't know you could do that!
">

check out http://mindprod.com/jgloss/applet.html

It is in there, and perhaps some other surprises.
--
Roedy Green Canadian Mind Products
The Java Glossary
http://mindprod.com
</POST>
</TEXT>
</BODY>
</DOC>
