<DOC>
<DOCID> eng-NG-31-135589-9749294 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2008-01-13T05:27:00 </DATETIME>
<BODY>
<HEADLINE>
recursion, stack, fortran
</HEADLINE>
<TEXT>
<POST>
<POSTER> &quot;Reagan Revision&quot; &lt;inva...@invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-13T05:27:00 </POSTDATE>
Does the existence of recursion in fortran95 or later imply the existence of
a stack, as far as the Fortran Programming Language is concerned?

The only reference I find in the standard is:

C.12.1.4 Automatic arrays and allocatable variables (5.1, 5.1.2.5.3) 7

Two features useful for writing modular software are automatic arrays,
created on entry to a subprogram 8

and destroyed on return, and allocatable variables, including arrays whose
rank is fixed but whose actual 9

size and lifetime is fully under the programmer's control through explicit
ALLOCATE and DEALLO- 10

CATE statements. The declarations 11

SUBROUTINE X (N, A, B) 12

REAL WORK (N, N); REAL, ALLOCATABLE :: HEAP (:, :) 13

specify an automatic array WORK and an allocatable array HEAP. Note that a
stack is an adequate 14

storage mechanism for the implementation of automatic arrays, but a heap
will be needed for some 15

allocatable variables. 16

#end excerpt

--
Reagan Revision

&quot;We are being told that a competent, trustworthy president is someone
who brandishes his religion like a neon sign, loads a gun and goes out
hunting for beautiful winged creatures, and tries to imitate a past
president who, by the way, never shot a bird or felt the need to imitate
anybody.&quot;

~~  Patti Davis Is Not Flattered by GOP Candidates' Pale Imitations of
Her Father

----== Posted via Newsfeeds.Com - Unlimited-Unrestricted-Secure Usenet News==----
http://www.newsfeeds.com The #1 Newsgroup Service in the World! 120,000+ Newsgroups
----= East and West-Coast Server Farms - Total Privacy via Encryption =----
</POST>
<POST>
<POSTER> Arjen Markus &lt;arjen.mar...@wldelft.nl&gt; </POSTER>
<POSTDATE> 2008-01-13T08:16:00 </POSTDATE>
On 13 jan, 11:27, &quot;Reagan Revision&quot; &lt;inva ... @invalid.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Does the existence of recursion in fortran95 or later imply the existence of
&gt; a stack, as far as the Fortran Programming Language is concerned?
">

As fas as I understand it, the standard tries to be completely neutral
as to the
actual implementation of any feature. That would very well include
stacks as a
means to implementation recursion. Stacks would of course be a very
common
way to do it.

Regards,

Arjen
</POST>
<POST>
<POSTER> &quot;Reagan Revision&quot; &lt;inva...@invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-14T20:10:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&quot;Arjen Markus&quot; &lt;arjen.mar ... @wldelft.nl&gt; wrote in message
">

news:74335c2b-75a5-4752-b032-793396dc1d6b@k2g2000hse.googlegroups.com ...

<QUOTE PREVIOUSPOST="
&gt; On 13 jan, 11:27, &quot;Reagan Revision&quot; &lt;inva ... @invalid.net&gt; wrote:
&gt;&gt; Does the existence of recursion in fortran95 or later imply the existence
&gt;&gt; of
&gt;&gt; a stack, as far as the Fortran Programming Language is concerned?

&gt; As fas as I understand it, the standard tries to be completely neutral
&gt; as to the
&gt; actual implementation of any feature. That would very well include
&gt; stacks as a
&gt; means to implementation recursion. Stacks would of course be a very
&gt; common
&gt; way to do it.
">

Hmmm....  That's not the answer I was expecting.

I've never been accused of having sophisticated methods with memory
management, but I've always thought of recursion in terms of stacks.  In
some sense, I'm able to &quot;see&quot; the stack itself for, say, a factorial
function written using recursion.  I wouldn't be surprised if I had a
professor use a recursive function to motivate the discussion of a stack.

Maybe stacks are like sorting, in some sense, integral to the business at
hand for scientific computing, but non-entities in terms of the standard.

--
Reagan Revision

&quot;We are being told that a competent, trustworthy president is someone
who brandishes his religion like a neon sign, loads a gun and goes out
hunting for beautiful winged creatures, and tries to imitate a past
president who, by the way, never shot a bird or felt the need to imitate
anybody.&quot;

~~  Patti Davis Is Not Flattered by GOP Candidates' Pale Imitations of
Her Father

----== Posted via Newsfeeds.Com - Unlimited-Unrestricted-Secure Usenet News==----
http://www.newsfeeds.com The #1 Newsgroup Service in the World! 120,000+ Newsgroups
----= East and West-Coast Server Farms - Total Privacy via Encryption =----
</POST>
<POST>
<POSTER> Arjen Markus &lt;arjen.mar...@wldelft.nl&gt; </POSTER>
<POSTDATE> 2008-01-15T05:37:00 </POSTDATE>
On 15 jan, 02:10, &quot;Reagan Revision&quot; &lt;inva ... @invalid.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &quot;Arjen Markus&quot; &lt;arjen.mar ... @wldelft.nl&gt; wrote in message

&gt; news:74335c2b-75a5-4752-b032-793396dc1d6b@k2g2000hse.googlegroups.com ...&gt; On 13 jan, 11:27, &quot;Reagan Revision&quot; &lt;inva ... @invalid.net&gt; wrote:
&gt; &gt;&gt; Does the existence of recursion in fortran95 or later imply the existence
&gt; &gt;&gt; of
&gt; &gt;&gt; a stack, as far as the Fortran Programming Language is concerned?

&gt; &gt; As fas as I understand it, the standard tries to be completely neutral
&gt; &gt; as to the
&gt; &gt; actual implementation of any feature. That would very well include
&gt; &gt; stacks as a
&gt; &gt; means to implementation recursion. Stacks would of course be a very
&gt; &gt; common
&gt; &gt; way to do it.

&gt; Hmmm....  That's not the answer I was expecting.

&gt; I've never been accused of having sophisticated methods with memory
&gt; management, but I've always thought of recursion in terms of stacks.  In
&gt; some sense, I'm able to &quot;see&quot; the stack itself for, say, a factorial
&gt; function written using recursion.  I wouldn't be surprised if I had a
&gt; professor use a recursive function to motivate the discussion of a stack.

&gt; Maybe stacks are like sorting, in some sense, integral to the business at
&gt; hand for scientific computing, but non-entities in terms of the standard.
">

Well, I am no connoisseur of the standard text, nor of
compiler writing. My answer is based on what I have picked
up from postings here. The standard is, as I understand it,
very liberal (*) wrt the actual implementation, thus giving
compiler writers every chance to come with something smart
or useful for their particular platform.

To extend the analogy with sorting: the QuickSort algorithm
is a very quick algorithm, but it may not always be the best.
For instance: MergeSort is roughly twice as slow (IIRC), but it
maintains the order of entries that sort equally, thus making
it possible to sort one column after another and get a combined
result.

Regards,

Arjen

(*) liberal in the non-political sense of the word, of course.
</POST>
<POST>
<POSTER> nos...@see.signature (Richard Maine) </POSTER>
<POSTDATE> 2008-01-15T12:57:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Arjen Markus &lt;arjen.mar ... @wldelft.nl&gt; wrote:
&gt; On 15 jan, 02:10, &quot;Reagan Revision&quot; &lt;inva ... @invalid.net&gt; wrote:
&gt; &gt; &quot;Arjen Markus&quot; &lt;arjen.mar ... @wldelft.nl&gt; wrote in message
">

news:74335c2b-75a5-4752-b032-793396dc1d6b@k2g2000hse.googlegroups.com ...

<QUOTE PREVIOUSPOST="
&gt; On 13 jan, 11:27, &quot;Reagan Revision&quot; &lt;inva ... @invalid.net&gt; wrote:
&gt; &gt; &gt;&gt; Does the existence of recursion in fortran95 or later imply the
&gt; &gt; &gt;&gt; existence of a stack, as far as the Fortran Programming Language is
&gt; &gt; &gt;&gt; concerned?

&gt; &gt; &gt; As fas as I understand it, the standard tries to be completely neutral
&gt; &gt; &gt; as to the actual implementation of any feature. That would very well
&gt; &gt; &gt; include stacks as a means to implementation recursion. Stacks would of
&gt; &gt; &gt; course be a very common way to do it.

&gt; &gt; Hmmm....  That's not the answer I was expecting.

&gt; &gt; I've never been accused of having sophisticated methods with memory
&gt; &gt; management, but I've always thought of recursion in terms of stacks.
">

(For some reason, I've not yet seen Regan's post other than the bit
quoted in Arjen's reply, so I'm replying 2nd hand as it were.)

I can confirm Arjen's answer. The Fortran standard almost *NEVER*
specifies implementation details at that level. There are times when
this makes for awkward and complicated descriptions in the standard,
where it would be much simpler to just talk about the implementation.
This is all quite intentional. For example, the descriptions of argument
passing go quite a lot out of the way to allow multiple implementation
methods. There are several conditions in the standard that are there
specifically to prohibit code that would give results that depend on
which implementation technique is selected by the compiler.

It has been noted that the Fortran standard could be implemented as a
bunch of grad students with paper and pencils.

And no, implementation of recursion does not inherently require stacks.
That just happens to be an obvious and relatively simple way to do it.
Heck, stacks themselves can be implemented in terms of other things...
and have been on machines that didn't directly support such a thng as a
stack. For that matter, Fortran programmers have been implementing
stacks in Fortran for longer than I have been proggramming (about 40
years) without needing recursion or other explicit language support for
stacks.

--
Richard Maine                    | Good judgement comes from experience;
email: last name at domain . net | experience comes from bad judgement.
domain: summertriangle           |  -- Mark Twain
</POST>
<POST>
<POSTER> glen herrmannsfeldt &lt;g...@ugcs.caltech.edu&gt; </POSTER>
<POSTDATE> 2008-01-15T15:27:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Richard Maine wrote:
">

(snip)

<QUOTE PREVIOUSPOST="
&gt; And no, implementation of recursion does not inherently require stacks.
&gt; That just happens to be an obvious and relatively simple way to do it.
&gt; Heck, stacks themselves can be implemented in terms of other things...
&gt; and have been on machines that didn't directly support such a thng as a
&gt; stack. For that matter, Fortran programmers have been implementing
&gt; stacks in Fortran for longer than I have been proggramming (about 40
&gt; years) without needing recursion or other explicit language support for
&gt; stacks.
">

IBM S/360 and S/370 don't have stack hardware.  It is possible to
implement a stack in software, but that wasn't usual for the IBM
supplied systems.  The system standard calling convention uses a
linked list including the register save area and return address.
For Fortran before recursion the save areas were statically allocated.
For languages that allowed recursion save areas were dynamically
allocated, (usually) along with the local variables for the called
routine.

Using a linked list instead of a stack has an advantage in not
having to anticipate the size needed in advance.  Also, it is
possible to call another main program using the same calling
convention.

Linux/390 (on ESA/390, a descendant of S/370) I believe does
use a stack, as would be usual for other Linux systems.

-- glen
</POST>
<POST>
<POSTER> &quot;Reagan Revision&quot; &lt;invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-18T00:10:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&quot;glen herrmannsfeldt&quot; &lt;g ... @ugcs.caltech.edu&gt; wrote in message
">

news:Ia-dncfku6eQixDanZ2dnUVZ_g-dnZ2d@comcast.com ...

<QUOTE PREVIOUSPOST="
&gt; Richard Maine:
">

(snip)

<QUOTE PREVIOUSPOST="
&gt;&gt; And no, implementation of recursion does not inherently require stacks.
&gt;&gt; That just happens to be an obvious and relatively simple way to do it.
&gt;&gt; Heck, stacks themselves can be implemented in terms of other things...
&gt;&gt; and have been on machines that didn't directly support such a thng as a
&gt;&gt; stack. For that matter, Fortran programmers have been implementing
&gt;&gt; stacks in Fortran for longer than I have been proggramming (about 40
&gt;&gt; years) without needing recursion or other explicit language support for
&gt;&gt; stacks.
">

[re-ordered for thematic reasons]

<QUOTE PREVIOUSPOST="
&gt; IBM S/360 and S/370 don't have stack hardware.  It is possible to
&gt; implement a stack in software, but that wasn't usual for the IBM
&gt; supplied systems.  The system standard calling convention uses a
&gt; linked list including the register save area and return address.
&gt; For Fortran before recursion the save areas were statically allocated.
&gt; For languages that allowed recursion save areas were dynamically
&gt; allocated, (usually) along with the local variables for the called
&gt; routine.
&gt; Linux/390 (on ESA/390, a descendant of S/370) I believe does
&gt; use a stack, as would be usual for other Linux systems.
">

You cite examples of machines without stack hardware.  Furthermore they look
fossils.  Did something close to standard fortran run on these machines?

<QUOTE PREVIOUSPOST="
&gt; Using a linked list instead of a stack has an advantage in not
&gt; having to anticipate the size needed in advance.  Also, it is
&gt; possible to call another main program using the same calling
&gt; convention.
">

Is that why they never stop talking about linked lists in the C community:
that it's how their syntax does a stack?

--

Reagan Revision

To sum up: 1. The cosmos is a gigantic fly-wheel making 10,000 revolutions a
minute. 2. Man is a sick fly taking a dizzy ride on it. 3. Religion is the
theory that the wheel was designed and set spinning to give him the ride.
-- H L Mencken, &quot;Coda,&quot; in Smart Set (New York, Dec. 1920; repr. in A
Mencken Chrestomathy, pt. 1, 1949).
</POST>
<POST>
<POSTER> David Flower &lt;DavJFlo...@aol.com&gt; </POSTER>
<POSTDATE> 2008-01-18T05:30:00 </POSTDATE>
On Jan 18, 5:10�am, &quot;Reagan Revision&quot; &lt;invalid.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &quot;glen herrmannsfeldt&quot; &lt;g ... @ugcs.caltech.edu&gt; wrote in message

&gt; news:Ia-dncfku6eQixDanZ2dnUVZ_g-dnZ2d@comcast.com ...&gt; Richard Maine:

&gt; (snip)

&gt; &gt;&gt; And no, implementation of recursion does not inherently require stacks.
&gt; &gt;&gt; That just happens to be an obvious and relatively simple way to do it.
&gt; &gt;&gt; Heck, stacks themselves can be implemented in terms of other things...
&gt; &gt;&gt; and have been on machines that didn't directly support such a thng as a
&gt; &gt;&gt; stack. For that matter, Fortran programmers have been implementing
&gt; &gt;&gt; stacks in Fortran for longer than I have been proggramming (about 40
&gt; &gt;&gt; years) without needing recursion or other explicit language support for
&gt; &gt;&gt; stacks.

&gt; [re-ordered for thematic reasons]

&gt; &gt; IBM S/360 and S/370 don't have stack hardware. �It is possible to
&gt; &gt; implement a stack in software, but that wasn't usual for the IBM
&gt; &gt; supplied systems. �The system standard calling convention uses a
&gt; &gt; linked list including the register save area and return address.
&gt; &gt; For Fortran before recursion the save areas were statically allocated.
&gt; &gt; For languages that allowed recursion save areas were dynamically
&gt; &gt; allocated, (usually) along with the local variables for the called
&gt; &gt; routine.
&gt; &gt; Linux/390 (on ESA/390, a descendant of S/370) I believe does
&gt; &gt; use a stack, as would be usual for other Linux systems.

&gt; You cite examples of machines without stack hardware. �Furthermore they look
&gt; fossils. �Did something close to standard fortran run on these machines?

&gt; &gt; Using a linked list instead of a stack has an advantage in not
&gt; &gt; having to anticipate the size needed in advance. �Also, it is
&gt; &gt; possible to call another main program using the same calling
&gt; &gt; convention.

&gt; Is that why they never stop talking about linked lists in the C community:
&gt; that it's how their syntax does a stack?

&gt; --

&gt; Reagan Revision

&gt; To sum up: 1. The cosmos is a gigantic fly-wheel making 10,000 revolutions a
&gt; minute. 2. Man is a sick fly taking a dizzy ride on it. 3. Religion is the
&gt; theory that the wheel was designed and set spinning to give him the ride.
&gt; -- H L Mencken, &quot;Coda,&quot; in Smart Set (New York, Dec. 1920; repr. in A
&gt; Mencken Chrestomathy, pt. 1, 1949).
">

I have programmed in Fortran on an IBM 360/95. This was in the late
1960's, using a subset of FORTRAN 66 (to start with, no logical IF
statements). The machine had 4.5MByte of memory (called 'core' in
those days), which was at the time awesomely huge. It shows how far
technology has gone that I have just purchased a 4MByte memory stick
for my wife's digital camera for under �30 ($60).

Dave Flower
</POST>
<POST>
<POSTER> &quot;Regan Revised&quot; &lt;inva...@invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-18T05:58:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&quot;David Flower&quot; &lt;DavJFlo ... @aol.com&gt; wrote in message
">

news:44678e6f-f4cf-4ddf-8c60-8aa70afebb90@s13g2000prd.googlegroups.com ...
On Jan 18, 5:10?am, &quot;Reagan Revision&quot; &lt;invalid.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &quot;glen herrmannsfeldt&quot; &lt;g ... @ugcs.caltech.edu&gt; wrote in message

&gt; news:Ia-dncfku6eQixDanZ2dnUVZ_g-dnZ2d@comcast.com ...&gt; Richard Maine:

&gt; (snip)

&gt; &gt;&gt; And no, implementation of recursion does not inherently require stacks.
&gt; &gt;&gt; That just happens to be an obvious and relatively simple way to do it.
&gt; &gt;&gt; Heck, stacks themselves can be implemented in terms of other things...
&gt; &gt;&gt; and have been on machines that didn't directly support such a thng as a
&gt; &gt;&gt; stack. For that matter, Fortran programmers have been implementing
&gt; &gt;&gt; stacks in Fortran for longer than I have been proggramming (about 40
&gt; &gt;&gt; years) without needing recursion or other explicit language support for
&gt; &gt;&gt; stacks.

&gt; [re-ordered for thematic reasons]

&gt; &gt; IBM S/360 and S/370 don't have stack hardware. ?It is possible to
&gt; &gt; implement a stack in software, but that wasn't usual for the IBM
&gt; &gt; supplied systems. ?The system standard calling convention uses a
&gt; &gt; linked list including the register save area and return address.
&gt; &gt; For Fortran before recursion the save areas were statically allocated.
&gt; &gt; For languages that allowed recursion save areas were dynamically
&gt; &gt; allocated, (usually) along with the local variables for the called
&gt; &gt; routine.
&gt; &gt; Linux/390 (on ESA/390, a descendant of S/370) I believe does
&gt; &gt; use a stack, as would be usual for other Linux systems.

&gt; You cite examples of machines without stack hardware. ?Furthermore they
&gt; look
&gt; fossils. ?Did something close to standard fortran run on these machines?

&gt; &gt; Using a linked list instead of a stack has an advantage in not
&gt; &gt; having to anticipate the size needed in advance. ?Also, it is
&gt; &gt; possible to call another main program using the same calling
&gt; &gt; convention.

&gt; Is that why they never stop talking about linked lists in the C community:
&gt; that it's how their syntax does a stack?

&gt; --

&gt; Reagan Revision

&gt; To sum up: 1. The cosmos is a gigantic fly-wheel making 10,000 revolutions
&gt; a
&gt; minute. 2. Man is a sick fly taking a dizzy ride on it. 3. Religion is the
&gt; theory that the wheel was designed and set spinning to give him the ride.
&gt; -- H L Mencken, &quot;Coda,&quot; in Smart Set (New York, Dec. 1920; repr. in A
&gt; Mencken Chrestomathy, pt. 1, 1949).
">

I have programmed in Fortran on an IBM 360/95. This was in the late
1960's, using a subset of FORTRAN 66 (to start with, no logical IF
statements). The machine had 4.5MByte of memory (called 'core' in
those days), which was at the time awesomely huge. It shows how far
technology has gone that I have just purchased a 4MByte memory stick
for my wife's digital camera for under ?30 ($60).

Dave Flower

---&gt;Interesting.  I don't recall you from the somewhat recent thread
regarding the age of c.l.f. respondents.  At the time, I posited that
someone would come in higher than Terence.  If you were programming in the
sixties you /could/ beat 73, a sopposed to just moving up the mean from
49.5.

One thing I found on arrival here in NM was an old IBM fortran manual.  I
would claim, without knowing better than what LeRoy Wentz taught me--happy
71 pal--is that IBM was the pre-standard standard.
--

Reagan Revision
ps I think that the rectangle that confused usenet before the 30 was euros.

To sum up: 1. The cosmos is a gigantic fly-wheel making 10,000 revolutions a
minute. 2. Man is a sick fly taking a dizzy ride on it. 3. Religion is the
theory that the wheel was designed and set spinning to give him the ride.
-- H L Mencken, &quot;Coda,&quot; in Smart Set (New York, Dec. 1920; repr. in A
Mencken Chrestomathy, pt. 1, 1949).
</POST>
<POST>
<POSTER> David Flower &lt;DavJFlo...@aol.com&gt; </POSTER>
<POSTDATE> 2008-01-18T10:13:00 </POSTDATE>
On Jan 18, 10:58�am, &quot;Regan Revised&quot; &lt;inva ... @invalid.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &quot;David Flower&quot; &lt;DavJFlo ... @aol.com&gt; wrote in message

&gt; news:44678e6f-f4cf-4ddf-8c60-8aa70afebb90@s13g2000prd.googlegroups.com ...
&gt; On Jan 18, 5:10?am, &quot;Reagan Revision&quot; &lt;invalid.net&gt; wrote:

&gt; &gt; &quot;glen herrmannsfeldt&quot; &lt;g ... @ugcs.caltech.edu&gt; wrote in message

&gt; &gt; news:Ia-dncfku6eQixDanZ2dnUVZ_g-dnZ2d@comcast.com ...&gt; Richard Maine:

&gt; &gt; (snip)

&gt; &gt; &gt;&gt; And no, implementation of recursion does not inherently require stacks.
&gt; &gt; &gt;&gt; That just happens to be an obvious and relatively simple way to do it.
&gt; &gt; &gt;&gt; Heck, stacks themselves can be implemented in terms of other things...
&gt; &gt; &gt;&gt; and have been on machines that didn't directly support such a thng as a
&gt; &gt; &gt;&gt; stack. For that matter, Fortran programmers have been implementing
&gt; &gt; &gt;&gt; stacks in Fortran for longer than I have been proggramming (about 40
&gt; &gt; &gt;&gt; years) without needing recursion or other explicit language support for
&gt; &gt; &gt;&gt; stacks.

&gt; &gt; [re-ordered for thematic reasons]

&gt; &gt; &gt; IBM S/360 and S/370 don't have stack hardware. ?It is possible to
&gt; &gt; &gt; implement a stack in software, but that wasn't usual for the IBM
&gt; &gt; &gt; supplied systems. ?The system standard calling convention uses a
&gt; &gt; &gt; linked list including the register save area and return address.
&gt; &gt; &gt; For Fortran before recursion the save areas were statically allocated.
&gt; &gt; &gt; For languages that allowed recursion save areas were dynamically
&gt; &gt; &gt; allocated, (usually) along with the local variables for the called
&gt; &gt; &gt; routine.
&gt; &gt; &gt; Linux/390 (on ESA/390, a descendant of S/370) I believe does
&gt; &gt; &gt; use a stack, as would be usual for other Linux systems.

&gt; &gt; You cite examples of machines without stack hardware. ?Furthermore they
&gt; &gt; look
&gt; &gt; fossils. ?Did something close to standard fortran run on these machines?

&gt; &gt; &gt; Using a linked list instead of a stack has an advantage in not
&gt; &gt; &gt; having to anticipate the size needed in advance. ?Also, it is
&gt; &gt; &gt; possible to call another main program using the same calling
&gt; &gt; &gt; convention.

&gt; &gt; Is that why they never stop talking about linked lists in the C community:
&gt; &gt; that it's how their syntax does a stack?

&gt; &gt; --

&gt; &gt; Reagan Revision

&gt; &gt; To sum up: 1. The cosmos is a gigantic fly-wheel making 10,000 revolutions
&gt; &gt; a
&gt; &gt; minute. 2. Man is a sick fly taking a dizzy ride on it. 3. Religion is the
&gt; &gt; theory that the wheel was designed and set spinning to give him the ride.
&gt; &gt; -- H L Mencken, &quot;Coda,&quot; in Smart Set (New York, Dec. 1920; repr. in A
&gt; &gt; Mencken Chrestomathy, pt. 1, 1949).

&gt; I have programmed in Fortran on an IBM 360/95. This was in the late
&gt; 1960's, using a subset of FORTRAN 66 (to start with, no logical IF
&gt; statements). The machine had 4.5MByte of memory (called 'core' in
&gt; those days), which was at the time awesomely huge. It shows how far
&gt; technology has gone that I have just purchased a 4MByte memory stick
&gt; for my wife's digital camera for under ?30 ($60).

&gt; Dave Flower

&gt; ---&gt;Interesting. �I don't recall you from the somewhat recent thread
&gt; regarding the age of c.l.f. respondents. �At the time, I posited that
&gt; someone would come in higher than Terence. �If you were programming in the
&gt; sixties you /could/ beat 73, a sopposed to just moving up the mean from
&gt; 49.5.

&gt; One thing I found on arrival here in NM was an old IBM fortran manual. �I
&gt; would claim, without knowing better than what LeRoy Wentz taught me--happy
&gt; 71 pal--is that IBM was the pre-standard standard.
&gt; --

&gt; Reagan Revision
&gt; ps I think that the rectangle that confused usenet before the 30 was euros.
">

No, it was a Pound sign

Dave Flower (Aged sixty three and a half)

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; To sum up: 1. The cosmos is a gigantic fly-wheel making 10,000 revolutions a
&gt; minute. 2. Man is a sick fly taking a dizzy ride on it. 3. Religion is the
&gt; theory that the wheel was designed and set spinning to give him the ride.
&gt; -- H L Mencken, &quot;Coda,&quot; in Smart Set (New York, Dec. 1920; repr. in A
&gt; Mencken Chrestomathy, pt. 1, 1949).- Hide quoted text -

&gt; - Show quoted text -
">
</POST>
<POST>
<POSTER> glen herrmannsfeldt &lt;g...@ugcs.caltech.edu&gt; </POSTER>
<POSTDATE> 2008-01-18T12:00:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
David Flower wrote:
">

(snip)

<QUOTE PREVIOUSPOST="
&gt; I have programmed in Fortran on an IBM 360/95. This was in the late
&gt; 1960's, using a subset of FORTRAN 66 (to start with, no logical IF
&gt; statements). The machine had 4.5MByte of memory (called 'core' in
&gt; those days), which was at the time awesomely huge. It shows how far
&gt; technology has gone that I have just purchased a 4MByte memory stick
&gt; for my wife's digital camera for under �30 ($60).
">

The OS/360 compilers (G and H) supported the full Fortran 66 standard
with a small number of extensions.  I would expect one of those by the
time the 360/95 came out.

The DOS/360 Fortran compiler (I believe E, but maybe D) may have
been a subset, but I would be really surprised to see DOS/360
running on a 360/95.

-- glen
</POST>
<POST>
<POSTER> glen herrmannsfeldt &lt;g...@ugcs.caltech.edu&gt; </POSTER>
<POSTDATE> 2008-01-18T21:22:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Reagan Revision wrote:
">

(snip)

<QUOTE PREVIOUSPOST="
&gt; You cite examples of machines without stack hardware.  Furthermore they look
&gt; fossils.  Did something close to standard fortran run on these machines?
">

S/360 may be a fossil, but z/Architecture is a descendant of it.

Fortran was very popular on S/360.  The OS/360 compilers
version of Fortran IV was standard Fortran 66 with a relatively
small number of extensions (compared to many other contemporary
implementations).

Before 1966, IBM was the Fortran standard.

-- glen
</POST>
<POST>
<POSTER> &quot;Regan Revised&quot; &lt;inva...@invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-19T19:51:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&quot;David Flower&quot; &lt;DavJFlo ... @aol.com&gt; wrote in message
">

news:10589ce6-b05b-4c9f-8a93-0a649c7f0e47@h11g2000prf.googlegroups.com ...
On Jan 18, 10:58?am, &quot;Regan Revised&quot; &lt;inva ... @invalid.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &quot;David Flower&quot; &lt;DavJFlo ... @aol.com&gt; wrote in message

&gt; news:44678e6f-f4cf-4ddf-8c60-8aa70afebb90@s13g2000prd.googlegroups.com ...
&gt; On Jan 18, 5:10?am, &quot;Reagan Revision&quot; &lt;invalid.net&gt; wrote:
&gt; I have programmed in Fortran on an IBM 360/95. This was in the late
&gt; 1960's, using a subset of FORTRAN 66 (to start with, no logical IF
&gt; statements). The machine had 4.5MByte of memory (called 'core' in
&gt; those days), which was at the time awesomely huge. It shows how far
&gt; technology has gone that I have just purchased a 4MByte memory stick
&gt; for my wife's digital camera for under ?30 ($60).

&gt; Dave Flower

&gt; ---&gt;Interesting. ?I don't recall you from the somewhat recent thread
&gt; regarding the age of c.l.f. respondents. ?At the time, I posited that
&gt; someone would come in higher than Terence. ?If you were programming in the
&gt; sixties you /could/ beat 73, a sopposed to just moving up the mean from
&gt; 49.5.

&gt; One thing I found on arrival here in NM was an old IBM fortran manual. ?I
&gt; would claim, without knowing better than what LeRoy Wentz taught me--happy
&gt; 71 pal--is that IBM was the pre-standard standard.
&gt; --

&gt; Reagan Revision
&gt; ps I think that the rectangle that confused usenet before the 30 was
&gt; euros.
">

No, it was a Pound sign

Dave Flower (Aged sixty three and a half)
---&gt;I meant to write pounds despite having written euros.  I'm actually
surprised that pounds haven't gone the way of the mark, with the grief that
John Major was taking about it.  I suppose he's now 2 p.m.'s different, so
it may be a non-issue now.  BTW, can you see my pound: £ instead of a
rectangle?

63 and change is not enough to beat Terence but is sufficient to move the
average age to fifty.  Thanks a lot, Dave.

I wouldn't miss a stack until a program simply didn't run.  How the heck did
you get along without if?

--

Regan R.

Deep within the heart of every evangelist lies the wreck of a car salesman.
-- H L Mencken, describing the Christian author Ray Comfort.
</POST>
<POST>
<POSTER> &quot;Regan Revised&quot; &lt;inva...@invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-19T20:33:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
herrmannsfeldt&quot; &lt;g ... @ugcs.caltech.edu&gt; wrote in message
">

news:noSdnSRSPP8pwAzanZ2dnUVZ_g2dnZ2d@comcast.com ...

<QUOTE PREVIOUSPOST="
&gt; Reagan Revision wrote:

&gt; (snip)

&gt;&gt; You cite examples of machines without stack hardware.  Furthermore they
&gt;&gt; look [like] fossils.  Did something close to standard fortran run on
&gt;&gt; these machines?

&gt; S/360 may be a fossil, but z/Architecture is a descendant of it.

&gt; Fortran was very popular on S/360.  The OS/360 compilers
&gt; version of Fortran IV was standard Fortran 66 with a relatively
&gt; small number of extensions (compared to many other contemporary
&gt; implementations).

&gt; Before 1966, IBM was the Fortran standard.
">

66 was the year of my birth, so I'll make fictitious claims to contributions
to mathematical computer science by virtue of this coincidence.  Revision is
in fashion.

I tried to educate myself on this and found:
http://en.wikipedia.org/wiki/OS/360

When we then read of System/370 and virtual memory operating systems, do we
get a stack?
--

Regan R.

Deep within the heart of every evangelist lies the wreck of a car salesman.
-- H L Mencken, describing the Christian author Ray Comfort.
</POST>
<POST>
<POSTER> har...@mcs.vuw.ac.nz (John Harper) </POSTER>
<POSTDATE> 2008-01-21T20:11:00 </POSTDATE>
In article &lt;10589ce6-b05b-4c9f-8a93-0a649c7f0 ... @h11g2000prf.googlegroups.com&gt;,
David Flower  &lt;DavJFlo ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt;No, it was a Pound sign
">

Of the UK kind! In USA the pound sign is totally different, comes after
the number not before it, and it means pounds avoirdupois, not sterling.

-- John Harper, School of Mathematics, Statistics and Computer Science,
Victoria University, PO Box 600, Wellington 6140, New Zealand
e-mail john.har ... @vuw.ac.nz phone (+64)(4)463 5662 fax (+64)(4)463 5045
</POST>
<POST>
<POSTER> glen herrmannsfeldt &lt;g...@ugcs.caltech.edu&gt; </POSTER>
<POSTDATE> 2008-01-22T15:32:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Regan Revised wrote:
">

(snip)

<QUOTE PREVIOUSPOST="
&gt; 66 was the year of my birth, so I'll make fictitious claims to contributions
&gt; to mathematical computer science by virtue of this coincidence.  Revision is
&gt; in fashion.
&gt; I tried to educate myself on this and found:
&gt; http://en.wikipedia.org/wiki/OS/360
&gt; When we then read of System/370 and virtual memory operating
&gt; systems, do we get a stack?
">

No.  I believe the stack (BAKR and PR) was added in ESA/390,
and even then isn't the stack that C programmers expect.
BAKR does subroutine linkage, but arguments are passed separately.

-- glen
</POST>
<POST>
<POSTER> &quot;Gerry Ford&quot; &lt;inva...@invalid.net&gt; </POSTER>
<POSTDATE> 2008-01-26T00:55:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&quot;glen herrmannsfeldt&quot; &lt;g ... @ugcs.caltech.edu&gt; wrote in message
">

news:1-6dnUoKWIhWzAvanZ2dnUVZ_qiinZ2d@comcast.com ...

<QUOTE PREVIOUSPOST="
&gt; Regan Revised wrote:
&gt; (snip)

&gt;&gt; 66 was the year of my birth, so I'll make fictitious claims to
&gt;&gt; contributions to mathematical computer science by virtue of this
&gt;&gt; coincidence.  Revision is in fashion.

&gt;&gt; I tried to educate myself on this and found:
&gt;&gt; http://en.wikipedia.org/wiki/OS/360

&gt;&gt; When we then read of System/370 and virtual memory operating
&gt;&gt; systems, do we get a stack?

&gt; No.  I believe the stack (BAKR and PR) was added in ESA/390,
&gt; and even then isn't the stack that C programmers expect.
&gt; BAKR does subroutine linkage, but arguments are passed separately.
">

Yeah.  I re-read Heathfield in Unleashed about the stack and think that the
connection I imagined to machines is wrong-headed.  It's funny how abstract
notions are &quot;concrete&quot; in the minds of dreamers.  Henry Eyring would see the
molecules of varying energies like seating at the opera.

Fortran:  Born with me.  :-)

--
The most common of all follies is to believe passionately in the palpably
not true. It is the chief occupation of mankind.
-- H L Mencken, A Mencken Chrestomathy (1949)
</POST>
</TEXT>
</BODY>
</DOC>
