<DOC>
<DOCID> eng-NG-31-126425-9150989 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-11-19T13:35:00 </DATETIME>
<BODY>
<HEADLINE>
Simple method to get a HTML/HEX colour code from HSL?
</HEADLINE>
<TEXT>
<POST>
<POSTER> darkflame &lt;darkfl...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-11-19T13:35:00 </POSTDATE>
Anyone know a good way to do this?

I'd like to set a set of elements to be coloured based on values.
Using;

DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&quot;backgroundColor&quot;, &quot;#FF0000&quot;);

I can set the element ok, I'm just looking for a good way to generate
that code at the end.
I know theres color-handeling stuff for java, but I'm not sure how to
get them to work with the GWT/eclipse, or if its better just to do it
with a bit of maths in this case.

Any pointers would be helpfull.

Cheers,
Darkflame
</POST>
<POST>
<POSTER> Peter Blazejewicz &lt;peter.blazejew...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-11-19T21:30:00 </POSTDATE>
hi,
such algorithms are part of w3 specifications, that one (HSL&gt;RGB to be
strict) is defined here:
http://www.w3.org/TR/css3-color/#hsl-color

regards,
Peter

On Nov 19, 7:35 pm, darkflame &lt;darkfl ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Anyone know a good way to do this?

&gt; I'd like to set a set of elements to be coloured based on values.
&gt; Using;

&gt; DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&gt; &quot;backgroundColor&quot;, &quot;#FF0000&quot;);

&gt; I can set the element ok, I'm just looking for a good way to generate
&gt; that code at the end.
&gt; I know theres color-handeling stuff for java, but I'm not sure how to
&gt; get them to work with the GWT/eclipse, or if its better just to do it
&gt; with a bit of maths in this case.

&gt; Any pointers would be helpfull.

&gt; Cheers,
&gt; Darkflame
">
</POST>
<POST>
<POSTER> mP &lt;miroslav.poko...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-11-19T22:49:00 </POSTDATE>
Is HSL the same as HSV ? If so the rocket-gwt (google it) project
includes a colour class that includes a method to take a HSV view of
the Colour.

A variety of factory methods are available to create a Colour from a
rgb or rrggbb triplet a named colour etc.

On Nov 20, 1:30 pm, Peter Blazejewicz &lt;peter.blazejew ... @gmail.com&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; hi,
&gt; such algorithms are part of w3 specifications, that one (HSL&gt;RGB to be
&gt; strict) is defined here: http://www.w3.org/TR/css3-color/#hsl-color

&gt; regards,
&gt; Peter

&gt; On Nov 19, 7:35 pm, darkflame &lt;darkfl ... @gmail.com&gt; wrote:

&gt; &gt; Anyone know a good way to do this?

&gt; &gt; I'd like to set a set of elements to be coloured based on values.
&gt; &gt; Using;

&gt; &gt; DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&gt; &gt; &quot;backgroundColor&quot;, &quot;#FF0000&quot;);

&gt; &gt; I can set the element ok, I'm just looking for a good way to generate
&gt; &gt; that code at the end.
&gt; &gt; I know theres color-handeling stuff for java, but I'm not sure how to
&gt; &gt; get them to work with the GWT/eclipse, or if its better just to do it
&gt; &gt; with a bit of maths in this case.

&gt; &gt; Any pointers would be helpfull.

&gt; &gt; Cheers,
&gt; &gt; Darkflame
">
</POST>
<POST>
<POSTER> darkflame &lt;darkfl...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-11-20T05:54:00 </POSTDATE>
Hmz..
I seemed to understand those specs, but I'm not sure how to intergrate
it into my code.

Do I just put something like

DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&quot;backgroundColor&quot;, &quot;{ color: hsl(0, 100%, 50%) }&quot;);

or

DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&quot;backgroundColor&quot;, &quot;hsl(0, 100%, 50%)&quot;);

?
Neither of these works, but maybe thats because the browser dosnt
support HSL yet? (I notice even Opera has only just started supporting
HSL colors).

On Nov 20, 2:30 am, Peter Blazejewicz &lt;peter.blazejew ... @gmail.com&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; hi,
&gt; such algorithms are part of w3 specifications, that one (HSL&gt;RGB to be
&gt; strict) is defined here: http://www.w3.org/TR/css3-color/#hsl-color

&gt; regards,
&gt; Peter

&gt; On Nov 19, 7:35 pm, darkflame &lt;darkfl ... @gmail.com&gt; wrote:

&gt; &gt; Anyone know a good way to do this?

&gt; &gt; I'd like to set a set of elements to be coloured based on values.
&gt; &gt; Using;

&gt; &gt; DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&gt; &gt; &quot;backgroundColor&quot;, &quot;#FF0000&quot;);

&gt; &gt; I can set the element ok, I'm just looking for a good way to generate
&gt; &gt; that code at the end.
&gt; &gt; I know theres color-handeling stuff for java, but I'm not sure how to
&gt; &gt; get them to work with the GWT/eclipse, or if its better just to do it
&gt; &gt; with a bit of maths in this case.

&gt; &gt; Any pointers would be helpfull.

&gt; &gt; Cheers,
&gt; &gt; Darkflame
">
</POST>
<POST>
<POSTER> darkflame &lt;darkfl...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-11-20T11:14:00 </POSTDATE>
Ok, I solved this by converting a function I found here to java;

http://discussion.forum.nokia.com/forum/showthread.php?t=78382

My function is;
==========================
public static class color_tripple {
int v1;
int v2;
int vH;

public color_tripple(int a, int b, int c) {
v1 = a;
v2 = b;
vH = c;

}
}

public static color_tripple HSL_2_RGB(float H,float S, float L) {
// hues values should be between 0 and 1
H = H/100;
S = S/100;
L = L/100;
System.out.println(&quot;sat is&quot;+S);
System.out.println(&quot;hue is&quot;+H);

color_tripple RGB_data = new color_tripple(50, 50, 50);
float R = 0, G = 0, B = 0;
float var_2 = 0;

if (S == 0) {
R = L * 255;
G = L * 255;
B = L * 255;
} else {
if (L &lt; 0.5) {
var_2 = L * (1 + S);
//System.out.println(&quot;L less then 0.5 &quot;+var_2);

} else {
var_2 = (L + S) - (S * L);
//System.out.println(&quot;L more= then 0.5 &quot;+var_2);
}
float var_1 = 2 * L - var_2;

System.out.println(&quot;red H= &quot;+(H+(0.33333)));

R = Math.round(255 * Hue_2_RGB(var_1, var_2, (H + (0.333333))));

G = Math.round(255 * Hue_2_RGB(var_1, var_2, H));
//System.out.println(&quot;H= &quot;+(H));

B = Math.round(255 * Hue_2_RGB(var_1, var_2, (H - (0.333333))));

}

RGB_data.v1 = Math.round(Math.round(R));
RGB_data.v2 = Math.round(Math.round(G));
RGB_data.vH = Math.round(Math.round(B));
return RGB_data;
}

public static double Hue_2_RGB(double v1, double v2, double vH) {
System.out.println(&quot;vH= &quot;+vH);
if (vH &lt; 0) {
vH += 1;
}
if (vH &gt; 1) {
vH -= 1;
}
if ((6 * vH) &lt; 1) {
System.out.println(&quot;blah-&quot;+(v1 + (v2 - v1) * 6 * vH));
return (v1 + (v2 - v1) * 6 * vH);
}
if ((2 * vH) &lt; 1) {
return v2;
}
if ((3 * vH) &lt; 2) {
System.out.println(&quot;2 /3 = &quot;+(2 / (double)3));
return (v1 + (v2 - v1) * ((2 / (double)3) - vH) * 6);
}
return v1;

}
==========================

I then simply call the function with;

color_tripple RGB_data= new color_tripple(0,0,0);
RGB_data =Rateoholic_Usefull_Functions.HSL_2_RGB(85,100,50);

And its all stored in the RGB_data varible.

I dought this is the best way of doing it, but it seems to get get the
job done.

On Nov 20, 10:54 am, darkflame &lt;darkfl ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hmz..
&gt; I seemed to understand those specs, but I'm not sure how to intergrate
&gt; it into my code.

&gt; Do I just put something like

&gt; DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&gt; &quot;backgroundColor&quot;, &quot;{ color: hsl(0, 100%, 50%) }&quot;);

&gt; or

&gt; DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&gt; &quot;backgroundColor&quot;, &quot;hsl(0, 100%, 50%)&quot;);

&gt; ?
&gt; Neither of these works, but maybe thats because the browser dosnt
&gt; support HSL yet? (I notice even Opera has only just started supporting
&gt; HSL colors).

&gt; On Nov 20, 2:30 am, Peter Blazejewicz &lt;peter.blazejew ... @gmail.com&gt;
&gt; wrote:

&gt; &gt; hi,
&gt; &gt; such algorithms are part of w3 specifications, that one (HSL&gt;RGB to be
&gt; &gt; strict) is defined here: http://www.w3.org/TR/css3-color/#hsl-color

&gt; &gt; regards,
&gt; &gt; Peter

&gt; &gt; On Nov 19, 7:35 pm, darkflame &lt;darkfl ... @gmail.com&gt; wrote:

&gt; &gt; &gt; Anyone know a good way to do this?

&gt; &gt; &gt; I'd like to set a set of elements to be coloured based on values.
&gt; &gt; &gt; Using;

&gt; &gt; &gt; DOM.setStyleAttribute(ResultRateingHolder.getElement(),
&gt; &gt; &gt; &quot;backgroundColor&quot;, &quot;#FF0000&quot;);

&gt; &gt; &gt; I can set the element ok, I'm just looking for a good way to generate
&gt; &gt; &gt; that code at the end.
&gt; &gt; &gt; I know theres color-handeling stuff for java, but I'm not sure how to
&gt; &gt; &gt; get them to work with the GWT/eclipse, or if its better just to do it
&gt; &gt; &gt; with a bit of maths in this case.

&gt; &gt; &gt; Any pointers would be helpfull.

&gt; &gt; &gt; Cheers,
&gt; &gt; &gt; Darkflame
">
</POST>
</TEXT>
</BODY>
</DOC>
