<DOC>
<DOCID> eng-NG-31-135613-9764566 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2008-01-06T19:24:00 </DATETIME>
<BODY>
<HEADLINE>
should DateFormat() be depricated (in favour of LSDateFormat())?
</HEADLINE>
<TEXT>
<POST>
<POSTER> &quot;Barry Beattie&quot; &lt;barry.beat...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-06T19:24:00 </POSTDATE>
I've been fighting an application (since 7:00am this morning) and it
turns out that is has a generous use of DateFormat() within it.

I'm quietly confident that replacing them with LSDateFormat() will
start it making sense again.

but the trouble there is how to add it into the app - pick up the
locale in the setup ini file and if en_US then use dateFormat else use
LSDateFormat?

or just use LSDateFormat (relying on CF to get it right everywhere)
and in the ini setup file, set the date display mask?

and if the latter, is there a usecase for DateFormat() at all?

I suppose I should ask this on a U.S list... I'm sure they're aware if
LSDateFormat doesn't work for them just as we're acutely aware that
DateFormat doesn't play nicely in out region.

thoughts? comments? experiences?

thanx
barry.b
</POST>
<POST>
<POSTER> Andrew Scott &lt;andrew.sc...@aegeon.com.au&gt; </POSTER>
<POSTDATE> 2008-01-06T19:29:00 </POSTDATE>
Very good question,

LS, or location / region settings was an added hack to get localisation
working. My view is that it is about time that this was all brought internal
to Coldfusion, so that we as developers make one setting either in the OS,
or Admin of CF and forget about it.

However it is there for backwards compatability. But if it wasn't a hack in
the first place, I do not think we would fall into this trap...

And yes I still fall into this trap, even though I should know better.

As for LSDateFormat working in the USA, it does as long as setLocale() is
set to that region.

Andrew Scott
Senior Coldfusion Developer
Aegeon Pty. Ltd.
www.aegeon.com.au
Phone: +613  9015 8628
Mobile: 0404 998 273

<QUOTE PREVIOUSPOST="
-----Original Message-----
From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On Behalf

Of Barry Beattie
Sent: Monday, 7 January 2008 11:24 AM
To: cfaussie@googlegroups.com
Subject: [cfaussie] should DateFormat() be depricated (in favour of
LSDateFormat())?

I've been fighting an application (since 7:00am this morning) and it
turns out that is has a generous use of DateFormat() within it.

I'm quietly confident that replacing them with LSDateFormat() will
start it making sense again.

but the trouble there is how to add it into the app - pick up the
locale in the setup ini file and if en_US then use dateFormat else use
LSDateFormat?

or just use LSDateFormat (relying on CF to get it right everywhere)
and in the ini setup file, set the date display mask?

and if the latter, is there a usecase for DateFormat() at all?

I suppose I should ask this on a U.S list... I'm sure they're aware if
LSDateFormat doesn't work for them just as we're acutely aware that
DateFormat doesn't play nicely in out region.

thoughts? comments? experiences?

thanx
barry.b
">
</POST>
<POST>
<POSTER> Haikal Saadh &lt;haikal.sa...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-06T19:42:00 </POSTDATE>
Retrofitting DataFormat to do what LSDateFormat does breaks
principle-of-least-surprise; Probably won't be too long before an angry
mob gathers.

That said, deprecating DateFormat sounds like a good idea, if for no
other reason but the fact that it makes your app easier to localise.

<QUOTE PREVIOUSPOST="
Andrew Scott wrote:
&gt; Very good question,

&gt; LS, or location / region settings was an added hack to get localisation
&gt; working. My view is that it is about time that this was all brought internal
&gt; to Coldfusion, so that we as developers make one setting either in the OS,
&gt; or Admin of CF and forget about it.

&gt; However it is there for backwards compatability. But if it wasn't a hack in
&gt; the first place, I do not think we would fall into this trap...

&gt; And yes I still fall into this trap, even though I should know better.

&gt; As for LSDateFormat working in the USA, it does as long as setLocale() is
&gt; set to that region.

&gt; Andrew Scott
&gt; Senior Coldfusion Developer
&gt; Aegeon Pty. Ltd.
&gt; www.aegeon.com.au
&gt; Phone: +613  9015 8628
&gt; Mobile: 0404 998 273

&gt; -----Original Message-----
&gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On Behalf
&gt; Of Barry Beattie
&gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; To: cfaussie@googlegroups.com
&gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; LSDateFormat())?

&gt; I've been fighting an application (since 7:00am this morning) and it
&gt; turns out that is has a generous use of DateFormat() within it.

&gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; start it making sense again.

&gt; but the trouble there is how to add it into the app - pick up the
&gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt; LSDateFormat?

&gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; and in the ini setup file, set the date display mask?

&gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; DateFormat doesn't play nicely in out region.

&gt; thoughts? comments? experiences?

&gt; thanx
&gt; barry.b
">
</POST>
<POST>
<POSTER> MrBuzzy &lt;mrbu...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-06T22:32:00 </POSTDATE>
Hi y'all, I'm not completely sure that this is a problem that needs to get
fixed... maybe I'm missing something...? Barry I'm definitely feeling your
pain on this one ;)

Dateformat will format dates in US format regardless of the
set/selected/configured/OS/JVM locale.

LSDateFormat will format (and parse) using the specified locale.

Both will allow you to mask the output format in the same way, ie &quot;dd mm
yyyy&quot; or  &quot;mm dd yyyy&quot;

IMO the difference (and cause of confusion in non US places) is two fold;
1. Often a non-US application could be hosted in the US or the server has
the locale set to US when it shouldn't be. Some won't be aware of it - hence
the &quot;LS&quot; parsing will be US anyhow.
2. DateFormat will parse strings to dates (as will DateParse). BUT when
doing so it's too smart (or dumb) ... Dateformat will accept an input string
like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
correctly it because there is no ambiguity - IMO this scenarios should throw
an error instead, it would help avoid problems.

I don't think it can be deprecated. How would you then parse a US date
string to a date object without setting your local to US?
Perhaps another parse/format function that can be used by explicitly
specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
yy&quot;,&quot;dd mm yy&quot;).

Barry, am I right to assume your problem was with dates as strings?

Cheers.

btw... I really am in a different world today - kicking back in Adelaide
with a beach view niiiiice ;)

On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt; mob gathers.

&gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt; other reason but the fact that it makes your app easier to localise.

&gt; Andrew Scott wrote:
&gt; &gt; Very good question,

&gt; &gt; LS, or location / region settings was an added hack to get localisation
&gt; &gt; working. My view is that it is about time that this was all brought
&gt; internal
&gt; &gt; to Coldfusion, so that we as developers make one setting either in the
&gt; OS,
&gt; &gt; or Admin of CF and forget about it.

&gt; &gt; However it is there for backwards compatability. But if it wasn't a hack
&gt; in
&gt; &gt; the first place, I do not think we would fall into this trap...

&gt; &gt; And yes I still fall into this trap, even though I should know better.

&gt; &gt; As for LSDateFormat working in the USA, it does as long as setLocale()
&gt; is
&gt; &gt; set to that region.

&gt; &gt; Andrew Scott
&gt; &gt; Senior Coldfusion Developer
&gt; &gt; Aegeon Pty. Ltd.
&gt; &gt; www.aegeon.com.au
&gt; &gt; Phone: +613  9015 8628
&gt; &gt; Mobile: 0404 998 273

&gt; &gt; -----Original Message-----
&gt; &gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On
&gt; Behalf
&gt; &gt; Of Barry Beattie
&gt; &gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; &gt; To: cfaussie@googlegroups.com
&gt; &gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; &gt; LSDateFormat())?

&gt; &gt; I've been fighting an application (since 7:00am this morning) and it
&gt; &gt; turns out that is has a generous use of DateFormat() within it.

&gt; &gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; &gt; start it making sense again.

&gt; &gt; but the trouble there is how to add it into the app - pick up the
&gt; &gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt; &gt; LSDateFormat?

&gt; &gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; &gt; and in the ini setup file, set the date display mask?

&gt; &gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; &gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt; &gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; &gt; DateFormat doesn't play nicely in out region.

&gt; &gt; thoughts? comments? experiences?

&gt; &gt; thanx
&gt; &gt; barry.b
">
</POST>
<POST>
<POSTER> &quot;AJ Mercer&quot; &lt;ajmer...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-06T23:01:00 </POSTDATE>
you can override the OS settings with
SetLocale(new_locale)

eg, for Australia
SetLocale(&quot;English (Australian)&quot;)

On Jan 7, 2008 12:32 PM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hi y'all, I'm not completely sure that this is a problem that needs to get
&gt; fixed... maybe I'm missing something...? Barry I'm definitely feeling your
&gt; pain on this one ;)

&gt; Dateformat will format dates in US format regardless of the
&gt; set/selected/configured/OS/JVM locale.

&gt; LSDateFormat will format (and parse) using the specified locale.

&gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt; IMO the difference (and cause of confusion in non US places) is two fold;
&gt;   1. Often a non-US application could be hosted in the US or the server
&gt; has the locale set to US when it shouldn't be. Some won't be aware of it -
&gt; hence the &quot;LS&quot; parsing will be US anyhow.
&gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT when
&gt; doing so it's too smart (or dumb) ... Dateformat will accept an input string
&gt; like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt; correctly it because there is no ambiguity - IMO this scenarios should throw
&gt; an error instead, it would help avoid problems.

&gt; I don't think it can be deprecated. How would you then parse a US date
&gt; string to a date object without setting your local to US?
&gt; Perhaps another parse/format function that can be used by explicitly
&gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt; yy&quot;,&quot;dd mm yy&quot;).

&gt; Barry, am I right to assume your problem was with dates as strings?

&gt; Cheers.

&gt; btw... I really am in a different world today - kicking back in Adelaide
&gt; with a beach view niiiiice ;)

&gt; On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt; &gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt; &gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt; &gt; mob gathers.

&gt; &gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt; &gt; other reason but the fact that it makes your app easier to localise.

&gt; &gt; Andrew Scott wrote:
&gt; &gt; &gt; Very good question,

&gt; &gt; &gt; LS, or location / region settings was an added hack to get
&gt; &gt; localisation
&gt; &gt; &gt; working. My view is that it is about time that this was all brought
&gt; &gt; internal
&gt; &gt; &gt; to Coldfusion, so that we as developers make one setting either in the
&gt; &gt; OS,
&gt; &gt; &gt; or Admin of CF and forget about it.

&gt; &gt; &gt; However it is there for backwards compatability. But if it wasn't a
&gt; &gt; hack in
&gt; &gt; &gt; the first place, I do not think we would fall into this trap...

&gt; &gt; &gt; And yes I still fall into this trap, even though I should know better.

&gt; &gt; &gt; As for LSDateFormat working in the USA, it does as long as setLocale()
&gt; &gt; is
&gt; &gt; &gt; set to that region.

&gt; &gt; &gt; Andrew Scott
&gt; &gt; &gt; Senior Coldfusion Developer
&gt; &gt; &gt; Aegeon Pty. Ltd.
&gt; &gt; &gt; www.aegeon.com.au
&gt; &gt; &gt; Phone: +613  9015 8628
&gt; &gt; &gt; Mobile: 0404 998 273

&gt; &gt; &gt; -----Original Message-----
&gt; &gt; &gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On
&gt; &gt; Behalf
&gt; &gt; &gt; Of Barry Beattie
&gt; &gt; &gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; &gt; &gt; To: cfaussie@googlegroups.com
&gt; &gt; &gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; &gt; &gt; LSDateFormat())?

&gt; &gt; &gt; I've been fighting an application (since 7:00am this morning) and it
&gt; &gt; &gt; turns out that is has a generous use of DateFormat() within it.

&gt; &gt; &gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; &gt; &gt; start it making sense again.

&gt; &gt; &gt; but the trouble there is how to add it into the app - pick up the
&gt; &gt; &gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt; &gt; &gt; LSDateFormat?

&gt; &gt; &gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; &gt; &gt; and in the ini setup file, set the date display mask?

&gt; &gt; &gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; &gt; &gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt; &gt; &gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; &gt; &gt; DateFormat doesn't play nicely in out region.

&gt; &gt; &gt; thoughts? comments? experiences?

&gt; &gt; &gt; thanx
&gt; &gt; &gt; barry.b
">

--

AJ Mercer
Web Log: http://webonix.net
</POST>
<POST>
<POSTER> &quot;Zac Spitzer&quot; &lt;zac.spit...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-06T23:35:00 </POSTDATE>
one thing to keep in mind is that dateformat has an always predictable
result (regardless of the locale),
where as LsDateFormat is not predictable due to it's dependancy on the
locale....

Therefore it makes sense to have two functions and CF is always backwards
compatible, hence no deprectation

z

On Jan 7, 2008 3:01 PM, AJ Mercer &lt;ajmer ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; you can override the OS settings with
&gt;     SetLocale(new_locale)

&gt; eg, for Australia
&gt; SetLocale(&quot;English (Australian)&quot;)

&gt; On Jan 7, 2008 12:32 PM, MrBuzzy &lt; mrbu ... @gmail.com&gt; wrote:

&gt; &gt; Hi y'all, I'm not completely sure that this is a problem that needs to
&gt; &gt; get fixed... maybe I'm missing something...? Barry I'm definitely feeling
&gt; &gt; your pain on this one ;)

&gt; &gt; Dateformat will format dates in US format regardless of the
&gt; &gt; set/selected/configured/OS/JVM locale.

&gt; &gt; LSDateFormat will format (and parse) using the specified locale.

&gt; &gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt; &gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt; &gt; IMO the difference (and cause of confusion in non US places) is two
&gt; &gt; fold;
&gt; &gt;   1. Often a non-US application could be hosted in the US or the server
&gt; &gt; has the locale set to US when it shouldn't be. Some won't be aware of it -
&gt; &gt; hence the &quot;LS&quot; parsing will be US anyhow.
&gt; &gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT
&gt; &gt; when doing so it's too smart (or dumb) ... Dateformat will accept an input
&gt; &gt; string like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt; &gt; correctly it because there is no ambiguity - IMO this scenarios should throw
&gt; &gt; an error instead, it would help avoid problems.

&gt; &gt; I don't think it can be deprecated. How would you then parse a US date
&gt; &gt; string to a date object without setting your local to US?
&gt; &gt; Perhaps another parse/format function that can be used by explicitly
&gt; &gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt; &gt; yy&quot;,&quot;dd mm yy&quot;).

&gt; &gt; Barry, am I right to assume your problem was with dates as strings?

&gt; &gt; Cheers.

&gt; &gt; btw... I really am in a different world today - kicking back in Adelaide
&gt; &gt; with a beach view niiiiice ;)

&gt; &gt; On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt; &gt; &gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt; &gt; &gt; principle-of-least-surprise; Probably won't be too long before an
&gt; &gt; &gt; angry
&gt; &gt; &gt; mob gathers.

&gt; &gt; &gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt; &gt; &gt; other reason but the fact that it makes your app easier to localise.

&gt; &gt; &gt; Andrew Scott wrote:
&gt; &gt; &gt; &gt; Very good question,

&gt; &gt; &gt; &gt; LS, or location / region settings was an added hack to get
&gt; &gt; &gt; localisation
&gt; &gt; &gt; &gt; working. My view is that it is about time that this was all brought
&gt; &gt; &gt; internal
&gt; &gt; &gt; &gt; to Coldfusion, so that we as developers make one setting either in
&gt; &gt; &gt; the OS,
&gt; &gt; &gt; &gt; or Admin of CF and forget about it.

&gt; &gt; &gt; &gt; However it is there for backwards compatability. But if it wasn't a
&gt; &gt; &gt; hack in
&gt; &gt; &gt; &gt; the first place, I do not think we would fall into this trap...

&gt; &gt; &gt; &gt; And yes I still fall into this trap, even though I should know
&gt; &gt; &gt; better.

&gt; &gt; &gt; &gt; As for LSDateFormat working in the USA, it does as long as
&gt; &gt; &gt; setLocale() is
&gt; &gt; &gt; &gt; set to that region.

&gt; &gt; &gt; &gt; Andrew Scott
&gt; &gt; &gt; &gt; Senior Coldfusion Developer
&gt; &gt; &gt; &gt; Aegeon Pty. Ltd.
&gt; &gt; &gt; &gt; www.aegeon.com.au
&gt; &gt; &gt; &gt; Phone: +613  9015 8628
&gt; &gt; &gt; &gt; Mobile: 0404 998 273

&gt; &gt; &gt; &gt; -----Original Message-----
&gt; &gt; &gt; &gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com]
&gt; &gt; &gt; On Behalf
&gt; &gt; &gt; &gt; Of Barry Beattie
&gt; &gt; &gt; &gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; &gt; &gt; &gt; To: cfaussie@googlegroups.com
&gt; &gt; &gt; &gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; &gt; &gt; &gt; LSDateFormat())?

&gt; &gt; &gt; &gt; I've been fighting an application (since 7:00am this morning) and it

&gt; &gt; &gt; &gt; turns out that is has a generous use of DateFormat() within it.

&gt; &gt; &gt; &gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; &gt; &gt; &gt; start it making sense again.

&gt; &gt; &gt; &gt; but the trouble there is how to add it into the app - pick up the
&gt; &gt; &gt; &gt; locale in the setup ini file and if en_US then use dateFormat else
&gt; &gt; &gt; use
&gt; &gt; &gt; &gt; LSDateFormat?

&gt; &gt; &gt; &gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; &gt; &gt; &gt; and in the ini setup file, set the date display mask?

&gt; &gt; &gt; &gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; &gt; &gt; &gt; I suppose I should ask this on a U.S list... I'm sure they're aware
&gt; &gt; &gt; if
&gt; &gt; &gt; &gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; &gt; &gt; &gt; DateFormat doesn't play nicely in out region.

&gt; &gt; &gt; &gt; thoughts? comments? experiences?

&gt; &gt; &gt; &gt; thanx
&gt; &gt; &gt; &gt; barry.b

&gt; --

&gt; AJ Mercer
&gt; Web Log: http://webonix.net
">

--
Zac Spitzer -
http://zacster.blogspot.com (My Blog)
+61 405 847 168
</POST>
<POST>
<POSTER> &quot;Barry Beattie&quot; &lt;barry.beat...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T00:07:00 </POSTDATE>
&quot;how would you then parse a US date string to a date object without
setting your local to US?&quot;

hang on... what's wrong with U.S people setting their systems to a U.S
locale and using the LS functions? We have to (should) set our systems
to en_AU. Wot, some locales are more equal than others? (and if the
server is wrong, then re-ssetting the locale as Andrew suggests is the
fix, not an if DateFormat else LSDateFormat)

&quot;where as LsDateFormat is not predictable due to it's dependancy on
the locale....&quot;

IMHO, that's not a problem. Set your locale up correctly and you
should get just the results you want. The app's moving to a different
locale? change that, not the code/conversions/hacks.

2008-01-04 16:18:00.000 is the 1st of April with DateFormat or
(correctly) 4th of Jan with LSDateFormat... the core data (in the
database) is agnostic - just the way it should be. your application
formats it &quot;just so&quot;, depending on what you set-up for your region (a
la workstation operating systems and MSWord, etc).

If all the LS functions work perfectly well after setting the locale -
no matter what locale it is - then why have the older versions at all?
It's a shame when i18n becomes an afterthought and you get burnt by
needing to retrofit it.

if what people are saying is that LSDateFormat is broken in &quot;en_US&quot;
locales then that's what needs to be said. A generic fix in the hand
is worth more than two hacks in the bush.

eh my 2c
barry.b

On Jan 7, 2008 1:32 PM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Hi y'all, I'm not completely sure that this is a problem that needs to get
&gt; fixed... maybe I'm missing something...? Barry I'm definitely feeling your
&gt; pain on this one ;)

&gt; Dateformat will format dates in US format regardless of the
&gt; set/selected/configured/OS/JVM locale.

&gt; LSDateFormat will format (and parse) using the specified locale.

&gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt; IMO the difference (and cause of confusion in non US places) is two fold;
&gt;   1. Often a non-US application could be hosted in the US or the server has
&gt; the locale set to US when it shouldn't be. Some won't be aware of it - hence
&gt; the &quot;LS&quot; parsing will be US anyhow.
&gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT when
&gt; doing so it's too smart (or dumb) ... Dateformat will accept an input string
&gt; like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt; correctly it because there is no ambiguity - IMO this scenarios should throw
&gt; an error instead, it would help avoid problems.

&gt; I don't think it can be deprecated. How would you then parse a US date
&gt; string to a date object without setting your local to US?
&gt; Perhaps another parse/format function that can be used by explicitly
&gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt; yy&quot;,&quot;dd mm yy&quot;).

&gt; Barry, am I right to assume your problem was with dates as strings?

&gt; Cheers.

&gt; btw... I really am in a different world today - kicking back in Adelaide
&gt; with a beach view niiiiice ;)

&gt;  On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt; &gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt; &gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt; &gt; mob gathers.

&gt; &gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt; &gt; other reason but the fact that it makes your app easier to localise.

&gt; &gt; Andrew Scott wrote:
&gt; &gt; &gt; Very good question,

&gt; &gt; &gt; LS, or location / region settings was an added hack to get localisation
&gt; &gt; &gt; working. My view is that it is about time that this was all brought
&gt; internal
&gt; &gt; &gt; to Coldfusion, so that we as developers make one setting either in the
&gt; OS,
&gt; &gt; &gt; or Admin of CF and forget about it.

&gt; &gt; &gt; However it is there for backwards compatability. But if it wasn't a hack
&gt; in
&gt; &gt; &gt; the first place, I do not think we would fall into this trap...

&gt; &gt; &gt; And yes I still fall into this trap, even though I should know better.

&gt; &gt; &gt; As for LSDateFormat working in the USA, it does as long as setLocale()
&gt; is
&gt; &gt; &gt; set to that region.

&gt; &gt; &gt; Andrew Scott
&gt; &gt; &gt; Senior Coldfusion Developer
&gt; &gt; &gt; Aegeon Pty. Ltd.
&gt; &gt; &gt; www.aegeon.com.au
&gt; &gt; &gt; Phone: +613  9015 8628
&gt; &gt; &gt; Mobile: 0404 998 273

&gt; &gt; &gt; -----Original Message-----
&gt; &gt; &gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On
&gt; Behalf
&gt; &gt; &gt; Of Barry Beattie
&gt; &gt; &gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; &gt; &gt; To: cfaussie@googlegroups.com
&gt; &gt; &gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; &gt; &gt; LSDateFormat())?

&gt; &gt; &gt; I've been fighting an application (since 7:00am this morning) and it
&gt; &gt; &gt; turns out that is has a generous use of DateFormat() within it.

&gt; &gt; &gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; &gt; &gt; start it making sense again.

&gt; &gt; &gt; but the trouble there is how to add it into the app - pick up the
&gt; &gt; &gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt; &gt; &gt; LSDateFormat?

&gt; &gt; &gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; &gt; &gt; and in the ini setup file, set the date display mask?

&gt; &gt; &gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; &gt; &gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt; &gt; &gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; &gt; &gt; DateFormat doesn't play nicely in out region.

&gt; &gt; &gt; thoughts? comments? experiences?

&gt; &gt; &gt; thanx
&gt; &gt; &gt; barry.b
">
</POST>
<POST>
<POSTER> Sean Bucklar &lt;sbuck...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T00:14:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; hang on... what's wrong with U.S people setting their systems to a U.S
&gt; locale and using the LS functions? We have to (should) set our systems
&gt; to en_AU. Wot, some locales are more equal than others?
">

I wonder what % of people buying CF are in the US?

I know it's less the case then say a few years ago - but I was once told
by a software vendor that
'catering for foriegn date formats isn't worth the effort' and that I
should 'suck it up and just use
US date formatting'. I would note that the vendor has since been bought
out by microsoft after
having been a leader in their field for years while refusing to support
alternate date formats.

My experience has almost universally been that developer tools were
developed first and foremost
for the US market and internationalization was always an afterthought
hacked together at the last
minute. Or that some locates are absolutely more equal than others in
development practice if not
in the PR material.

<QUOTE PREVIOUSPOST="
&gt; (and if the
&gt; server is wrong, then re-ssetting the locale as Andrew suggests is the
&gt; fix, not an if DateFormat else LSDateFormat)

&gt; &quot;where as LsDateFormat is not predictable due to it's dependancy on
&gt; the locale....&quot;

&gt; IMHO, that's not a problem. Set your locale up correctly and you
&gt; should get just the results you want. The app's moving to a different
&gt; locale? change that, not the code/conversions/hacks.

&gt; 2008-01-04 16:18:00.000 is the 1st of April with DateFormat or
&gt; (correctly) 4th of Jan with LSDateFormat... the core data (in the
&gt; database) is agnostic - just the way it should be. your application
&gt; formats it &quot;just so&quot;, depending on what you set-up for your region (a
&gt; la workstation operating systems and MSWord, etc).

&gt; If all the LS functions work perfectly well after setting the locale -
&gt; no matter what locale it is - then why have the older versions at all?
&gt; It's a shame when i18n becomes an afterthought and you get burnt by
&gt; needing to retrofit it.

&gt; if what people are saying is that LSDateFormat is broken in &quot;en_US&quot;
&gt; locales then that's what needs to be said. A generic fix in the hand
&gt; is worth more than two hacks in the bush.

&gt; eh my 2c
&gt; barry.b

&gt; On Jan 7, 2008 1:32 PM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

&gt;&gt; Hi y'all, I'm not completely sure that this is a problem that needs to get
&gt;&gt; fixed... maybe I'm missing something...? Barry I'm definitely feeling your
&gt;&gt; pain on this one ;)

&gt;&gt; Dateformat will format dates in US format regardless of the
&gt;&gt; set/selected/configured/OS/JVM locale.

&gt;&gt; LSDateFormat will format (and parse) using the specified locale.

&gt;&gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt;&gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt;&gt; IMO the difference (and cause of confusion in non US places) is two fold;
&gt;&gt;   1. Often a non-US application could be hosted in the US or the server has
&gt;&gt; the locale set to US when it shouldn't be. Some won't be aware of it - hence
&gt;&gt; the &quot;LS&quot; parsing will be US anyhow.
&gt;&gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT when
&gt;&gt; doing so it's too smart (or dumb) ... Dateformat will accept an input string
&gt;&gt; like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt;&gt; correctly it because there is no ambiguity - IMO this scenarios should throw
&gt;&gt; an error instead, it would help avoid problems.

&gt;&gt; I don't think it can be deprecated. How would you then parse a US date
&gt;&gt; string to a date object without setting your local to US?
&gt;&gt; Perhaps another parse/format function that can be used by explicitly
&gt;&gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt;&gt; yy&quot;,&quot;dd mm yy&quot;).

&gt;&gt; Barry, am I right to assume your problem was with dates as strings?

&gt;&gt; Cheers.

&gt;&gt; btw... I really am in a different world today - kicking back in Adelaide
&gt;&gt; with a beach view niiiiice ;)

&gt;&gt;  On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt;&gt;&gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt;&gt;&gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt;&gt;&gt; mob gathers.

&gt;&gt;&gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt;&gt;&gt; other reason but the fact that it makes your app easier to localise.

&gt;&gt;&gt; Andrew Scott wrote:

&gt;&gt;&gt;&gt; Very good question,

&gt;&gt;&gt;&gt; LS, or location / region settings was an added hack to get localisation
&gt;&gt;&gt;&gt; working. My view is that it is about time that this was all brought

&gt;&gt; internal

&gt;&gt;&gt;&gt; to Coldfusion, so that we as developers make one setting either in the

&gt;&gt; OS,

&gt;&gt;&gt;&gt; or Admin of CF and forget about it.

&gt;&gt;&gt;&gt; However it is there for backwards compatability. But if it wasn't a hack

&gt;&gt; in

&gt;&gt;&gt;&gt; the first place, I do not think we would fall into this trap...

&gt;&gt;&gt;&gt; And yes I still fall into this trap, even though I should know better.

&gt;&gt;&gt;&gt; As for LSDateFormat working in the USA, it does as long as setLocale()

&gt;&gt; is

&gt;&gt;&gt;&gt; set to that region.

&gt;&gt;&gt;&gt; Andrew Scott
&gt;&gt;&gt;&gt; Senior Coldfusion Developer
&gt;&gt;&gt;&gt; Aegeon Pty. Ltd.
&gt;&gt;&gt;&gt; www.aegeon.com.au
&gt;&gt;&gt;&gt; Phone: +613  9015 8628
&gt;&gt;&gt;&gt; Mobile: 0404 998 273

&gt;&gt;&gt;&gt; -----Original Message-----
&gt;&gt;&gt;&gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On

&gt;&gt; Behalf

&gt;&gt;&gt;&gt; Of Barry Beattie
&gt;&gt;&gt;&gt; Sent: Monday, 7 January 2008 11:24 AM
&gt;&gt;&gt;&gt; To: cfaussie@googlegroups.com
&gt;&gt;&gt;&gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt;&gt;&gt;&gt; LSDateFormat())?

&gt;&gt;&gt;&gt; I've been fighting an application (since 7:00am this morning) and it
&gt;&gt;&gt;&gt; turns out that is has a generous use of DateFormat() within it.

&gt;&gt;&gt;&gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt;&gt;&gt;&gt; start it making sense again.

&gt;&gt;&gt;&gt; but the trouble there is how to add it into the app - pick up the
&gt;&gt;&gt;&gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt;&gt;&gt;&gt; LSDateFormat?

&gt;&gt;&gt;&gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt;&gt;&gt;&gt; and in the ini setup file, set the date display mask?

&gt;&gt;&gt;&gt; and if the latter, is there a usecase for DateFormat() at all?

&gt;&gt;&gt;&gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt;&gt;&gt;&gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt;&gt;&gt;&gt; DateFormat doesn't play nicely in out region.

&gt;&gt;&gt;&gt; thoughts? comments? experiences?

&gt;&gt;&gt;&gt; thanx
&gt;&gt;&gt;&gt; barry.b
">
</POST>
<POST>
<POSTER> MrBuzzy &lt;mrbu...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T00:17:00 </POSTDATE>
Sorry I'm not following.

Barry could you examplify your problem?

On 1/7/08, Barry Beattie &lt;barry.beat ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &quot;how would you then parse a US date string to a date object without
&gt; setting your local to US?&quot;

&gt; hang on... what's wrong with U.S people setting their systems to a U.S
&gt; locale and using the LS functions? We have to (should) set our systems
&gt; to en_AU. Wot, some locales are more equal than others? (and if the
&gt; server is wrong, then re-ssetting the locale as Andrew suggests is the
&gt; fix, not an if DateFormat else LSDateFormat)

&gt; &quot;where as LsDateFormat is not predictable due to it's dependancy on
&gt; the locale....&quot;

&gt; IMHO, that's not a problem. Set your locale up correctly and you
&gt; should get just the results you want. The app's moving to a different
&gt; locale? change that, not the code/conversions/hacks.

&gt; 2008-01-04 16:18:00.000 is the 1st of April with DateFormat or
&gt; (correctly) 4th of Jan with LSDateFormat... the core data (in the
&gt; database) is agnostic - just the way it should be. your application
&gt; formats it &quot;just so&quot;, depending on what you set-up for your region (a
&gt; la workstation operating systems and MSWord, etc).

&gt; If all the LS functions work perfectly well after setting the locale -
&gt; no matter what locale it is - then why have the older versions at all?
&gt; It's a shame when i18n becomes an afterthought and you get burnt by
&gt; needing to retrofit it.

&gt; if what people are saying is that LSDateFormat is broken in &quot;en_US&quot;
&gt; locales then that's what needs to be said. A generic fix in the hand
&gt; is worth more than two hacks in the bush.

&gt; eh my 2c
&gt; barry.b

&gt; On Jan 7, 2008 1:32 PM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:
&gt; &gt; Hi y'all, I'm not completely sure that this is a problem that needs to get
&gt; &gt; fixed... maybe I'm missing something...? Barry I'm definitely feeling your
&gt; &gt; pain on this one ;)

&gt; &gt; Dateformat will format dates in US format regardless of the
&gt; &gt; set/selected/configured/OS/JVM locale.

&gt; &gt; LSDateFormat will format (and parse) using the specified locale.

&gt; &gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt; &gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt; &gt; IMO the difference (and cause of confusion in non US places) is two fold;
&gt; &gt;   1. Often a non-US application could be hosted in the US or the server
&gt; has
&gt; &gt; the locale set to US when it shouldn't be. Some won't be aware of it -
&gt; hence
&gt; &gt; the &quot;LS&quot; parsing will be US anyhow.
&gt; &gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT when
&gt; &gt; doing so it's too smart (or dumb) ... Dateformat will accept an input
&gt; string
&gt; &gt; like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt; &gt; correctly it because there is no ambiguity - IMO this scenarios should
&gt; throw
&gt; &gt; an error instead, it would help avoid problems.

&gt; &gt; I don't think it can be deprecated. How would you then parse a US date
&gt; &gt; string to a date object without setting your local to US?
&gt; &gt; Perhaps another parse/format function that can be used by explicitly
&gt; &gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt; &gt; yy&quot;,&quot;dd mm yy&quot;).

&gt; &gt; Barry, am I right to assume your problem was with dates as strings?

&gt; &gt; Cheers.

&gt; &gt; btw... I really am in a different world today - kicking back in Adelaide
&gt; &gt; with a beach view niiiiice ;)

&gt; &gt;  On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt; &gt; &gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt; &gt; &gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt; &gt; &gt; mob gathers.

&gt; &gt; &gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt; &gt; &gt; other reason but the fact that it makes your app easier to localise.

&gt; &gt; &gt; Andrew Scott wrote:
&gt; &gt; &gt; &gt; Very good question,

&gt; &gt; &gt; &gt; LS, or location / region settings was an added hack to get
&gt; localisation
&gt; &gt; &gt; &gt; working. My view is that it is about time that this was all brought
&gt; &gt; internal
&gt; &gt; &gt; &gt; to Coldfusion, so that we as developers make one setting either in the
&gt; &gt; OS,
&gt; &gt; &gt; &gt; or Admin of CF and forget about it.

&gt; &gt; &gt; &gt; However it is there for backwards compatability. But if it wasn't a
&gt; hack
&gt; &gt; in
&gt; &gt; &gt; &gt; the first place, I do not think we would fall into this trap...

&gt; &gt; &gt; &gt; And yes I still fall into this trap, even though I should know better.

&gt; &gt; &gt; &gt; As for LSDateFormat working in the USA, it does as long as setLocale()
&gt; &gt; is
&gt; &gt; &gt; &gt; set to that region.

&gt; &gt; &gt; &gt; Andrew Scott
&gt; &gt; &gt; &gt; Senior Coldfusion Developer
&gt; &gt; &gt; &gt; Aegeon Pty. Ltd.
&gt; &gt; &gt; &gt; www.aegeon.com.au
&gt; &gt; &gt; &gt; Phone: +613  9015 8628
&gt; &gt; &gt; &gt; Mobile: 0404 998 273

&gt; &gt; &gt; &gt; -----Original Message-----
&gt; &gt; &gt; &gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On
&gt; &gt; Behalf
&gt; &gt; &gt; &gt; Of Barry Beattie
&gt; &gt; &gt; &gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; &gt; &gt; &gt; To: cfaussie@googlegroups.com
&gt; &gt; &gt; &gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; &gt; &gt; &gt; LSDateFormat())?

&gt; &gt; &gt; &gt; I've been fighting an application (since 7:00am this morning) and it
&gt; &gt; &gt; &gt; turns out that is has a generous use of DateFormat() within it.

&gt; &gt; &gt; &gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; &gt; &gt; &gt; start it making sense again.

&gt; &gt; &gt; &gt; but the trouble there is how to add it into the app - pick up the
&gt; &gt; &gt; &gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt; &gt; &gt; &gt; LSDateFormat?

&gt; &gt; &gt; &gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; &gt; &gt; &gt; and in the ini setup file, set the date display mask?

&gt; &gt; &gt; &gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; &gt; &gt; &gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt; &gt; &gt; &gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; &gt; &gt; &gt; DateFormat doesn't play nicely in out region.

&gt; &gt; &gt; &gt; thoughts? comments? experiences?

&gt; &gt; &gt; &gt; thanx
&gt; &gt; &gt; &gt; barry.b
">
</POST>
<POST>
<POSTER> Andrew Scott &lt;andrew.sc...@aegeon.com.au&gt; </POSTER>
<POSTDATE> 2008-01-07T00:17:00 </POSTDATE>
See below, but that is my point. The LS stuff is a fudge / hack and has
never been fully thought about, as I stated before, in my eyes localisation
should occur regardless of where the server is or not.

That is why DateFormat still exists, backwards compatability for older
coldfusion code.

Andrew Scott
Senior Coldfusion Developer
Aegeon Pty. Ltd.
www.aegeon.com.au
Phone: +613  9015 8628
Mobile: 0404 998 273

<QUOTE PREVIOUSPOST="
-----Original Message-----
From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On Behalf

Of Barry Beattie
Sent: Monday, 7 January 2008 4:08 PM
To: cfaussie@googlegroups.com
Subject: [cfaussie] Re: should DateFormat() be depricated (in favour of
LSDateFormat())?

&quot;how would you then parse a US date string to a date object without
setting your local to US?&quot;

hang on... what's wrong with U.S people setting their systems to a U.S
locale and using the LS functions? We have to (should) set our systems
to en_AU. Wot, some locales are more equal than others? (and if the
server is wrong, then re-ssetting the locale as Andrew suggests is the
fix, not an if DateFormat else LSDateFormat)
">
</POST>
<POST>
<POSTER> Haikal Saadh &lt;haikal.sa...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T00:44:00 </POSTDATE>
Articulated much better than I could have.

Having had worked with apps where it's been assumed a (string
representation) of a date is a certain format (in most cases, NOT in the
app's native locale) has been a problem for me in the past. (The
problems stemmed from misconfigured databases and servers but
never-you-mind. When people accept bad behaviour, it causes more
headaches further still).

(Before anyone says anything, people who store string representations of
dates should be drawn and quartered.)

Also, don't forget that allowing users to pick their own locale and
timezone is not only good practice, but practically expected in this day
and age...

<QUOTE PREVIOUSPOST="
Barry Beattie wrote:
&gt; &quot;how would you then parse a US date string to a date object without
&gt; setting your local to US?&quot;

&gt; hang on... what's wrong with U.S people setting their systems to a U.S
&gt; locale and using the LS functions? We have to (should) set our systems
&gt; to en_AU. Wot, some locales are more equal than others? (and if the
&gt; server is wrong, then re-ssetting the locale as Andrew suggests is the
&gt; fix, not an if DateFormat else LSDateFormat)

&gt; &quot;where as LsDateFormat is not predictable due to it's dependancy on
&gt; the locale....&quot;

&gt; IMHO, that's not a problem. Set your locale up correctly and you
&gt; should get just the results you want. The app's moving to a different
&gt; locale? change that, not the code/conversions/hacks.

&gt; 2008-01-04 16:18:00.000 is the 1st of April with DateFormat or
&gt; (correctly) 4th of Jan with LSDateFormat... the core data (in the
&gt; database) is agnostic - just the way it should be. your application
&gt; formats it &quot;just so&quot;, depending on what you set-up for your region (a
&gt; la workstation operating systems and MSWord, etc).

&gt; If all the LS functions work perfectly well after setting the locale -
&gt; no matter what locale it is - then why have the older versions at all?
&gt; It's a shame when i18n becomes an afterthought and you get burnt by
&gt; needing to retrofit it.

&gt; if what people are saying is that LSDateFormat is broken in &quot;en_US&quot;
&gt; locales then that's what needs to be said. A generic fix in the hand
&gt; is worth more than two hacks in the bush.

&gt; eh my 2c
&gt; barry.b

&gt; On Jan 7, 2008 1:32 PM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

&gt;&gt; Hi y'all, I'm not completely sure that this is a problem that needs to get
&gt;&gt; fixed... maybe I'm missing something...? Barry I'm definitely feeling your
&gt;&gt; pain on this one ;)

&gt;&gt; Dateformat will format dates in US format regardless of the
&gt;&gt; set/selected/configured/OS/JVM locale.

&gt;&gt; LSDateFormat will format (and parse) using the specified locale.

&gt;&gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt;&gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt;&gt; IMO the difference (and cause of confusion in non US places) is two fold;
&gt;&gt;   1. Often a non-US application could be hosted in the US or the server has
&gt;&gt; the locale set to US when it shouldn't be. Some won't be aware of it - hence
&gt;&gt; the &quot;LS&quot; parsing will be US anyhow.
&gt;&gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT when
&gt;&gt; doing so it's too smart (or dumb) ... Dateformat will accept an input string
&gt;&gt; like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt;&gt; correctly it because there is no ambiguity - IMO this scenarios should throw
&gt;&gt; an error instead, it would help avoid problems.

&gt;&gt; I don't think it can be deprecated. How would you then parse a US date
&gt;&gt; string to a date object without setting your local to US?
&gt;&gt; Perhaps another parse/format function that can be used by explicitly
&gt;&gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt;&gt; yy&quot;,&quot;dd mm yy&quot;).

&gt;&gt; Barry, am I right to assume your problem was with dates as strings?

&gt;&gt; Cheers.

&gt;&gt; btw... I really am in a different world today - kicking back in Adelaide
&gt;&gt; with a beach view niiiiice ;)

&gt;&gt;  On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt;&gt;&gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt;&gt;&gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt;&gt;&gt; mob gathers.

&gt;&gt;&gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt;&gt;&gt; other reason but the fact that it makes your app easier to localise.

&gt;&gt;&gt; Andrew Scott wrote:

&gt;&gt;&gt;&gt; Very good question,

&gt;&gt;&gt;&gt; LS, or location / region settings was an added hack to get localisation
&gt;&gt;&gt;&gt; working. My view is that it is about time that this was all brought

&gt;&gt; internal

&gt;&gt;&gt;&gt; to Coldfusion, so that we as developers make one setting either in the

&gt;&gt; OS,

&gt;&gt;&gt;&gt; or Admin of CF and forget about it.

&gt;&gt;&gt;&gt; However it is there for backwards compatability. But if it wasn't a hack

&gt;&gt; in

&gt;&gt;&gt;&gt; the first place, I do not think we would fall into this trap...

&gt;&gt;&gt;&gt; And yes I still fall into this trap, even though I should know better.

&gt;&gt;&gt;&gt; As for LSDateFormat working in the USA, it does as long as setLocale()

&gt;&gt; is

&gt;&gt;&gt;&gt; set to that region.

&gt;&gt;&gt;&gt; Andrew Scott
&gt;&gt;&gt;&gt; Senior Coldfusion Developer
&gt;&gt;&gt;&gt; Aegeon Pty. Ltd.
&gt;&gt;&gt;&gt; www.aegeon.com.au
&gt;&gt;&gt;&gt; Phone: +613  9015 8628
&gt;&gt;&gt;&gt; Mobile: 0404 998 273

&gt;&gt;&gt;&gt; -----Original Message-----
&gt;&gt;&gt;&gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On

&gt;&gt; Behalf

&gt;&gt;&gt;&gt; Of Barry Beattie
&gt;&gt;&gt;&gt; Sent: Monday, 7 January 2008 11:24 AM
&gt;&gt;&gt;&gt; To: cfaussie@googlegroups.com
&gt;&gt;&gt;&gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt;&gt;&gt;&gt; LSDateFormat())?

&gt;&gt;&gt;&gt; I've been fighting an application (since 7:00am this morning) and it
&gt;&gt;&gt;&gt; turns out that is has a generous use of DateFormat() within it.

&gt;&gt;&gt;&gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt;&gt;&gt;&gt; start it making sense again.

&gt;&gt;&gt;&gt; but the trouble there is how to add it into the app - pick up the
&gt;&gt;&gt;&gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt;&gt;&gt;&gt; LSDateFormat?

&gt;&gt;&gt;&gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt;&gt;&gt;&gt; and in the ini setup file, set the date display mask?

&gt;&gt;&gt;&gt; and if the latter, is there a usecase for DateFormat() at all?

&gt;&gt;&gt;&gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt;&gt;&gt;&gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt;&gt;&gt;&gt; DateFormat doesn't play nicely in out region.

&gt;&gt;&gt;&gt; thoughts? comments? experiences?

&gt;&gt;&gt;&gt; thanx
&gt;&gt;&gt;&gt; barry.b
">
</POST>
<POST>
<POSTER> MrBuzzy &lt;mrbu...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T01:07:00 </POSTDATE>
I'd really like to keep this going but I'm confused about who is
talking to who :(

@Andrew I don't agree it's a hack, I could accept that it's a necessary evil.

@hakal I totally agree that date strings are evil and probably at the
heart of the problems.

Someone mentioned using setlocale()... Feel free to correct me, but
isn't that a server wide function? Changing the locale this way
*could* cause problems to other apps. It'd be nice if it was an
application property instead.

On 1/7/08, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Articulated much better than I could have.

&gt; Having had worked with apps where it's been assumed a (string
&gt; representation) of a date is a certain format (in most cases, NOT in the
&gt; app's native locale) has been a problem for me in the past. (The
&gt; problems stemmed from misconfigured databases and servers but
&gt; never-you-mind. When people accept bad behaviour, it causes more
&gt; headaches further still).

&gt; (Before anyone says anything, people who store string representations of
&gt; dates should be drawn and quartered.)

&gt; Also, don't forget that allowing users to pick their own locale and
&gt; timezone is not only good practice, but practically expected in this day
&gt; and age...

&gt; Barry Beattie wrote:
&gt; &gt; &quot;how would you then parse a US date string to a date object without
&gt; &gt; setting your local to US?&quot;

&gt; &gt; hang on... what's wrong with U.S people setting their systems to a U.S
&gt; &gt; locale and using the LS functions? We have to (should) set our systems
&gt; &gt; to en_AU. Wot, some locales are more equal than others? (and if the
&gt; &gt; server is wrong, then re-ssetting the locale as Andrew suggests is the
&gt; &gt; fix, not an if DateFormat else LSDateFormat)

&gt; &gt; &quot;where as LsDateFormat is not predictable due to it's dependancy on
&gt; &gt; the locale....&quot;

&gt; &gt; IMHO, that's not a problem. Set your locale up correctly and you
&gt; &gt; should get just the results you want. The app's moving to a different
&gt; &gt; locale? change that, not the code/conversions/hacks.

&gt; &gt; 2008-01-04 16:18:00.000 is the 1st of April with DateFormat or
&gt; &gt; (correctly) 4th of Jan with LSDateFormat... the core data (in the
&gt; &gt; database) is agnostic - just the way it should be. your application
&gt; &gt; formats it &quot;just so&quot;, depending on what you set-up for your region (a
&gt; &gt; la workstation operating systems and MSWord, etc).

&gt; &gt; If all the LS functions work perfectly well after setting the locale -
&gt; &gt; no matter what locale it is - then why have the older versions at all?
&gt; &gt; It's a shame when i18n becomes an afterthought and you get burnt by
&gt; &gt; needing to retrofit it.

&gt; &gt; if what people are saying is that LSDateFormat is broken in &quot;en_US&quot;
&gt; &gt; locales then that's what needs to be said. A generic fix in the hand
&gt; &gt; is worth more than two hacks in the bush.

&gt; &gt; eh my 2c
&gt; &gt; barry.b

&gt; &gt; On Jan 7, 2008 1:32 PM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

&gt; &gt;&gt; Hi y'all, I'm not completely sure that this is a problem that needs to
&gt; get
&gt; &gt;&gt; fixed... maybe I'm missing something...? Barry I'm definitely feeling
&gt; your
&gt; &gt;&gt; pain on this one ;)

&gt; &gt;&gt; Dateformat will format dates in US format regardless of the
&gt; &gt;&gt; set/selected/configured/OS/JVM locale.

&gt; &gt;&gt; LSDateFormat will format (and parse) using the specified locale.

&gt; &gt;&gt; Both will allow you to mask the output format in the same way, ie &quot;dd mm
&gt; &gt;&gt; yyyy&quot; or  &quot;mm dd yyyy&quot;

&gt; &gt;&gt; IMO the difference (and cause of confusion in non US places) is two fold;
&gt; &gt;&gt;   1. Often a non-US application could be hosted in the US or the server
&gt; has
&gt; &gt;&gt; the locale set to US when it shouldn't be. Some won't be aware of it -
&gt; hence
&gt; &gt;&gt; the &quot;LS&quot; parsing will be US anyhow.
&gt; &gt;&gt;   2. DateFormat will parse strings to dates (as will DateParse). BUT when
&gt; &gt;&gt; doing so it's too smart (or dumb) ... Dateformat will accept an input
&gt; string
&gt; &gt;&gt; like &quot;29 01 2007&quot; clearly this is not a US but DateFormat will parse
&gt; &gt;&gt; correctly it because there is no ambiguity - IMO this scenarios should
&gt; throw
&gt; &gt;&gt; an error instead, it would help avoid problems.

&gt; &gt;&gt; I don't think it can be deprecated. How would you then parse a US date
&gt; &gt;&gt; string to a date object without setting your local to US?
&gt; &gt;&gt; Perhaps another parse/format function that can be used by explicitly
&gt; &gt;&gt; specifying the input at output masks. ie; DateStringFormat(strDate,&quot;mm dd
&gt; &gt;&gt; yy&quot;,&quot;dd mm yy&quot;).

&gt; &gt;&gt; Barry, am I right to assume your problem was with dates as strings?

&gt; &gt;&gt; Cheers.

&gt; &gt;&gt; btw... I really am in a different world today - kicking back in Adelaide
&gt; &gt;&gt; with a beach view niiiiice ;)

&gt; &gt;&gt;  On Jan 7, 2008 11:42 AM, Haikal Saadh &lt;haikal.sa ... @gmail.com&gt; wrote:

&gt; &gt;&gt;&gt; Retrofitting DataFormat to do what LSDateFormat does breaks
&gt; &gt;&gt;&gt; principle-of-least-surprise; Probably won't be too long before an angry
&gt; &gt;&gt;&gt; mob gathers.

&gt; &gt;&gt;&gt; That said, deprecating DateFormat sounds like a good idea, if for no
&gt; &gt;&gt;&gt; other reason but the fact that it makes your app easier to localise.

&gt; &gt;&gt;&gt; Andrew Scott wrote:

&gt; &gt;&gt;&gt;&gt; Very good question,

&gt; &gt;&gt;&gt;&gt; LS, or location / region settings was an added hack to get localisation
&gt; &gt;&gt;&gt;&gt; working. My view is that it is about time that this was all brought

&gt; &gt;&gt; internal

&gt; &gt;&gt;&gt;&gt; to Coldfusion, so that we as developers make one setting either in the

&gt; &gt;&gt; OS,

&gt; &gt;&gt;&gt;&gt; or Admin of CF and forget about it.

&gt; &gt;&gt;&gt;&gt; However it is there for backwards compatability. But if it wasn't a
&gt; hack

&gt; &gt;&gt; in

&gt; &gt;&gt;&gt;&gt; the first place, I do not think we would fall into this trap...

&gt; &gt;&gt;&gt;&gt; And yes I still fall into this trap, even though I should know better.

&gt; &gt;&gt;&gt;&gt; As for LSDateFormat working in the USA, it does as long as setLocale()

&gt; &gt;&gt; is

&gt; &gt;&gt;&gt;&gt; set to that region.

&gt; &gt;&gt;&gt;&gt; Andrew Scott
&gt; &gt;&gt;&gt;&gt; Senior Coldfusion Developer
&gt; &gt;&gt;&gt;&gt; Aegeon Pty. Ltd.
&gt; &gt;&gt;&gt;&gt; www.aegeon.com.au
&gt; &gt;&gt;&gt;&gt; Phone: +613  9015 8628
&gt; &gt;&gt;&gt;&gt; Mobile: 0404 998 273

&gt; &gt;&gt;&gt;&gt; -----Original Message-----
&gt; &gt;&gt;&gt;&gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On

&gt; &gt;&gt; Behalf

&gt; &gt;&gt;&gt;&gt; Of Barry Beattie
&gt; &gt;&gt;&gt;&gt; Sent: Monday, 7 January 2008 11:24 AM
&gt; &gt;&gt;&gt;&gt; To: cfaussie@googlegroups.com
&gt; &gt;&gt;&gt;&gt; Subject: [cfaussie] should DateFormat() be depricated (in favour of
&gt; &gt;&gt;&gt;&gt; LSDateFormat())?

&gt; &gt;&gt;&gt;&gt; I've been fighting an application (since 7:00am this morning) and it
&gt; &gt;&gt;&gt;&gt; turns out that is has a generous use of DateFormat() within it.

&gt; &gt;&gt;&gt;&gt; I'm quietly confident that replacing them with LSDateFormat() will
&gt; &gt;&gt;&gt;&gt; start it making sense again.

&gt; &gt;&gt;&gt;&gt; but the trouble there is how to add it into the app - pick up the
&gt; &gt;&gt;&gt;&gt; locale in the setup ini file and if en_US then use dateFormat else use
&gt; &gt;&gt;&gt;&gt; LSDateFormat?

&gt; &gt;&gt;&gt;&gt; or just use LSDateFormat (relying on CF to get it right everywhere)
&gt; &gt;&gt;&gt;&gt; and in the ini setup file, set the date display mask?

&gt; &gt;&gt;&gt;&gt; and if the latter, is there a usecase for DateFormat() at all?

&gt; &gt;&gt;&gt;&gt; I suppose I should ask this on a U.S list... I'm sure they're aware if
&gt; &gt;&gt;&gt;&gt; LSDateFormat doesn't work for them just as we're acutely aware that
&gt; &gt;&gt;&gt;&gt; DateFormat doesn't play nicely in out region.

&gt; &gt;&gt;&gt;&gt; thoughts? comments? experiences?

&gt; &gt;&gt;&gt;&gt; thanx
&gt; &gt;&gt;&gt;&gt; barry.b
">
</POST>
<POST>
<POSTER> &quot;Barry Beattie&quot; &lt;barry.beat...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T01:12:00 </POSTDATE>
Mr Buzzy, the problem is nothing specific (the example I showed before
was incorrect).

I've just got an app that has code like this in quite a few places:

&lt;cfset value = dateFormat(value,&quot;mm/dd/yy&quot;)&gt;

instead of something like.

&lt;cfset value = LSDateFormat(value,&quot;short&quot;) /&gt;
or
&lt;cfset value = LSDateFormat(value, commentDateFormat) /&gt;

the original codebase has a bit of history so this sort of thing is
understandable. The next version probably has it all cleaned up.

but that got me thinking, why are there two ways of doing the same
thing, leaving the door open to perpetuate old bad habits or
unnecessary hacks? - and - is there anything wrong with keeping i18n
first and foremost in what we do and how we do it?

everyone keeps saying that dateFormat() is for backward compatibility.
Isn't that admitting that it's as good as depicted anyway? why not
make it official and weed it out of existence in support for all the
LS series of functions?

if the LS functions aren't robust and can't be trusted in all cases,
then the answer is to make sure they work right. And if they do work,
then that's all we should need.

&quot;Also, don't forget that allowing users to pick their own locale and
timezone is not only good practice, but practically expected in this day
and age...&quot;

here here!
</POST>
<POST>
<POSTER> &quot;Barry Beattie&quot; &lt;barry.beat...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T01:14:00 </POSTDATE>
D'oh!

&quot;depicted&quot; = deprecated

(bloody spell checkers)
</POST>
<POST>
<POSTER> MrBuzzy &lt;mrbu...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T01:30:00 </POSTDATE>
@Barry so _value_ is a string or a date object?
Your examples seem valid on their own.

Again, if dateformat/parsedate was deprecated how would we Aussies
parse a us date string?

Time for a swim and a coopers lager :)

On 1/7/08, Barry Beattie &lt;barry.beat ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; D'oh!

&gt; &quot;depicted&quot; = deprecated

&gt; (bloody spell checkers)
">
</POST>
<POST>
<POSTER> &quot;Barry Beattie&quot; &lt;barry.beat...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T02:52:00 </POSTDATE>
well, if ppl are wanting to sweat cycles on this....

(sorry, maybe it's because of using strongly typed languages. I see
date handling as a very black and white issue. They're dates.
(actually dateTime) they always will be ... until people get
involved...)

<QUOTE PREVIOUSPOST="
&gt; @Barry so _value_ is a string or a date object?
">

in that case, for display.

IMHO, all dates should be kept as date objects until they are needed
for display - and all strings representing dates (eg from calendar UI
widgets) converted to date objects as soon as possible. Date
comparisons,  dateadd, etc done with date objects. Only when they are
strings do they get converted treated as such (user input, display).

(doesn't anyone like LSParseDate?)

<QUOTE PREVIOUSPOST="
&gt; Your examples seem valid on their own.
">

except that the mask is assuming I want the date displayed in U.S
format and is hard coded (but that's another issue)

<QUOTE PREVIOUSPOST="
&gt; Again, if dateformat/parsedate was deprecated how would we Aussies
&gt; parse a us date string?
">

is the string directly from user input - or - for display? you'd have
to ask yourself why it's a &quot;US date&quot; string and not a &quot;string
representing a date from a user in the U.S locale..&quot;. The difference
is context: the format is not &quot;owned&quot; by the string but by the user
while using the application. Sure I'm playing with semantics but It's
only a bunch of symbols after all, not a date, and as such only has
meaning for humans because we think it looks like a date. Internally
it should be a date object so the system can user it (correctly).

you've got a U.S user on an Australian webapp/website looking at data
and he wants to see it displayed (or enter it) like &quot;back home&quot;? Sniff
him out, find his locale preference and set that. just for him. Make
him feel special. Failing that, he's using an Australian webapp and
&quot;he'd bloody well better get used to the way we do it around here,
mate!&quot;

(in other words, you know he'd entered a bodgy date in mm/dd/yyyy
format - convert it to the real thing as fast as possible - or better
still give him a date picker so he can't stuff it up).

what I'm getting at is that the only thing that changes is how the
user wants to interact with the data, not the data itself. It's still
a date under the hood.

eh. my 2c.

<QUOTE PREVIOUSPOST="
&gt; Time for a swim and a coopers lager :)

&gt; On 1/7/08, Barry Beattie &lt;barry.beat ... @gmail.com&gt; wrote:

&gt; &gt; D'oh!

&gt; &gt; &quot;depicted&quot; = deprecated

&gt; &gt; (bloody spell checkers)
">
</POST>
<POST>
<POSTER> &quot;Raymond Camden&quot; &lt;rcam...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T12:14:00 </POSTDATE>
setLocale isn't server wide, not even application wide. It is request
based. If you want it app wide, you need to add it to
onRequestStart().

On Jan 7, 2008 12:07 AM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I'd really like to keep this going but I'm confused about who is
&gt; talking to who :(

&gt; @Andrew I don't agree it's a hack, I could accept that it's a necessary evil.

&gt; @hakal I totally agree that date strings are evil and probably at the
&gt; heart of the problems.

&gt; Someone mentioned using setlocale()... Feel free to correct me, but
&gt; isn't that a server wide function? Changing the locale this way
&gt; *could* cause problems to other apps. It'd be nice if it was an
&gt; application property instead.
">

--
===========================================================================
Raymond Camden, Camden Media

Email    : r ... @camdenfamily.com
Blog      : www.coldfusionjedi.com
AOL IM : cfjedimaster

Keep up to date with the community: http://www.coldfusionbloggers.org
</POST>
<POST>
<POSTER> &quot;Charlie Arehart \(lists account\)&quot; &lt;charlie_li...@carehart.org&gt; </POSTER>
<POSTDATE> 2008-01-07T13:09:00 </POSTDATE>
And in case it's of any value, if one felt that changing the locale
request-wide was still a problem (issuing setlocale in a given template to
affect a given function), note that one of the many hidden gems in CF8 is
that the LS functions now accept locale as an argument, so you don't even
need to use setLocale if you don't want to for some reason. (It also helps
for the situation where SetLocale doesn't work after a CFFLUSH, etc.)

For those curious, yes I did mention this in my Hidden Gems talk, but many
surely have not seen it, and even those who did might have forgotten it. :-)

/charlie

<QUOTE PREVIOUSPOST="
-----Original Message-----
From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On Behalf

Of Raymond Camden
Sent: Monday, January 07, 2008 12:15 PM
To: cfaussie@googlegroups.com
Subject: [cfaussie] Re: should DateFormat() be depricated (in favour of
LSDateFormat())?

setLocale isn't server wide, not even application wide. It is request based.
If you want it app wide, you need to add it to onRequestStart().

On Jan 7, 2008 12:07 AM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

&gt; I'd really like to keep this going but I'm confused about who is
&gt; talking to who :(

&gt; @Andrew I don't agree it's a hack, I could accept that it's a necessary
evil.

&gt; @hakal I totally agree that date strings are evil and probably at the
&gt; heart of the problems.

&gt; Someone mentioned using setlocale()... Feel free to correct me, but
&gt; isn't that a server wide function? Changing the locale this way
&gt; *could* cause problems to other apps. It'd be nice if it was an
&gt; application property instead.

--
===========================================================================
Raymond Camden, Camden Media

Email    : r ... @camdenfamily.com
Blog      : www.coldfusionjedi.com
AOL IM : cfjedimaster

Keep up to date with the community: http://www.coldfusionbloggers.org
">
</POST>
<POST>
<POSTER> MrBuzzy &lt;mrbu...@gmail.com&gt; </POSTER>
<POSTDATE> 2008-01-07T20:19:00 </POSTDATE>
Ray/Charlie thanks for clarifying the setlocale behavior.
For the record i don't have any problem using any of the local
functions and I think they should stay as is.

On 1/8/08, Charlie Arehart (lists account) &lt;charlie_li ... @carehart.org&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; And in case it's of any value, if one felt that changing the locale
&gt; request-wide was still a problem (issuing setlocale in a given template to
&gt; affect a given function), note that one of the many hidden gems in CF8 is
&gt; that the LS functions now accept locale as an argument, so you don't even
&gt; need to use setLocale if you don't want to for some reason. (It also helps
&gt; for the situation where SetLocale doesn't work after a CFFLUSH, etc.)

&gt; For those curious, yes I did mention this in my Hidden Gems talk, but many
&gt; surely have not seen it, and even those who did might have forgotten it. :-)

&gt; /charlie

&gt; -----Original Message-----
&gt; From: cfaussie@googlegroups.com [mailto:cfaussie@googlegroups.com] On Behalf
&gt; Of Raymond Camden
&gt; Sent: Monday, January 07, 2008 12:15 PM
&gt; To: cfaussie@googlegroups.com
&gt; Subject: [cfaussie] Re: should DateFormat() be depricated (in favour of
&gt; LSDateFormat())?

&gt; setLocale isn't server wide, not even application wide. It is request based.
&gt; If you want it app wide, you need to add it to onRequestStart().

&gt; On Jan 7, 2008 12:07 AM, MrBuzzy &lt;mrbu ... @gmail.com&gt; wrote:

&gt; &gt; I'd really like to keep this going but I'm confused about who is
&gt; &gt; talking to who :(

&gt; &gt; @Andrew I don't agree it's a hack, I could accept that it's a necessary
&gt; evil.

&gt; &gt; @hakal I totally agree that date strings are evil and probably at the
&gt; &gt; heart of the problems.

&gt; &gt; Someone mentioned using setlocale()... Feel free to correct me, but
&gt; &gt; isn't that a server wide function? Changing the locale this way
&gt; &gt; *could* cause problems to other apps. It'd be nice if it was an
&gt; &gt; application property instead.

&gt; --
&gt; ===========================================================================
&gt; Raymond Camden, Camden Media

&gt; Email    : r ... @camdenfamily.com
&gt; Blog      : www.coldfusionjedi.com
&gt; AOL IM : cfjedimaster

&gt; Keep up to date with the community: http://www.coldfusionbloggers.org
">
</POST>
</TEXT>
</BODY>
</DOC>
