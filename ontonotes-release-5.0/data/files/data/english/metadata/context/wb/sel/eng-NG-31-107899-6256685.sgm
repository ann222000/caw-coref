<DOC>
<DOCID> eng-NG-31-107899-6256685 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-02-14T22:08:00 </DATETIME>
<BODY>
<HEADLINE>
64 bit, the world according to cakewalk
</HEADLINE>
<TEXT>
<POST>
<POSTER> genericaudioper...@hotmail.com </POSTER>
<POSTDATE> 2007-02-14T22:08:00 </POSTDATE>
check this out, from Cakewalk:

http://www.youtube.com/watch?v=-9EeW9WhNWA

this guy has me convinced.  but i'm so dumb at this stuff, i'll
believe anything.  anyway, i like the idea of tons of bits.    gives
me a reason to get a new core 2 duo computer and stay in the box.
</POST>
<POST>
<POSTER> "Mark & Mary Ann Weiss" &lt;mweissX...@earthlink.net&gt; </POSTER>
<POSTDATE> 2007-02-14T23:26:00 </POSTDATE>
Unquestionably, the more bits used in the calculation of any transform, the
greater the accuracy by several orders of magnitude.

I was able to make some observations about the differences between 16- 24
and 32-bit float calculations in SoundForge. My simple test was to create
a -90dB sinewave and reduce it by 10dB and then normalize the whole thing to
0dB. The 16-bit file became a no-signal file. The 24-bit file was recovered,
but with some quantizing errors resulting in stairsteps, and the 32-bit file
looked perfect. In fact, I was able to keep reducing the 32-bit file until
it was at -899dB before normalizing to 0dB brought visible quantizing error
to the screen.

Whether moving to 64-bit float brings an audible benefit, well, I suppose
we'll know after some time with the product and a lot of listeners have done
blind comparisons.

--

Take care,

Mark &amp; Mary Ann Weiss

VIDEO PRODUCTION . FILM SCANNING . DVD MASTERING . AUDIO RESTORATION
Hear my Kurzweil Creations at: www.dv-clips.com/theater.htm
www.basspig.com The Bass Pig's Lair - 15,000 Watts of Driving Stereo!
Business sites at:

www.mwcomms.com
www.adventuresinanimemusic.com
-
</POST>
<POST>
<POSTER> "Arny Krueger" &lt;a...@hotpop.com&gt; </POSTER>
<POSTDATE> 2007-02-15T06:37:00 </POSTDATE>
"Mark &amp; Mary Ann Weiss" &lt;mweissX ... @earthlink.net&gt; wrote in message
news:OhRAh.211830$RS1.52830@fe03.news.easynews.com ...

<QUOTE PREVIOUSPOST="
&gt; Unquestionably, the more bits used in the calculation of any transform,
&gt; the
&gt; greater the accuracy by several orders of magnitude.

&gt; I was able to make some observations about the differences between 16- 24
&gt; and 32-bit float calculations in SoundForge. My simple test was to create
&gt; a -90dB sinewave and reduce it by 10dB and then normalize the whole thing
&gt; to
&gt; 0dB. The 16-bit file became a no-signal file.
">

Expected.

<QUOTE PREVIOUSPOST="
&gt; The 24-bit file was recovered,
&gt; but with some quantizing errors resulting in stairsteps,
">

Ouch!

<QUOTE PREVIOUSPOST="
&gt;  and the 32-bit file  looked perfect.
">

Expected.

<QUOTE PREVIOUSPOST="
&gt; In fact, I was able to keep reducing the 32-bit file until
&gt; it was at -899dB before normalizing to 0dB brought visible quantizing
&gt; error
&gt; to the screen.
">

The marvels of floating point.

The fact that you saw any quantizing errors on the screen point out a
potential serious defect in the processing. Whenever a wave is altered, the
wave is supposed to have any resulting quantization error re-randomized.
Seems like it is not happening.

Of course a less extreme case would be more relevant. I tried 4 sucessive
attenuations of -224 dB with CEP, and it resulted in a mess. If I backed off
to 4 sucessive attenations of -200 dB, no signfiicant problem.

<QUOTE PREVIOUSPOST="
&gt; Whether moving to 64-bit float brings an audible benefit, well, I suppose
&gt; we'll know after some time with the product and a lot of listeners have
&gt; done
&gt; blind comparisons.
">

Unlikely that it will make a difference, as a well-implmented 32 bit FP is
all it takes for abundant sonic transparancy for real-world editing.
</POST>
<POST>
<POSTER> "Mike Rivers" &lt;mriv...@d-and-d.com&gt; </POSTER>
<POSTDATE> 2007-02-15T08:10:00 </POSTDATE>
On Feb 14, 11:26 pm, "Mark &amp; Mary Ann Weiss"

<QUOTE PREVIOUSPOST="
&lt;mweissX ... @earthlink.net&gt; wrote:
&gt; I was able to make some observations about the differences between 16- 24
&gt; and 32-bit float calculations in SoundForge. My simple test was to create
&gt; a -90dB sinewave and reduce it by 10dB and then normalize the whole thing to
&gt; 0dB. The 16-bit file became a no-signal file. The 24-bit file was recovered,
&gt; but with some quantizing errors resulting in stairsteps, and the 32-bit file
&gt; looked perfect. In fact,
">

Yes, 64-bit systems are a very good idea if you get 32-bit files
recorded at -100 dBFS to work on. I turn down work like that because I
don't want to invest in the equipment suitable to hand it. If I could
do that kind of work, I'd be making $1,000/day as a forensic audio
expert. &lt;g&gt;

Most of what I do is 16-bit recorded at a reasonable level and it does
not require being amplified by 90 dB in order to be audible.
</POST>
<POST>
<POSTER> Les Cargill &lt;lcarg...@cfl.rr.com&gt; </POSTER>
<POSTDATE> 2007-02-15T18:37:00 </POSTDATE>
Mark &amp; Mary Ann Weiss wrote:

<QUOTE PREVIOUSPOST="
&gt; Unquestionably, the more bits used in the calculation of any transform, the
&gt; greater the accuracy by several orders of magnitude.

&gt; I was able to make some observations about the differences between 16- 24
&gt; and 32-bit float calculations in SoundForge. My simple test was to create
&gt; a -90dB sinewave and reduce it by 10dB and then normalize the whole thing to
&gt; 0dB. The 16-bit file became a no-signal file. The 24-bit file was recovered,
&gt; but with some quantizing errors resulting in stairsteps, and the 32-bit file
&gt; looked perfect. In fact, I was able to keep reducing the 32-bit file until
&gt; it was at -899dB before normalizing to 0dB brought visible quantizing error
&gt; to the screen.

&gt; Whether moving to 64-bit float brings an audible benefit, well, I suppose
&gt; we'll know after some time with the product and a lot of listeners have done
&gt; blind comparisons.
">

It is the software person's choice to use 64 bit floats *today* , as a
native, sometimes hardware-supported type.

If not supported in hardware, it's most certainly well-supported
as a native element of most languages. I've seen plugins from
1996 that had 64 bit modes...

If all you can get is 64 bit hardware, great. Don't expect any
audible difference from it.

<QUOTE PREVIOUSPOST="
&gt; --

&gt; Take care,

&gt; Mark &amp; Mary Ann Weiss

&gt; VIDEO PRODUCTION . FILM SCANNING . DVD MASTERING . AUDIO RESTORATION
&gt; Hear my Kurzweil Creations at: www.dv-clips.com/theater.htm
&gt; www.basspig.com The Bass Pig's Lair - 15,000 Watts of Driving Stereo!
&gt; Business sites at:

&gt; www.mwcomms.com
&gt; www.adventuresinanimemusic.com
&gt; -
">

--
Les Cargill
</POST>
<POST>
<POSTER> "Mark & Mary Ann Weiss" &lt;mweissX...@earthlink.net&gt; </POSTER>
<POSTDATE> 2007-02-16T23:34:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Unlikely that it will make a difference, as a well-implmented 32 bit FP is
&gt; all it takes for abundant sonic transparancy for real-world editing.
">

Agreed. Based on the results of my experiment, I am no longer worried about
normalizing a little audio once in a while, so long as I do the transform in
32-bit float mode.
</POST>
</TEXT>
</BODY>
</DOC>
