<DOC>
<DOCID> eng-NG-31-129016-9357427 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-09-10T10:00:00 </DATETIME>
<BODY>
<HEADLINE>
SourceForge?
</HEADLINE>
<TEXT>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T10:00:00 </POSTDATE>
Why isn't OpenQM available on SourceForge?

g.
</POST>
<POST>
<POSTER> Doug Dumitru &lt;d...@easyco.com&gt; </POSTER>
<POSTDATE> 2007-09-10T12:17:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
geneb wrote:
&gt; Why isn't OpenQM available on SourceForge?
">

Um, because it isn't.

Not everything is developed in SoruceForge style.  In this case, there
is a commercial and open source &quot;trunk&quot; plus a private CVS with the
master source in Windows, so SourceForge would not be very practical
from Martin's point of view.

Doug Dumitru
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T14:16:00 </POSTDATE>
On 10 Sep, 09:17, Doug Dumitru &lt;d ... @easyco.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; geneb wrote:
&gt; &gt; Why isn't OpenQM available on SourceForge?

&gt; Um, because it isn't.

&gt; Not everything is developed in SoruceForge style.  In this case, there
&gt; is a commercial and open source &quot;trunk&quot; plus a private CVS with the
&gt; master source in Windows, so SourceForge would not be very practical
&gt; from Martin's point of view.
">

So what avenue is available to people that don't want to give up
personal information just to be able to download
the source?

Making people wait a day + to get access to the download isn't very
condusive to getting people to take a look at it.  I &quot;applied' for
access on Friday afternoon and didn't get the download password until
Saturday afternoon.  Why is it password protected in the first place?
That appears to be against the spirit of the GPL, doesn't it?

Wasn't a big point of the whole GPL process was to both improve the
product and increase its exposure?

The language on the download page even seems to discourage using the
GPL version of OpenQM!  It doesn't make any sense, especially in the
face of complaints that few people contribute to the project.  Yes, I
understand that users need to be made aware of what the GPL license
entails, but its completely un-neccessary to repeatedly warn of the
&quot;perils&quot; of the GPL.  It doesn't take a rocket scientist to know that
if I write an application in the GPL version of OpenQM and then
distribute my code _with_ the GPL version of OpenQM, that my code by
association will also fall under the GPL because by it's nature it's a
derivative work.  The page seems to assume people are stupid and must
be reminded a number of times, even on the download pages!  To make it
even worse, they whack the poor user in the face again with a threat
of legal action of the GPL is violated.  Well _DUH_.  You'd have to be
living with your head cast in concrete to NOT know that voilating the
GPL can and will bring down a world of hurt on you.  There's no reason
to be so in-your-face with it.  It just furthers that appearance of
being hostile to people that are interested in the GPL version of the
product.

I don't want to come off sounding like some jerk here, but why on
earth make it so hard to actually get your hands on a good tool?

OpenQM will never see any kind of popularity with the near-hostile way
its presented right now.  SourceForge may not be practical, but I
think it's about time.

I would be astonished to see another GPL project that is so hard to
get access to.

g.
</POST>
<POST>
<POSTER> &quot;Steve Bush&quot; &lt;Steve.B...@NEOSYS.COM&gt; </POSTER>
<POSTDATE> 2007-09-10T17:11:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; That appears to be against the spirit of the GPL, doesn't it?

&gt; Wasn't a big point of the whole GPL process was to both
&gt; improve the product and increase its exposure?
">

Actually it isn't against spirit of Stallman's GPL which is simply a
stricture not to provide binaries without source code. GPL says nothing
whatsoever about _public_ provision of source code or indeed of it being
free beer. A lot of people get that wrong.

<QUOTE PREVIOUSPOST="
&gt; Wasn't a big point of the whole GPL process was to both
&gt; improve the product and increase its exposure?
">

I think what you mean is that it (QM not being totally free and easy to get)
is against the Eric Raymond &quot;Cathedral and Bazaar&quot; philosophy of group
development. This is only to be expected because QM was born and bred in the
Cathedral owing nothing to anybody whereas projects born in the Bazaar never
get anywhere unless there is a bunch of players all contributing. Put
another way, OpenQM isn't making huge progress in the Bazaar because a)
there aren't enough people in the Bazaar interested in it ) they dislike the
smell of the Cathedral which clings to OpenQM and c) the originator can
survive in the Cathedral and isn't really a Bazaar person in the first
place.

Steve Bush
NEOSYS
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T18:05:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; &gt; Wasn't a big point of the whole GPL process was to both
&gt; &gt; improve the product and increase its exposure?

&gt; I think what you mean is that it (QM not being totally free and easy to get)
&gt; is against the Eric Raymond &quot;Cathedral and Bazaar&quot; philosophy of group
&gt; development. This is only to be expected because QM was born and bred in the
&gt; Cathedral owing nothing to anybody whereas projects born in the Bazaar never
&gt; get anywhere unless there is a bunch of players all contributing. Put
&gt; another way, OpenQM isn't making huge progress in the Bazaar because a)
&gt; there aren't enough people in the Bazaar interested in it ) they dislike the
&gt; smell of the Cathedral which clings to OpenQM and c) the originator can
&gt; survive in the Cathedral and isn't really a Bazaar person in the first
&gt; place.
">

It's sad when someone can make my point better than I can. *laughs*

I really think the lack of participation centers around the fact that
unless you're an MV geek to
begin with, you're not going to notice OpenQM at all.  Putting it
behind a locked door - even if it's just
a screen door, doesn't help promote the project to outside interests.

The sometimes overpowering stench of Cathedral isn't helping at all.
That can be cured with a bit of smart marketing I think.

Right now they're kind of like Commodore Marketing.  They were so
amazingly poor (towards the end) at promoting Commodore products that
they were often referred to as the only marketing dept. that would
advertise sushi as &quot;cold, dead fish&quot;.

What I see right now says this to me:

&quot;We've got a great product here!  Buy it!  We have this nice GPLed
version but, (BUY IT!) if you do (BUY IT!) anything that might even
(BUY IT!) remotely be construed as violating the (BUY IT!) GPL
license, we'll (BUY IT!) of course be required to (BUY IT!) pillory
you in a public square (BUY IT!) and have a looping tape (BUY IT!) of
fingernails on a black board (BUY IT!) intermingled with a (BUY IT!)
theatrical reading of the Raining Data End User License Agreement (BUY
IT!).  Now if you'd like (BUY IT!) to download the GPLed version, (BUY
IT!) please fill out this handy form (BUY IT!) and we'll think about
it for a (BUY IT!) little while and get back to you.  (NOW BUY IT
ALREADY!)&quot;

What they should be saying is something like this:

&quot;We've got this great product here!  We think so much of our product
that we feel confidant in giving the community an open source version
so everyone can actually _experience_ how great our product is!  We
know that those of you that run commercial ventures will want to
purchase the commercial version of our product, but for those that
don't need commercial support and the amenities that go with it, use
this open version instead!  It's great for doing website backends, can
be the core of a new inventory control or accounting system.  Hell,
you could even make a great competitor to SugarCRM!  It's free!  It's
fantastic!  It begs to be used, enhanced and appriciated!
While the GPLed version of OpenQM comes with no support, I'm sure that
if you were to ask nicely in one of these places &lt;links&gt;, then one of
the many helpful people in the Multi-Value community would be happy to
help you or at least point you in the right direction.
We also have this great Wiki &lt;here&gt; that we encourage particiption in!

You can download OpenQM &lt;here&gt; or at one our many mirror sites, found
&lt;here&gt;.

Would you like to learn more about OpenQM and what Multi-Value
databases in general have to offer you?  See &lt;here&gt; or &lt;here&gt;.

If you'd like to learn more about how to use OpenQM as the back-end
for your website, you can learn more &lt;here&gt;.  In fact, if you're
interested, OpenQM can BE your webserver!  See this great project
&lt;here&gt;.

For those that would be interested in using OpenQM in a non-
interactive server role, we've got this great client library &lt;here&gt;
that can be used to connect to any OpenQM database and leverage all
that server horsepower for whatever you need, while allowing you the
flexibility of developing a nice graphic client that can run on
Windows, Linux or MacOS X!

For those with more commercial interests, we offer a commercial
edition of OpenQM that is licensed on a per-user basis for a paltry
$foo a seat.  Supported platforms include Windows, Linux, FreeBSD,
MacOS X and Palm!

Oh, and please respect our license.  OpenQM is licensed under the GPL
and if you were to violate it, well we'd be really upset and have to
burn your home to the ground, till the debris into the land and then
heavily salt the soil, all as a warning to others.  It worked for
Carthage and it WILL work for you.

Download OpenQM today and see what you've been missing!  Fedora Core
users can 'yum install openqm'!&quot;

Now which do you think people will gravitate to?  What would you as a
user/developer rather have?  A product with enthusiastic, excited
people behind it or some cold, dead, fish?

SourceForge isn't a necessity, but that stupid screen door has got to
go.

Don't be a Fish Monger.

g.
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-10T18:10:00 </POSTDATE>
Ten out of ten.  Well done boy, go to the top of the class.

On 10/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; &gt; Wasn't a big point of the whole GPL process was to both
&gt; &gt; &gt; improve the product and increase its exposure?

&gt; &gt; I think what you mean is that it (QM not being totally free and easy to
&gt; get)
&gt; &gt; is against the Eric Raymond &quot;Cathedral and Bazaar&quot; philosophy of group
&gt; &gt; development. This is only to be expected because QM was born and bred in
&gt; the
&gt; &gt; Cathedral owing nothing to anybody whereas projects born in the Bazaar
&gt; never
&gt; &gt; get anywhere unless there is a bunch of players all contributing. Put
&gt; &gt; another way, OpenQM isn't making huge progress in the Bazaar because a)
&gt; &gt; there aren't enough people in the Bazaar interested in it ) they dislike
&gt; the
&gt; &gt; smell of the Cathedral which clings to OpenQM and c) the originator can
&gt; &gt; survive in the Cathedral and isn't really a Bazaar person in the first
&gt; &gt; place.

&gt; It's sad when someone can make my point better than I can. *laughs*

&gt; I really think the lack of participation centers around the fact that
&gt; unless you're an MV geek to
&gt; begin with, you're not going to notice OpenQM at all.  Putting it
&gt; behind a locked door - even if it's just
&gt; a screen door, doesn't help promote the project to outside interests.

&gt; The sometimes overpowering stench of Cathedral isn't helping at all.
&gt; That can be cured with a bit of smart marketing I think.

&gt; Right now they're kind of like Commodore Marketing.  They were so
&gt; amazingly poor (towards the end) at promoting Commodore products that
&gt; they were often referred to as the only marketing dept. that would
&gt; advertise sushi as &quot;cold, dead fish&quot;.

&gt; What I see right now says this to me:

&gt; &quot;We've got a great product here!  Buy it!  We have this nice GPLed
&gt; version but, (BUY IT!) if you do (BUY IT!) anything that might even
&gt; (BUY IT!) remotely be construed as violating the (BUY IT!) GPL
&gt; license, we'll (BUY IT!) of course be required to (BUY IT!) pillory
&gt; you in a public square (BUY IT!) and have a looping tape (BUY IT!) of
&gt; fingernails on a black board (BUY IT!) intermingled with a (BUY IT!)
&gt; theatrical reading of the Raining Data End User License Agreement (BUY
&gt; IT!).  Now if you'd like (BUY IT!) to download the GPLed version, (BUY
&gt; IT!) please fill out this handy form (BUY IT!) and we'll think about
&gt; it for a (BUY IT!) little while and get back to you.  (NOW BUY IT
&gt; ALREADY!)&quot;

&gt; What they should be saying is something like this:

&gt; &quot;We've got this great product here!  We think so much of our product
&gt; that we feel confidant in giving the community an open source version
&gt; so everyone can actually _experience_ how great our product is!  We
&gt; know that those of you that run commercial ventures will want to
&gt; purchase the commercial version of our product, but for those that
&gt; don't need commercial support and the amenities that go with it, use
&gt; this open version instead!  It's great for doing website backends, can
&gt; be the core of a new inventory control or accounting system.  Hell,
&gt; you could even make a great competitor to SugarCRM!  It's free!  It's
&gt; fantastic!  It begs to be used, enhanced and appriciated!
&gt; While the GPLed version of OpenQM comes with no support, I'm sure that
&gt; if you were to ask nicely in one of these places &lt;links&gt;, then one of
&gt; the many helpful people in the Multi-Value community would be happy to
&gt; help you or at least point you in the right direction.
&gt; We also have this great Wiki &lt;here&gt; that we encourage particiption in!

&gt; You can download OpenQM &lt;here&gt; or at one our many mirror sites, found
&gt; &lt;here&gt;.

&gt; Would you like to learn more about OpenQM and what Multi-Value
&gt; databases in general have to offer you?  See &lt;here&gt; or &lt;here&gt;.

&gt; If you'd like to learn more about how to use OpenQM as the back-end
&gt; for your website, you can learn more &lt;here&gt;.  In fact, if you're
&gt; interested, OpenQM can BE your webserver!  See this great project
&gt; &lt;here&gt;.

&gt; For those that would be interested in using OpenQM in a non-
&gt; interactive server role, we've got this great client library &lt;here&gt;
&gt; that can be used to connect to any OpenQM database and leverage all
&gt; that server horsepower for whatever you need, while allowing you the
&gt; flexibility of developing a nice graphic client that can run on
&gt; Windows, Linux or MacOS X!

&gt; For those with more commercial interests, we offer a commercial
&gt; edition of OpenQM that is licensed on a per-user basis for a paltry
&gt; $foo a seat.  Supported platforms include Windows, Linux, FreeBSD,
&gt; MacOS X and Palm!

&gt; Oh, and please respect our license.  OpenQM is licensed under the GPL
&gt; and if you were to violate it, well we'd be really upset and have to
&gt; burn your home to the ground, till the debris into the land and then
&gt; heavily salt the soil, all as a warning to others.  It worked for
&gt; Carthage and it WILL work for you.

&gt; Download OpenQM today and see what you've been missing!  Fedora Core
&gt; users can 'yum install openqm'!&quot;

&gt; Now which do you think people will gravitate to?  What would you as a
&gt; user/developer rather have?  A product with enthusiastic, excited
&gt; people behind it or some cold, dead, fish?

&gt; SourceForge isn't a necessity, but that stupid screen door has got to
&gt; go.

&gt; Don't be a Fish Monger.

&gt; g.
">

--
Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> &quot;patri...@spm1.com&quot; &lt;patrickpa...@yahoo.com&gt; </POSTER>
<POSTDATE> 2007-09-10T20:01:00 </POSTDATE>
I do not believe there is anything stopping somebody from hosting the
QM source somewhere else, but it would be that person's responsibility
to keep it up to date.  I believe Martin has done the most important
part of this which is offering the source in the first place.  I could
easily complain that version X had vfs.c which allowed the building of
VFS file systems while version Y no longer does.  The bottom line is I
can choose to take the code from the older version and add the VFS
code back in.  I can also choose to try and build my own Object based
VFS layer as the newer commercial QM has done.  While this will result
in a fork, I see this as necessary and really the only way to
eventually give Martin back something for doing this.  Up till now we
are all really just asking him to do X/Y/Z and then using his work for
free.  Perhaps if I build a better VFS layer than he has we will some
time in the future merge these back together.

btw: Try and find the source now for RedHat non fedora systems.
Redhat has made this pretty difficult but still must do it and is why
we have Centos.

On Sep 10, 3:10 pm, &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-

<QUOTE PREVIOUSPOST="
services.co.uk&gt; wrote:
&gt; Ten out of ten.  Well done boy, go to the top of the class.

&gt; On 10/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; Wasn't a big point of the whole GPL process was to both
&gt; &gt; &gt; &gt; improve the product and increase its exposure?

&gt; &gt; &gt; I think what you mean is that it (QM not being totally free and easy to
&gt; &gt; get)
&gt; &gt; &gt; is against the Eric Raymond &quot;Cathedral and Bazaar&quot; philosophy of group
&gt; &gt; &gt; development. This is only to be expected because QM was born and bred in
&gt; &gt; the
&gt; &gt; &gt; Cathedral owing nothing to anybody whereas projects born in the Bazaar
&gt; &gt; never
&gt; &gt; &gt; get anywhere unless there is a bunch of players all contributing. Put
&gt; &gt; &gt; another way, OpenQM isn't making huge progress in the Bazaar because a)
&gt; &gt; &gt; there aren't enough people in the Bazaar interested in it ) they dislike
&gt; &gt; the
&gt; &gt; &gt; smell of the Cathedral which clings to OpenQM and c) the originator can
&gt; &gt; &gt; survive in the Cathedral and isn't really a Bazaar person in the first
&gt; &gt; &gt; place.

&gt; &gt; It's sad when someone can make my point better than I can. *laughs*

&gt; &gt; I really think the lack of participation centers around the fact that
&gt; &gt; unless you're an MV geek to
&gt; &gt; begin with, you're not going to notice OpenQM at all.  Putting it
&gt; &gt; behind a locked door - even if it's just
&gt; &gt; a screen door, doesn't help promote the project to outside interests.

&gt; &gt; The sometimes overpowering stench of Cathedral isn't helping at all.
&gt; &gt; That can be cured with a bit of smart marketing I think.

&gt; &gt; Right now they're kind of like Commodore Marketing.  They were so
&gt; &gt; amazingly poor (towards the end) at promoting Commodore products that
&gt; &gt; they were often referred to as the only marketing dept. that would
&gt; &gt; advertise sushi as &quot;cold, dead fish&quot;.

&gt; &gt; What I see right now says this to me:

&gt; &gt; &quot;We've got a great product here!  Buy it!  We have this nice GPLed
&gt; &gt; version but, (BUY IT!) if you do (BUY IT!) anything that might even
&gt; &gt; (BUY IT!) remotely be construed as violating the (BUY IT!) GPL
&gt; &gt; license, we'll (BUY IT!) of course be required to (BUY IT!) pillory
&gt; &gt; you in a public square (BUY IT!) and have a looping tape (BUY IT!) of
&gt; &gt; fingernails on a black board (BUY IT!) intermingled with a (BUY IT!)
&gt; &gt; theatrical reading of the Raining Data End User License Agreement (BUY
&gt; &gt; IT!).  Now if you'd like (BUY IT!) to download the GPLed version, (BUY
&gt; &gt; IT!) please fill out this handy form (BUY IT!) and we'll think about
&gt; &gt; it for a (BUY IT!) little while and get back to you.  (NOW BUY IT
&gt; &gt; ALREADY!)&quot;

&gt; &gt; What they should be saying is something like this:

&gt; &gt; &quot;We've got this great product here!  We think so much of our product
&gt; &gt; that we feel confidant in giving the community an open source version
&gt; &gt; so everyone can actually _experience_ how great our product is!  We
&gt; &gt; know that those of you that run commercial ventures will want to
&gt; &gt; purchase the commercial version of our product, but for those that
&gt; &gt; don't need commercial support and the amenities that go with it, use
&gt; &gt; this open version instead!  It's great for doing website backends, can
&gt; &gt; be the core of a new inventory control or accounting system.  Hell,
&gt; &gt; you could even make a great competitor to SugarCRM!  It's free!  It's
&gt; &gt; fantastic!  It begs to be used, enhanced and appriciated!
&gt; &gt; While the GPLed version of OpenQM comes with no support, I'm sure that
&gt; &gt; if you were to ask nicely in one of these places &lt;links&gt;, then one of
&gt; &gt; the many helpful people in the Multi-Value community would be happy to
&gt; &gt; help you or at least point you in the right direction.
&gt; &gt; We also have this great Wiki &lt;here&gt; that we encourage particiption in!

&gt; &gt; You can download OpenQM &lt;here&gt; or at one our many mirror sites, found
&gt; &gt; &lt;here&gt;.

&gt; &gt; Would you like to learn more about OpenQM and what Multi-Value
&gt; &gt; databases in general have to offer you?  See &lt;here&gt; or &lt;here&gt;.

&gt; &gt; If you'd like to learn more about how to use OpenQM as the back-end
&gt; &gt; for your website, you can learn more &lt;here&gt;.  In fact, if you're
&gt; &gt; interested, OpenQM can BE your webserver!  See this great project
&gt; &gt; &lt;here&gt;.

&gt; &gt; For those that would be interested in using OpenQM in a non-
&gt; &gt; interactive server role, we've got this great client library &lt;here&gt;
&gt; &gt; that can be used to connect to any OpenQM database and leverage all
&gt; &gt; that server horsepower for whatever you need, while allowing you the
&gt; &gt; flexibility of developing a nice graphic client that can run on
&gt; &gt; Windows, Linux or MacOS X!

&gt; &gt; For those with more commercial interests, we offer a commercial
&gt; &gt; edition of OpenQM that is licensed on a per-user basis for a paltry
&gt; &gt; $foo a seat.  Supported platforms include Windows, Linux, FreeBSD,
&gt; &gt; MacOS X and Palm!

&gt; &gt; Oh, and please respect our license.  OpenQM is licensed under the GPL
&gt; &gt; and if you were to violate it, well we'd be really upset and have to
&gt; &gt; burn your home to the ground, till the debris into the land and then
&gt; &gt; heavily salt the soil, all as a warning to others.  It worked for
&gt; &gt; Carthage and it WILL work for you.

&gt; &gt; Download OpenQM today and see what you've been missing!  Fedora Core
&gt; &gt; users can 'yum install openqm'!&quot;

&gt; &gt; Now which do you think people will gravitate to?  What would you as a
&gt; &gt; user/developer rather have?  A product with enthusiastic, excited
&gt; &gt; people behind it or some cold, dead, fish?

&gt; &gt; SourceForge isn't a necessity, but that stupid screen door has got to
&gt; &gt; go.

&gt; &gt; Don't be a Fish Monger.

&gt; &gt; g.

&gt; --
&gt; Ashley Chapman
&gt; Billabong Services Ltd- Hide quoted text -

&gt; - Show quoted text -
">
</POST>
<POST>
<POSTER> Ross Ferris &lt;ro...@stamina.com.au&gt; </POSTER>
<POSTDATE> 2007-09-10T21:06:00 </POSTDATE>
Please contact me --&gt; I have an opening in our cold, dead fish
department!!
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-11T02:37:00 </POSTDATE>
On 11/09/2007, patri ... @spm1.com &lt;patrickpa ... @yahoo.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I do not believe there is anything stopping somebody from hosting the
&gt; QM source somewhere else, but it would be that person's responsibility
&gt; to keep it up to date.  I believe Martin has done the most important
&gt; part of this which is offering the source in the first place.  I could
&gt; easily complain that version X had vfs.c which allowed the building of
&gt; VFS file systems while version Y no longer does.  The bottom line is I
&gt; can choose to take the code from the older version and add the VFS
&gt; code back in.  I can also choose to try and build my own Object based
&gt; VFS layer as the newer commercial QM has done.  While this will result
&gt; in a fork, I see this as necessary and really the only way to
&gt; eventually give Martin back something for doing this.  Up till now we
&gt; are all really just asking him to do X/Y/Z and then using his work for
&gt; free.  Perhaps if I build a better VFS layer than he has we will some
&gt; time in the future merge these back together.
">

Yes.  I embarked upon a project to create an Web Application Development
Framework (much like Ruby on Rails), which contained a fork of QM.  When
it's in a presentable state, I'm planning a full GPL release without any
irritating restrictions.  This is still an ongoing project which is only
hampered by lack of time due to an excess of client work.  Not that I'm
complaining. :-)

btw: Try and find the source now for RedHat non fedora systems.

<QUOTE PREVIOUSPOST="
&gt; Redhat has made this pretty difficult but still must do it and is why
&gt; we have Centos.
">

Actually, it's easy to find the source of Redhat's products such as RHEL;
If you are a licensed client.   This is an excellent model of how you can
use the GPL within a commercial framework.

Centos was created (by others) to make the source easy to find if you have
NOT bought and paid for RHEL.

On Sep 10, 3:10 pm, &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; services.co.uk&gt; wrote:
&gt; &gt; Ten out of ten.  Well done boy, go to the top of the class.

&gt; &gt; On 10/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; &gt; Wasn't a big point of the whole GPL process was to both
&gt; &gt; &gt; &gt; &gt; improve the product and increase its exposure?

&gt; &gt; &gt; &gt; I think what you mean is that it (QM not being totally free and easy
&gt; to
&gt; &gt; &gt; get)
&gt; &gt; &gt; &gt; is against the Eric Raymond &quot;Cathedral and Bazaar&quot; philosophy of
&gt; group
&gt; &gt; &gt; &gt; development. This is only to be expected because QM was born and
&gt; bred in
&gt; &gt; &gt; the
&gt; &gt; &gt; &gt; Cathedral owing nothing to anybody whereas projects born in the
&gt; Bazaar
&gt; &gt; &gt; never
&gt; &gt; &gt; &gt; get anywhere unless there is a bunch of players all contributing.
&gt; Put
&gt; &gt; &gt; &gt; another way, OpenQM isn't making huge progress in the Bazaar because
&gt; a)
&gt; &gt; &gt; &gt; there aren't enough people in the Bazaar interested in it ) they
&gt; dislike
&gt; &gt; &gt; the
&gt; &gt; &gt; &gt; smell of the Cathedral which clings to OpenQM and c) the originator
&gt; can
&gt; &gt; &gt; &gt; survive in the Cathedral and isn't really a Bazaar person in the
&gt; first
&gt; &gt; &gt; &gt; place.

&gt; &gt; &gt; It's sad when someone can make my point better than I can. *laughs*

&gt; &gt; &gt; I really think the lack of participation centers around the fact that
&gt; &gt; &gt; unless you're an MV geek to
&gt; &gt; &gt; begin with, you're not going to notice OpenQM at all.  Putting it
&gt; &gt; &gt; behind a locked door - even if it's just
&gt; &gt; &gt; a screen door, doesn't help promote the project to outside interests.

&gt; &gt; &gt; The sometimes overpowering stench of Cathedral isn't helping at all.
&gt; &gt; &gt; That can be cured with a bit of smart marketing I think.

&gt; &gt; &gt; Right now they're kind of like Commodore Marketing.  They were so
&gt; &gt; &gt; amazingly poor (towards the end) at promoting Commodore products that
&gt; &gt; &gt; they were often referred to as the only marketing dept. that would
&gt; &gt; &gt; advertise sushi as &quot;cold, dead fish&quot;.

&gt; &gt; &gt; What I see right now says this to me:

&gt; &gt; &gt; &quot;We've got a great product here!  Buy it!  We have this nice GPLed
&gt; &gt; &gt; version but, (BUY IT!) if you do (BUY IT!) anything that might even
&gt; &gt; &gt; (BUY IT!) remotely be construed as violating the (BUY IT!) GPL
&gt; &gt; &gt; license, we'll (BUY IT!) of course be required to (BUY IT!) pillory
&gt; &gt; &gt; you in a public square (BUY IT!) and have a looping tape (BUY IT!) of
&gt; &gt; &gt; fingernails on a black board (BUY IT!) intermingled with a (BUY IT!)
&gt; &gt; &gt; theatrical reading of the Raining Data End User License Agreement (BUY
&gt; &gt; &gt; IT!).  Now if you'd like (BUY IT!) to download the GPLed version, (BUY
&gt; &gt; &gt; IT!) please fill out this handy form (BUY IT!) and we'll think about
&gt; &gt; &gt; it for a (BUY IT!) little while and get back to you.  (NOW BUY IT
&gt; &gt; &gt; ALREADY!)&quot;

&gt; &gt; &gt; What they should be saying is something like this:

&gt; &gt; &gt; &quot;We've got this great product here!  We think so much of our product
&gt; &gt; &gt; that we feel confidant in giving the community an open source version
&gt; &gt; &gt; so everyone can actually _experience_ how great our product is!  We
&gt; &gt; &gt; know that those of you that run commercial ventures will want to
&gt; &gt; &gt; purchase the commercial version of our product, but for those that
&gt; &gt; &gt; don't need commercial support and the amenities that go with it, use
&gt; &gt; &gt; this open version instead!  It's great for doing website backends, can
&gt; &gt; &gt; be the core of a new inventory control or accounting system.  Hell,
&gt; &gt; &gt; you could even make a great competitor to SugarCRM!  It's free!  It's
&gt; &gt; &gt; fantastic!  It begs to be used, enhanced and appriciated!
&gt; &gt; &gt; While the GPLed version of OpenQM comes with no support, I'm sure that
&gt; &gt; &gt; if you were to ask nicely in one of these places &lt;links&gt;, then one of
&gt; &gt; &gt; the many helpful people in the Multi-Value community would be happy to
&gt; &gt; &gt; help you or at least point you in the right direction.
&gt; &gt; &gt; We also have this great Wiki &lt;here&gt; that we encourage particiption in!

&gt; &gt; &gt; You can download OpenQM &lt;here&gt; or at one our many mirror sites, found
&gt; &gt; &gt; &lt;here&gt;.

&gt; &gt; &gt; Would you like to learn more about OpenQM and what Multi-Value
&gt; &gt; &gt; databases in general have to offer you?  See &lt;here&gt; or &lt;here&gt;.

&gt; &gt; &gt; If you'd like to learn more about how to use OpenQM as the back-end
&gt; &gt; &gt; for your website, you can learn more &lt;here&gt;.  In fact, if you're
&gt; &gt; &gt; interested, OpenQM can BE your webserver!  See this great project
&gt; &gt; &gt; &lt;here&gt;.

&gt; &gt; &gt; For those that would be interested in using OpenQM in a non-
&gt; &gt; &gt; interactive server role, we've got this great client library &lt;here&gt;
&gt; &gt; &gt; that can be used to connect to any OpenQM database and leverage all
&gt; &gt; &gt; that server horsepower for whatever you need, while allowing you the
&gt; &gt; &gt; flexibility of developing a nice graphic client that can run on
&gt; &gt; &gt; Windows, Linux or MacOS X!

&gt; &gt; &gt; For those with more commercial interests, we offer a commercial
&gt; &gt; &gt; edition of OpenQM that is licensed on a per-user basis for a paltry
&gt; &gt; &gt; $foo a seat.  Supported platforms include Windows, Linux, FreeBSD,
&gt; &gt; &gt; MacOS X and Palm!

&gt; &gt; &gt; Oh, and please respect our license.  OpenQM is licensed under the GPL
&gt; &gt; &gt; and if you were to violate it, well we'd be really upset and have to
&gt; &gt; &gt; burn your home to the ground, till the debris into the land and then
&gt; &gt; &gt; heavily salt the soil, all as a warning to others.  It worked for
&gt; &gt; &gt; Carthage and it WILL work for you.

&gt; &gt; &gt; Download OpenQM today and see what you've been missing!  Fedora Core
&gt; &gt; &gt; users can 'yum install openqm'!&quot;

&gt; &gt; &gt; Now which do you think people will gravitate to?  What would you as a
&gt; &gt; &gt; user/developer rather have?  A product with enthusiastic, excited
&gt; &gt; &gt; people behind it or some cold, dead, fish?

&gt; &gt; &gt; SourceForge isn't a necessity, but that stupid screen door has got to
&gt; &gt; &gt; go.

&gt; &gt; &gt; Don't be a Fish Monger.

&gt; &gt; &gt; g.

&gt; &gt; --
&gt; &gt; Ashley Chapman
&gt; &gt; Billabong Services Ltd- Hide quoted text -

&gt; &gt; - Show quoted text -
">

--
Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> Tom Potts &lt;karake...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T11:22:00 </POSTDATE>
Okay, so I think it's a good idea, -g- thinks it's a good idea --
anyone want to weigh in with downsides before I submit the proposal to
SourceForge?  I've been through all the steps apart from the last one,
where I need to basically justify it's inclusion on their servers.
What I've got so far is viewable here: http://docs.google.com/Doc?id=df3tmhkh_2chgwhn

Tom
</POST>
<POST>
<POSTER> sdavmor &lt;sdav...@systemstheory.net&gt; </POSTER>
<POSTDATE> 2007-09-11T11:52:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Ashley Chapman wrote:
&gt; Ten out of ten.  Well done boy, go to the top of the class.

&gt; On 10/09/2007, *geneb* &lt;f15 ... @gmail.com &lt;mailto:f15 ... @gmail.com&gt;&gt; wrote:
">

[snip geneb's post]

Besides being quite an intelligent set of suggestions, this was a very
entertaining read.
--
Cheers,
SDM -- a 21st century schizoid man
Systems Theory internet music project links:
official site &lt; www.systemstheory.net &gt;
MySpace MP3s &lt; www.myspace.com/systemstheory &gt;
CDBaby &lt; www.cdbaby.com/systemstheory &gt;
&quot;Soundtracks For Imaginary Movies&quot; CD released Dec 2004
&quot;Codetalkers&quot; CD coming very soon
NP: nothing
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T11:58:00 </POSTDATE>
On 11 Sep, 08:22, Tom Potts &lt;karake ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Okay, so I think it's a good idea, -g- thinks it's a good idea --
&gt; anyone want to weigh in with downsides before I submit the proposal to
&gt; SourceForge?  I've been through all the steps apart from the last one,
&gt; where I need to basically justify it's inclusion on their servers.
&gt; What I've got so far is viewable here: http://docs.google.com/Doc?id=df3tmhkh_2chgwhn
">

That's a very good synopsis Tom, thanks for spending the time to write
it up!

Another point you may want to include is that the only other Multi-
Value database system available on SourceForge is MaVerick and even
then OpenQM is feature-complete and stable, whereas MaVerick is not.
(Someone please correct me if this is not true!)

The documentation for OpenQM is also very important to include with
the project, but I don't know if its permissable to make it available
at SourceForge or another location.  The documentation that covers up
to v2.4 should be found as well since the 2.6 documentation covers
features not (yet) available in the 2.4 code branch.  If that's not
possible, then the 2.6 manuals can be marked up with notes that
indicate which features are not available in 2.4.

Another important thing to discover what the GPL version of OpenQM is
being used for.  Considering Martin has the email address of just
about everyone that ever downloaded it, finding out what they're using
it for shouldn't prove difficult. :)

g.
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-11T12:02:00 </POSTDATE>
When the initial GPL release was made, I was very excited at the prospect of
a commercially supported, open-source multivalue database.  I've suffered
great pain (and financial loss) from the abuse which a vendor can inflict
upon it's customers with a closed database, so this whole idea seemed to be
something who's time had come.

Unfortunately, Ladybridge do not seem to have understood the magnitude of
the opportunity which was in front of them.  For example, the database
industry was waking up to the fact that SQL databases are not that good at
storing objects.

Whilst I can understand the desire to fork the code base, I would much
rather somebody who can argue things better than me attempt one more time to
persuade Ladybridge of the value of the dual GPL/closed release.

I for one want Ladybridge to prosper.  My client, who was evaluating QM,
required an effective support organisation, for which they were well
prepared to pay for.  A forking of the codebase would remove this resource.

Basically, I'm saying that a fork should the an option of last resort.

On 11/09/2007, Tom Potts &lt;karake ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Okay, so I think it's a good idea, -g- thinks it's a good idea --
&gt; anyone want to weigh in with downsides before I submit the proposal to
&gt; SourceForge?  I've been through all the steps apart from the last one,
&gt; where I need to basically justify it's inclusion on their servers.
&gt; What I've got so far is viewable here:
&gt; http://docs.google.com/Doc?id=df3tmhkh_2chgwhn

&gt; Tom
">

--
Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T12:02:00 </POSTDATE>
On 11 Sep, 08:52, sdavmor &lt;sdav ... @systemstheory.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Ashley Chapman wrote:
&gt; &gt; Ten out of ten.  Well done boy, go to the top of the class.

&gt; &gt; On 10/09/2007, *geneb* &lt;f15 ... @gmail.com &lt;mailto:f15 ... @gmail.com&gt;&gt; wrote:

&gt; [snip geneb's post]

&gt; Besides being quite an intelligent set of suggestions, this was a very
&gt; entertaining read.
&gt; --
">

Thank you for the kind words - both of you. :)

g.
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-11T12:10:00 </POSTDATE>
On 11/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Another point you may want to include is that the only other Multi-
&gt; Value database system available on SourceForge is MaVerick and even
&gt; then OpenQM is feature-complete and stable, whereas MaVerick is not.
&gt; (Someone please correct me if this is not true!)
">

Well, it's being activly developed at the moment.  It went all quiet when
OpenQM stole the limelight, but interest is being rekindled.

Featurewise, it's pretty complete.  It's stability would undoubtedly improve
with the sort of testing that the opensource community would inflict upon
it.  In exactly the same way as QM has benefited from the GPL release which
shook out some of the bugs.

NB. I'm registered on Sourceforge as one of the developers, although I've
not contributed any code.

The documentation for OpenQM is also very important to include with

<QUOTE PREVIOUSPOST="
&gt; the project, but I don't know if its permissable to make it available
&gt; at SourceForge or another location.  The documentation that covers up
&gt; to v2.4 should be found as well since the 2.6 documentation covers
&gt; features not (yet) available in the 2.4 code branch.  If that's not
&gt; possible, then the 2.6 manuals can be marked up with notes that
&gt; indicate which features are not available in 2.4.
">

Some time ago, I asked Martin if the documentation was covered by the GPL.
He replied that it was not, although it is (currently) available for
download by anybody.

Another important thing to discover what the GPL version of OpenQM is

<QUOTE PREVIOUSPOST="
&gt; being used for.  Considering Martin has the email address of just
&gt; about everyone that ever downloaded it, finding out what they're using
&gt; it for shouldn't prove difficult. :)

&gt; g.
">

--
Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T12:35:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Whilst I can understand the desire to fork the code base, I would much
&gt; rather somebody who can argue things better than me attempt one more time to
&gt; persuade Ladybridge of the value of the dual GPL/closed release.

&gt; I for one want Ladybridge to prosper.  My client, who was evaluating QM,
&gt; required an effective support organisation, for which they were well
&gt; prepared to pay for.  A forking of the codebase would remove this resource.

&gt; Basically, I'm saying that a fork should the an option of last resort.
">

I agree with you Ashley.  However, it can't hurt to have the resources
in place just in case.

Keep in mind that from what I understand of all the 'we don't support
this!' disclaimers on the OpenQM website, _no_ GPL version of OpenQM
is eligable(sp?) for commercial support of any kind.  To obtain
commercial support, you must buy licenses for the non-GPL product.
To me that means that if your client wishes to use OpenQM _and_ get
support from Ladybridge, they cannot use the GPL version of OpenQM.

RedHat has been mentioned a few times and it's important to realize
that RedHat at its core is NOT a software vendor.  They're a _support_
vendor and they've become wildly successful at it.  There is no reason
why Ladybridge cannot accomplish the same task in a similar fashion.

I've done a lot of searching and reading the past couple of days and I
have been completely unable to find anything from Ladybridge that
actually promotes OpenQM as a project.  There has been no product
evangelizing that hasn't come from my keyboard.   I'm only one voice
and OpenQM as a project needs more than just me.  Ladybridge needs to
scream as loud and as long as it can; &quot;Look at this thing!  It's
f**king brilliant!  Come see it!  Use it!  Enjoy it!&quot;  Unfortunately
from what I've seen in the past I don't think that Ladybridge has the
corporate will to do this.  They've dropped a box on the floor,
mumbled some vague words about it and then got supremely annoyed that
no one was much interested in spending time working on it.

Well DUH.

One thing they need to consider is the marketplace they're in.
They're surrounded on all sides by MV vendors that charge _obscene_
amounts of money for a product that at the end of the day is no better
than theirs.  MV users and developers have been used to paying a lot
of money for a lot of years for their platform of choice.  Suddenly
here comes this upstart, Ladybridge and quietly drops a commercial
quality MV product on the world in GPL form.  You ever see someone go
chumming for sharks?  That's exactly what happened, but on a very,
very quiet scale.  It was quiet because a) the sharks had a mouthful
of OpenQM and couldn't talk much, and b) they were so intidmidated by
the process of actually _getting_ a copy of OpenQM that they didn't
feel comfortable making any noise if they could stomach the abrasive
process of getting OpenQM in the first place.

OpenQM is in dire need of some momentum as project.  I'm happy to
start shoving as hard as I can, but Ladybridge needs to step up and
push some too because I can _guarantee_ if I'm left to my own devices,
they will NOT like some of the nonsense that's likely to come out of
my keyboard. :)

g.
</POST>
<POST>
<POSTER> Tom Potts &lt;karake...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T12:44:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Whilst I can understand the desire to fork the code base, I would much
&gt; rather somebody who can argue things better than me attempt one more time to
&gt; persuade Ladybridge of the value of the dual GPL/closed release.
">

Well, I agree!  The trouble with Ladybridge being in charge of the GPL
code, however, is that developers aren't working together or swapping
code; it simply makes it into the main source (which, at the moment,
may not reach other GPL developers for six months!) or it doesn't.
Personally, I don't like the way that people are forced to reveal
personal information before being able to acquire a copy of OpenQM,
but for me the overwhelming advantage of SourceForge (or similar)
would be community development.  Feature requests, bug lists - these
are currently maintained by Ladybridge internally.  When Martin says
&quot;We'll put this on the request list&quot;, it may pop up later on; if it's
submitted to a forum, it may be that someone reads it, thinks 'yeah, I
could do that', and does.  To be sure, people can do that with *this*
forum, but I think a place like SourceForge would be of great use.

<QUOTE PREVIOUSPOST="
&gt; Basically, I'm saying that a fork should the an option of last resort.
">

Yes, I can see your point.  Frankly, forking OpenQM could be seen as a
hostile act, and the last thing I want is Ladybridge to turn round and
say &quot;that's it.&quot;  Besides which, Wikipedia defines a fork as &quot;creating
a distinct piece of software&quot; - I definitely don't want to do that.
So, I'd rather not call it a fork.
What I really want to see is a way for OpenQM developers to easily
download, modify and upload code for OpenQM.  When Ladybridge release
a new version of OpenQM under the GPL, that goes up on SourceForge as
the next stable release, hopefully with some or all of the community-
written changes included.  If we fork the source, we loose the support
of Ladybridge, Martin, and all the man-hours and experience they have
and will have.  I don't think anyone wants that.

I guess the most important person I'm waiting to hear from on this
topic is Martin.  Without his blessing, I think it really would be a
fork.
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T12:50:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; &gt; Another point you may want to include is that the only other Multi-
&gt; &gt; Value database system available on SourceForge is MaVerick and even
&gt; &gt; then OpenQM is feature-complete and stable, whereas MaVerick is not.
&gt; &gt; (Someone please correct me if this is not true!)

&gt; Well, it's being activly developed at the moment.  It went all quiet when
&gt; OpenQM stole the limelight, but interest is being rekindled.
">

That activity isn't very apparent.  The last release was in March of
2006 and there is just about two years
between thread topics in the Open Discussion forums. :(

<QUOTE PREVIOUSPOST="
&gt; Featurewise, it's pretty complete.  It's stability would undoubtedly improve
&gt; with the sort of testing that the opensource community would inflict upon
&gt; it.  In exactly the same way as QM has benefited from the GPL release which
&gt; shook out some of the bugs.
">

I'm sure it could.  I'm kind of disturbed that it appears to be wholly
implemented in Java though. It certainly won't be fast. :)

<QUOTE PREVIOUSPOST="
&gt; Some time ago, I asked Martin if the documentation was covered by the GPL.
&gt; He replied that it was not, although it is (currently) available for
&gt; download by anybody.
">

This kind of worries me.  (Nah, it gives me a screeching case of the
willies.)  This leaves the option open for them to go, &quot;Fine, you want
to do your own thing with OpenQM?  No problem.  But we only make our
documentation available to &lt;firewall&gt; registered customers.&quot;
:(

g.
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-11T12:56:00 </POSTDATE>
On 11/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; &gt; Another point you may want to include is that the only other Multi-
&gt; &gt; &gt; Value database system available on SourceForge is MaVerick and even
&gt; &gt; &gt; then OpenQM is feature-complete and stable, whereas MaVerick is not.
&gt; &gt; &gt; (Someone please correct me if this is not true!)

&gt; &gt; Well, it's being activly developed at the moment.  It went all quiet
&gt; when
&gt; &gt; OpenQM stole the limelight, but interest is being rekindled.

&gt; That activity isn't very apparent.  The last release was in March of
&gt; 2006 and there is just about two years
&gt; between thread topics in the Open Discussion forums. :(
">

Discussions are through the mailing lists.  Several messages per day.  The
current release is to be found on the snapshot page.
http://www.maverick-dbms.org/snapshot/index.html

<QUOTE PREVIOUSPOST="
&gt; Featurewise, it's pretty complete.  It's stability would undoubtedly
&gt; improve
&gt; &gt; with the sort of testing that the opensource community would inflict
&gt; upon
&gt; &gt; it.  In exactly the same way as QM has benefited from the GPL release
&gt; which
&gt; &gt; shook out some of the bugs.

&gt; I'm sure it could.  I'm kind of disturbed that it appears to be wholly
&gt; implemented in Java though. It certainly won't be fast. :)
">

Java has a bad name for speed, but it's mainly from poorly coded and badly
designed applications.  MAverick has been done a lot better than this norm.

<QUOTE PREVIOUSPOST="
&gt; &gt; Some time ago, I asked Martin if the documentation was covered by the
&gt; GPL.
&gt; &gt; He replied that it was not, although it is (currently) available for
&gt; &gt; download by anybody.

&gt; This kind of worries me.  (Nah, it gives me a screeching case of the
&gt; willies.)  This leaves the option open for them to go, &quot;Fine, you want
&gt; to do your own thing with OpenQM?  No problem.  But we only make our
&gt; documentation available to &lt;firewall&gt; registered customers.&quot;
&gt; :(
">

Precisely.

g.

<QUOTE PREVIOUSPOST="

">

--
Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-11T12:59:00 </POSTDATE>
As an aside,  are you the same guy that has a F15 cockpit in his garage?

Ashley
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T13:17:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; &gt; That activity isn't very apparent.  The last release was in March of
&gt; &gt; 2006 and there is just about two years
&gt; &gt; between thread topics in the Open Discussion forums. :(

&gt; Discussions are through the mailing lists.  Several messages per day.  The
&gt; current release is to be found on the snapshot page. http://www.maverick-dbms.org/snapshot/index.html
">

I'll look into it further.  Thanks Ashley.  I'll dig through the
mailing list archives to see what I've been missing. :)

<QUOTE PREVIOUSPOST="
&gt; &gt; I'm sure it could.  I'm kind of disturbed that it appears to be wholly
&gt; &gt; implemented in Java though. It certainly won't be fast. :)

&gt; Java has a bad name for speed, but it's mainly from poorly coded and badly
&gt; designed applications.  MAverick has been done a lot better than this norm.
">

Well even so, you're (AFAIK) using a byte code interpreted language to
execute a p-code interepreted language. :)

g.
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T13:18:00 </POSTDATE>
On 11 Sep, 09:59, &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-

<QUOTE PREVIOUSPOST="
services.co.uk&gt; wrote:
&gt; As an aside,  are you the same guy that has a F15 cockpit in his garage?

&gt; Ashley
">

*cough* Er.. yes, that would be me. :)

It's not in a garage any longer.  I've got 2100sqft shop that it lives
in.  My wife wants it marked &quot;TOYS&quot; in big letters. :)

g.
</POST>
<POST>
<POSTER> Dale &lt;dale_bened...@flightcraft.ca&gt; </POSTER>
<POSTDATE> 2007-09-11T13:40:00 </POSTDATE>
I'm tacking my message here and it sort of pertains to everything
here.

First let me say that unless I win a lottery, I have no intention of
trying to improve/alter/fix any open source software.  I just don't
have the time to spare.

If you read some past postings, Martin said that there has been very
little if any code submissions from the 'open source' community in
regards to openQM.  It is my feeling/and probably Martin's as well
that most people's view is free software for the taking.

Now if you really want to help the openQM project it may be better to
get a conversation going with Martin and see if there is a different
way of getting to the same end but with Martin's approval and
guidance.  After all, he has been the guiding light so far in the
project.

I know from experience that having code forks and trying to support
multiple versions of the software keeps the drug manufacturers happy
by the increased flow in headache remedies.  And when those remedies
fail the scotch distillers then start getting an increase in product
flow.

My vote here is if you want to add to the project and get the open
source versions out quicker, you should see if Martin will cooperate.
Also if you want to try and create a version the Martin would consider
not part of the core of the product (eg. clustering) Martin may give
some help in accomplishing such tasks.

Donno?!?!?!?

Just my 2 cents worth,

And it may not be worth that.

Dale

On Sep 10, 7:00 am, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Why isn't OpenQM available on SourceForge?

&gt; g.
">
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T14:26:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; If you read some past postings, Martin said that there has been very
&gt; little if any code submissions from the 'open source' community in
&gt; regards to openQM.  It is my feeling/and probably Martin's as well
&gt; that most people's view is free software for the taking.
">

That is the hallmark of the Cathedral attitude.  That thought process
automatically assumes that everyone wants something
for nothing and will never contribute anything back unless forced.
GPL projects in Cathedral enclosures will _always_ fail and the bean
counters will go, &quot;See!  I told you it wouldn't work!&quot;  It's a self-
fufiling prophecy of failure.

What you and others need to understand is that there is this huge
number of Bazaar people out there that enjoy actively participating in
the projects and tools that they use every day.  If there wasn't,
SourceForge wouldn't have over 130,000 projects.

The way that OpenQM is currently presented does not encourage any
participation beyond a few cursory words that boil down to, &quot;You suck
if you don't contribute something back.&quot;

What I (and I _really_ hope others) are trying to say here is that the
way things are done now, OpenQM is destined to fail as an open source
project.  It almost appears done that way on purpose, basically
defective by design.  The process, not the product.
As users of OpenQM, we believe enough in the product to do whatever it
takes to make sure it doesn't die on the vine.  If that means setting
up our own little Bazaar and putting up bright, gaudy signs to attract
as much attention as possible, then so be it.  OpenQM is too important
to the multi-value community at large to be allowed to fail.  If the
current stewards cannot or will not step up and take charge then the
decision will be made for them.  It's brutal and not very nice, but
that is where it sits.

I cannot stress enough that the breaking (or forking if you will)
point hasn't been reached yet.  However, I can see that it's not very
far off if something doesn't happen soon.

<QUOTE PREVIOUSPOST="
&gt; I know from experience that having code forks and trying to support
&gt; multiple versions of the software keeps the drug manufacturers happy
&gt; by the increased flow in headache remedies.  And when those remedies
&gt; fail the scotch distillers then start getting an increase in product
&gt; flow.
">

If we would be so presumptuous(sp!) as to assume that is what
Ladybridge would do, you're correct.  However, if it comes to pass
that the code base is forked, it won't be their responsibility to
support it, it'll be ours.  Oh wait, it's ours NOW.

<QUOTE PREVIOUSPOST="
&gt;From the download page:
">

&quot;There is absolutely no support for the open source version. A
commercial licence comes with 60 days free support. After that time,
support is available on a &quot;pay as you go&quot; basis where you only pay for
your actual use of the service rather than the traditional annual
contract. If you are using the open source version for business
purposes, loss of service while you investigate problems could have
serious implications.&quot;

That's about as blunt as it gets.  Not even a pointer to this or other
forums as a place for assistance for the GPL version of OpenQM.
There is even no (that I've found - and I admit, I haven't looked very
hard) offer of chargable support for the GPL version, so what support
headaches are going to be caused to them?  None.  Nada.  Diddly
squat.  The idea that support &quot;headaches&quot; would be the result of a
fork is frankly silly.  All of us here are professionals that have
worked with multiple flavors of MV products.  I've personally worked
with Advanced Revelation, R83, UniVerse, D3/Linux and OpenQM.  At the
core, they're all the same thing!  Multi-valued data with a BASIC
compiler built in.  Yes, each system has it's own little quirks, but
that's part in parcel of the industry.  Everyone has to do something a
little different from the other guy so they can charge $500 a seat +
mandatory support and make some pointy haired weasel think they're
getting a great deal.  Ladybridge is the shining exception to that.
They're being different because they want to be _BETTER_, not
richer.   How do I know that?  Because you don't release the source
code to your flagship product as open source if you're a money-
grubbing PHB.

If a fork were to happen, it would mean no difference at all from a
support standpoint.  The community would continue to support the open
source version and Ladybridge would continue to ignore it.  At least
in my opinion.

<QUOTE PREVIOUSPOST="
&gt; My vote here is if you want to add to the project and get the open
&gt; source versions out quicker, you should see if Martin will cooperate.
&gt; Also if you want to try and create a version the Martin would consider
&gt; not part of the core of the product (eg. clustering) Martin may give
&gt; some help in accomplishing such tasks.
">

At this point, I'd be happy if Martin showed up long enough to tell me
to piss off. :)  I don't mind talking to myself, but it tends to
bother those around me. :)

BTW, for those that have an interest in this whole Cathedral/Bazaar
thing that I keep talking about, please see this:
http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ I
think you'll enjoy it.

g.
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-11T16:01:00 </POSTDATE>
On 11/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Keep in mind that from what I understand of all the 'we don't support
&gt; this!' disclaimers on the OpenQM website, _no_ GPL version of OpenQM
&gt; is eligable(sp?) for commercial support of any kind.  To obtain
&gt; commercial support, you must buy licenses for the non-GPL product.
&gt; To me that means that if your client wishes to use OpenQM _and_ get
&gt; support from Ladybridge, they cannot use the GPL version of OpenQM.
">

Well, the idea was that the client can either:-
1. Use the commercial version, and keep the GPL version handy should
Ladybridge not be able to support the product.
2. Use the GPL version, and the clients &quot;big pile of money&quot; to persuade
Martin to come in and sort out any problems.

This idea got blown apart when the GPL version diverged from the commercial
release.  The client has subsequently chosen another database, so this
window of opportunity has now closed.  Such a great shame, as I put a HUGE
amount of effort into it.

RedHat has been mentioned a few times and it's important to realize

<QUOTE PREVIOUSPOST="
&gt; that RedHat at its core is NOT a software vendor.  They're a _support_
&gt; vendor and they've become wildly successful at it.  There is no reason
&gt; why Ladybridge cannot accomplish the same task in a similar fashion.
">

Yes.  The same can also be said for MySQL, which was frequently used as an
example of how Ladybridge envisioned the dual licensing system to work.  I
suspect that Ladybridge have avoided becoming a services company because it
would require a dramatic increase in staff levels.

I've done a lot of searching and reading the past couple of days and I

<QUOTE PREVIOUSPOST="
&gt; have been completely unable to find anything from Ladybridge that
&gt; actually promotes OpenQM as a project.  There has been no product
&gt; evangelizing that hasn't come from my keyboard.   I'm only one voice
&gt; and OpenQM as a project needs more than just me.  Ladybridge needs to
&gt; scream as loud and as long as it can; &quot;Look at this thing!  It's
&gt; f**king brilliant!  Come see it!  Use it!  Enjoy it!&quot;  Unfortunately
&gt; from what I've seen in the past I don't think that Ladybridge has the
&gt; corporate will to do this.  They've dropped a box on the floor,
&gt; mumbled some vague words about it and then got supremely annoyed that
&gt; no one was much interested in spending time working on it.
">

Many months ago, I had some spare time and offered to issue press releases
(which I have experience of).  Martin felt that this was something that
should come from Ladybridge, so declined my offer.  Not seen anything
subsequently.

Well DUH.

<QUOTE PREVIOUSPOST="
&gt; One thing they need to consider is the marketplace they're in.
&gt; They're surrounded on all sides by MV vendors that charge _obscene_
&gt; amounts of money for a product that at the end of the day is no better
&gt; than theirs.
">

The other vendors know it's an obsolete technology, so are squezzing the
last drop of blood out of their customers.  I had hoped that OpenQM would
have created a buzz, and been seen as the database which solves a lot of web
and object database requirements.  Something that it was uniquely positioned
to do.  Alas, this has been squandered, in order to preserve revenues from
the small number of multivalue users who have been able to convert their
applications to run on QM.  That's really just a drop in the ocean by
comparison.

MV users and developers have been used to paying a lot

<QUOTE PREVIOUSPOST="
&gt; of money for a lot of years for their platform of choice.  Suddenly
&gt; here comes this upstart, Ladybridge and quietly drops a commercial
&gt; quality MV product on the world in GPL form.  You ever see someone go
&gt; chumming for sharks?  That's exactly what happened, but on a very,
&gt; very quiet scale.  It was quiet because a) the sharks had a mouthful
&gt; of OpenQM and couldn't talk much, and b) they were so intidmidated by
&gt; the process of actually _getting_ a copy of OpenQM that they didn't
&gt; feel comfortable making any noise if they could stomach the abrasive
&gt; process of getting OpenQM in the first place.

&gt; OpenQM is in dire need of some momentum as project.  I'm happy to
&gt; start shoving as hard as I can, but Ladybridge needs to step up and
&gt; push some too because I can _guarantee_ if I'm left to my own devices,
&gt; they will NOT like some of the nonsense that's likely to come out of
&gt; my keyboard. :)
">

It's time for some tough love I think.

g.

<QUOTE PREVIOUSPOST="

">

--
Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> &quot;Steve Bush&quot; &lt;Steve.B...@NEOSYS.COM&gt; </POSTER>
<POSTDATE> 2007-09-11T16:20:00 </POSTDATE>
Glad you found the Cathedral and Bazaar interesting gene

<QUOTE PREVIOUSPOST="
&gt; BTW, for those that have an interest in this whole
&gt; Cathedral/Bazaar thing that I keep talking about, please see this:
&gt; http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar
&gt; I think you'll enjoy it.
">
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T18:38:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; Well, the idea was that the client can either:-
&gt; 1. Use the commercial version, and keep the GPL version handy should
&gt; Ladybridge not be able to support the product.
">

That's what code escrow companies are for.

I found the bit you were referring to:

&quot;I am running a copy of commercial QM, but I want to keep a copy of
OpenQM around in case anything happens to Ladybridge.
A: OpenQM can be used without restrictions. Were Ladybridge to ever
cease doing business, you would have free, unrestricted, use and
improvement rights to the open source version without restriction, as
provided for in the terms of the commercial license.&quot;

Isn't this some kind of comittment(sp) on the part of Ladybridge to
keep their GPLd version current with what is currently being offered?

<QUOTE PREVIOUSPOST="
&gt; 2. Use the GPL version, and the clients &quot;big pile of money&quot; to persuade
&gt; Martin to come in and sort out any problems.
">

That's kind of unrealistic.

<QUOTE PREVIOUSPOST="
&gt; This idea got blown apart when the GPL version diverged from the commercial
&gt; release.  The client has subsequently chosen another database, so this
&gt; window of opportunity has now closed.  Such a great shame, as I put a HUGE
&gt; amount of effort into it.
">

The scary thing is that for all intensive purposes, the code base has
already been forked and Ladybridge did it themselves.

<QUOTE PREVIOUSPOST="
&gt; Yes.  The same can also be said for MySQL, which was frequently used as an
&gt; example of how Ladybridge envisioned the dual licensing system to work.  I
&gt; suspect that Ladybridge have avoided becoming a services company because it
&gt; would require a dramatic increase in staff levels.
">

The problem is that for dual licensing to work as in the MySQL model,
you've got to pick the right license to begin with, but I'm not going
there right now. :)

<QUOTE PREVIOUSPOST="
&gt; Many months ago, I had some spare time and offered to issue press releases
&gt; (which I have experience of).  Martin felt that this was something that
&gt; should come from Ladybridge, so declined my offer.  Not seen anything
&gt; subsequently.
">

It's starting to smell like a fisherman's wharf around here. *sigh*

<QUOTE PREVIOUSPOST="
&gt; The other vendors know it's an obsolete technology, so are squezzing the
&gt; last drop of blood out of their customers.  I had hoped that OpenQM would
&gt; have created a buzz, and been seen as the database which solves a lot of web
&gt; and object database requirements.  Something that it was uniquely positioned
&gt; to do.  Alas, this has been squandered, in order to preserve revenues from
&gt; the small number of multivalue users who have been able to convert their
&gt; applications to run on QM.  That's really just a drop in the ocean by
&gt; comparison.
">

But what makes it an obsolete technology?  I've yet to run into a
situation where MV didn't handily kick the living snot out of
any equivalent SQL solution and with half the complexity to boot.

Is the Multi-Value database really obsolete, or is that just the
agenda that SQL users and vendors are pushing?

<QUOTE PREVIOUSPOST="
&gt; It's time for some tough love I think.
">

I completely agree with you Ashley.

What really bothers me is that this thread has gone on for two days
and there has been nothing from anyone representing Ladybridge.  Are
they that busy or just that apathetic?

g.
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T18:39:00 </POSTDATE>
On 11 Sep, 13:20, &quot;Steve Bush&quot; &lt;Steve.B ... @NEOSYS.COM&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Glad you found the Cathedral and Bazaar interesting gene
">

I actually discovered it in 1997 while working as the sysadmin for a
new ISP.

You reminded me of it at a time when I _really_ needed to remember
it. :)

g.
</POST>
<POST>
<POSTER> Doug Dumitru &lt;d...@easyco.com&gt; </POSTER>
<POSTDATE> 2007-09-11T19:25:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
geneb wrote:
">

[ ... most snipped ... ]

<QUOTE PREVIOUSPOST="
&gt; What really bothers me is that this thread has gone on for two days
&gt; and there has been nothing from anyone representing Ladybridge.  Are
&gt; they that busy or just that apathetic?
">

I have been intentionally staying out of this discussion, but will
comment here.

I am sure Martin is at least scanning this thread, although I suspect he
is skipping over large pieces, just as I am.  If you want to get Martin
involved in the discussion, please invite him to comment.  Say something
specific.  He has his view of the world and based on his contributions,
I think that his view is the most compelling of any of us.  It might not
match the world you would like to see, but OpenQM is still a great value
to all of us.

It is not a &quot;free lunch&quot;, but that is a bit much to ask for.

If you do decide to fork OpenQM, you are welcome to.  I would prefer
that you do so with the blessing and cooperation of Ladybridge, but
there is no obligation for you to do that.  Perhaps some hybrid that
takes OpenQM in new directions as a fork would work.  Perhaps not.  That
is what discussion groups are all about.

If you do fork OpenQM, I would suggest that you should kindly &quot;ask&quot;
Martin for permission.  Not that he has to give it to you, but you
should ask, and I am sure he will not withhold it.  Even more
importantly is that you &quot;ask&quot; before taking stuff that is not code.
Things like the product name, documentation, use of this email list.
All of these things are beyond the scope of what is GPL and would
require Martin's OK.

I have thought about an very &quot;alternative&quot; fork to QM.  Basically it
would be OpenQM as a command-line scripting language with minimal
database support.  No TCL.  No accounts.  Very different from what most
of us thinks of as MV, but a hell of an improvement over Perl, PHP, and
shell scripts.  But then again, I work for a living so this is unlikely
to happen anytime soon.

Doug Dumitru
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-12T00:06:00 </POSTDATE>
On Sep 11, 4:25 pm, Doug Dumitru &lt;d ... @easyco.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; geneb wrote:

&gt; [ ... most snipped ... ]

&gt; &gt; What really bothers me is that this thread has gone on for two days
&gt; &gt; and there has been nothing from anyone representing Ladybridge.  Are
&gt; &gt; they that busy or just that apathetic?

&gt; I have been intentionally staying out of this discussion, but will
&gt; comment here.

&gt; I am sure Martin is at least scanning this thread, although I suspect he
&gt; is skipping over large pieces, just as I am.  If you want to get Martin
&gt; involved in the discussion, please invite him to comment.  Say something
&gt; specific.  He has his view of the world and based on his contributions,
&gt; I think that his view is the most compelling of any of us.  It might not
&gt; match the world you would like to see, but OpenQM is still a great value
&gt; to all of us.
">

Hey Martin!  Sing out! :)

<QUOTE PREVIOUSPOST="
&gt; It is not a &quot;free lunch&quot;, but that is a bit much to ask for.
">

Wow, you just don't get it do you?  This whole discussion isn't about
free/not free.  It's about a great product that's been open sourced
and then apparently left to die on purpose by the company that sent it
out into the world.  From appearances it was done to &quot;prove&quot; that this
kind of thing doesn't work.  That may not be the fact of the matter,
but it sure looks that way to me.

<QUOTE PREVIOUSPOST="
&gt;From what I see, things are going like this..
">

1. OpenQM was released with little fanfare and no notice to anyone
outside the multi-value community.

2. A few source releases were made that significantly lag the
commercial release, despite assurances (from at least one source) to
the contrary.

3. Attempts to publicize the project in the form of press
announcements has been discouraged.

4. The open source branch appears to be basically orphaned by being a
two full releases (2.4 was the last release, 2.7 is
current)

5. Periodic talk from the vendor about abandoning the project due to
lack of participation.

Like I mentioned before, this is nothing more than a pre-calculated
formula for failure.  &quot;We're gonna do it like this.  Everybody make
sure they look shocked and depressed when it falls flat, k?&quot;

One thing that just occurred to me - the way the whole thing is
structured, they appear to actively discourage community enhancement.
Unless I'm completely blind, I can find no mention whatsoever of what
people need to do in order to contribute to the project, nor what
would become of their contribution after the fact.  Because of how the
system appears to be structured, it's actually in Ladybridge's best
interests to prevent the GPL code base they provide from diverging at
all from the commercial release.  Otherwise it would become a
nightmare to provide new source drops because they'd have to &quot;port&quot;
the new features and bug fixes from the commercial version to the GPL
version.  They can't take patches from the GPL'd version because that
would &quot;taint&quot; the commercial code base unless they can convince the
contributor to license the patch to them as something other than the
GPL.  (LGPL or BSD maybe?)  However, they really can't do that because
the derived code is based upon GPLed code.  My god, did you guys think
about this at all before releasing OpenQM?

This whole project is built like a one way street!  Ladybridge can
contribute to the community via OpenQM and the community can
contribute to OpenQM, but Ladybridge is expressly forbidden from
enjoying the fruit of that contribution and yet complains that no one
participates.  Gah, my head hurts now.

Someone tell me I'm barking mad or at least becoming a frothing
conspiracy theorist.  Is this actually what's going on?

g.
</POST>
<POST>
<POSTER> &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-services.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-12T04:56:00 </POSTDATE>
Composite reply to various points:-

<QUOTE PREVIOUSPOST="
&gt;&gt; 2. Use the GPL version, and the clients &quot;big pile of money&quot; to persuade
&gt;&gt; Martin to come in and sort out any problems.
&gt;That's kind of unrealistic.
">

What I meant was more like this:-
2. Use some of the many experienced C programmers that this client has on
staff already, along with Ladybridge consultancy services.  If Ladybridge
are unable/unwilling to do this, then the client can afford to retain the
necessary expertise.  The client can either throw the money at Ladybridge,
or their in-house team.   Not dependent on the vendor.

This client has been hidebound in the past by a vendor who would not make
necessary bug-fixes.  Even when threatened with the proverbial &quot;truck load
of cash&quot;.

<QUOTE PREVIOUSPOST="
&gt; &gt; I am sure Martin is at least scanning this thread, although I suspect he

&gt; &gt; is skipping over large pieces, just as I am.  If you want to get Martin
&gt; &gt; involved in the discussion, please invite him to comment.  Say something
&gt; &gt; specific.  He has his view of the world and based on his contributions,
&gt; &gt; I think that his view is the most compelling of any of us.  It might not
&gt; &gt; match the world you would like to see, but OpenQM is still a great value
&gt; &gt; to all of us.

&gt; Hey Martin!  Sing out! :)

&gt; &gt; It is not a &quot;free lunch&quot;, but that is a bit much to ask for.

&gt; Wow, you just don't get it do you?  This whole discussion isn't about
&gt; free/not free.  It's about a great product that's been open sourced
&gt; and then apparently left to die on purpose by the company that sent it
&gt; out into the world.  From appearances it was done to &quot;prove&quot; that this
&gt; kind of thing doesn't work.  That may not be the fact of the matter,
&gt; but it sure looks that way to me.
">

Exactly.  Every time this sort of discussion comes up, people seem to
misinterpret it as a bunch of whiners wanting something for free.  Nothing
is further from the truth.  We want OpenQM to succeed in a really major
way.  We Want Martin to become a billionaire from the revenues!

<QUOTE PREVIOUSPOST="
&gt; 4. The open source branch appears to be basically orphaned by being a
&gt; two full releases ( 2.4 was the last release, 2.7 is
&gt; current)
">

The Openqm.com website proudly proclaims
&quot; *Taking Multivalue Where It Has Never Been Before...&quot; *
&quot;OpenQM is the *only* multivalue database product available both as a fully
supported commercial product and in open source form under the General
Public Licence.

Well, this is hardly the case any more.  The GPL product is a much older
version, and has major bits missing.  There is only GPL code available for
one platform (Linux), out of the many supported by the commercial release. I
think the statements are misleading.

5. Periodic talk from the vendor about abandoning the project due to

<QUOTE PREVIOUSPOST="
&gt; lack of participation.
">

Some examples of participation:-
1.  Some time ago, there was a  discussion about the possibility of adding
record/field level security to QM.  We worked out a mechanism for this,
which I offered to code up.  I've done this before, so it was not going to
take too long.  I offered that my modifications would be provided to
Ladybridge under their terms, so it could go into the main code base.
Martin thought that the changes were quite small, and so would rather do
them himself in order to integrate them properly with the rest of QM.  Fair
enough, he would undoubtedly do a better job.  So far, this has not appeared
in QM.
2. The tape utilities written by Tom deLombarde.  A Major enhancement, which
is vital to many people considering a migration from other MV products.
3. The object enhancements.  A huge amount of discussion and feedback from
the community on this subject.  Definitely something better done by
Ladybridge, but something that would have been much harder to get right
without our input.  Tested extensively by the community.
4. The PHP interface, again by Tom deLombarde.
5. The Bash CGI interface which was created by Tom, Glen and myself.
6. the QM version of the MVWWW gateway created by Glen
7. The Debian package of QM created by Glen
8. The Coyote web server. Well, not really included, but undoubtedly works
better since Doug has had access to the QM sourcecode.
9. The nasty segfault which was caused by a bug in the QM initialisation.
Doug sorted that one out (because he was hosting my server), and passed the
fix back to Ladybridge.
10. My unreleased Application development framework,
http://billabong-services.co.uk/anji
11. Glen's work on an XML interface

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; One thing that just occurred to me - the way the whole thing is
&gt; structured, they appear to actively discourage community enhancement.
&gt; Unless I'm completely blind, I can find no mention whatsoever of what
&gt; people need to do in order to contribute to the project, nor what
&gt; would become of their contribution after the fact.  Because of how the
&gt; system appears to be structured, it's actually in Ladybridge's best
&gt; interests to prevent the GPL code base they provide from diverging at
&gt; all from the commercial release.  Otherwise it would become a
&gt; nightmare to provide new source drops because they'd have to &quot;port&quot;
&gt; the new features and bug fixes from the commercial version to the GPL
&gt; version.  They can't take patches from the GPL'd version because that
&gt; would &quot;taint&quot; the commercial code base unless they can convince the
&gt; contributor to license the patch to them as something other than the
&gt; GPL.  (LGPL or BSD maybe?)  However, they really can't do that because
&gt; the derived code is based upon GPLed code.  My god, did you guys think
&gt; about this at all before releasing OpenQM?
">

I think Martin did.  One of the reasons why he can only accept submissions
that are clearly the work of one person who provides it under a BSD
licence.  Okay, that's restricting the flow of input, but not a good reason
to whine about lack of participation.  It's the same for MySQL.

This whole project is built like a one way street!  Ladybridge can

<QUOTE PREVIOUSPOST="
&gt; contribute to the community via OpenQM and the community can
&gt; contribute to OpenQM, but Ladybridge is expressly forbidden from
&gt; enjoying the fruit of that contribution and yet complains that no one
&gt; participates.  Gah, my head hurts now.

&gt; Someone tell me I'm barking mad or at least becoming a frothing
&gt; conspiracy theorist.  Is this actually what's going on?
">

Nope, Martin understands this.  The problem seems to be that he thinks that
the benefit to QM will be from code contributions.  The reality is that the
benefits come from the building of an enthusiastic community and thus market
share.

g.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; &gt; The other vendors know it's an obsolete technology, so are squeezing the
&gt; &gt; last drop of blood out of their customers.  I had hoped that OpenQM
&gt; would
&gt; &gt; have created a buzz, and been seen as the database which solves a lot of
&gt; web
&gt; &gt; and object database requirements.  Something that it was uniquely
&gt; positioned
&gt; &gt; to do.  Alas, this has been squandered, in order to preserve revenues
&gt; from
&gt; &gt; the small number of multivalue users who have been able to convert their
&gt; &gt; applications to run on QM.  That's really just a drop in the ocean by
&gt; &gt; comparison.

&gt; &gt;But what makes it an obsolete technology?  I've yet to run into a
&gt; &gt;situation where MV didn't handily kick the living snot out of
&gt; &gt;any equivalent SQL solution and with half the complexity to boot.
">

It's obsolete simply because it's a minority database, and does not
support SQL, and hence not a de-facto industry standard. Here again I've
tried to convince Martin that the absence SQL compliance has hindered the
uptake of QM, to which his reply was:-
&quot;As far as we know, we have never lost a sale as a result of not having SQL
.&quot;

I don't like to claim things are &quot;self-evident&quot;, but that's got to be one of
them.  Every one of the database vendors that make up 99% of the market
support SQL.  Even some of the multivalue ones like Revelation.  SQL
compliance is one of those tick list options that purchasers and marketing
departments have to have.  I know of several UK installations of Arev, which
stipulated SQL in the original tender.  That's why they added it.  It's a
must-have.

<QUOTE PREVIOUSPOST="
&gt;Is the Multi-Value database really obsolete, or is that just the
&gt; &gt;agenda that SQL users and vendors are pushing?
">

Of course they are.  QM could be the centre of a major explosion of
multivalue usage. It could be the powerhouse of most new system development,
if only it was encouraged.  It would require lots of new parts, such as XML
interfaces, SQL, SOAP, etc.

Parts that could come from the user community.

But that would require a paradigm shift on the part of Ladybridge.  They
would have to become a services company instead of a licensing company.

So here we come to the nub of the problem.  Ladybridge were convinced that a
GPL release would bring great things to them, but did not appreciate that
they would have to change completely in order to profit from it.  so I have
one closing suggestion for Ladybridge:-

In order to protect existing revenues, whilst building market share of QM,
create 2 distinct products. i.e.

QM  = The commercial version which contains everything we've seen so far.
Usable for those who want to migrate their application from other multivalue
products such as D3, Universe etc.

OpenQM = the GPL version.  QM, without the terminal handling routines (@
function).  Thus not appropriate for migration of green screen applications.
Otherwise feature complete, and so useful for creating new applications

Ashley Chapman
Billabong Services Ltd
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-12T10:25:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; What I meant was more like this:-
&gt; 2. Use some of the many experienced C programmers that this client has on
&gt; staff already, along with Ladybridge consultancy services.  If Ladybridge
&gt; are unable/unwilling to do this, then the client can afford to retain the
&gt; necessary expertise.  The client can either throw the money at Ladybridge,
&gt; or their in-house team.   Not dependent on the vendor.

&gt; This client has been hidebound in the past by a vendor who would not make
&gt; necessary bug-fixes.  Even when threatened with the proverbial &quot;truck load
&gt; of cash&quot;.
">

Ahh, ok.  In context that makes much more sense.  You might want to
let them know
that trained, starving attack lawyers make for a much better threat
than money does. :)

<QUOTE PREVIOUSPOST="
&gt; &gt; out into the world.  From appearances it was done to &quot;prove&quot; that this
&gt; &gt; kind of thing doesn't work.  That may not be the fact of the matter,
&gt; &gt; but it sure looks that way to me.

&gt; Exactly.  Every time this sort of discussion comes up, people seem to
&gt; misinterpret it as a bunch of whiners wanting something for free.  Nothing
&gt; is further from the truth.  We want OpenQM to succeed in a really major
&gt; way.  We Want Martin to become a billionaire from the revenues!
">

YES! YES! YES!  This is exactly it!

<QUOTE PREVIOUSPOST="
&gt; &gt; 4. The open source branch appears to be basically orphaned by being a
&gt; &gt; two full releases ( 2.4 was the last release, 2.7 is
&gt; &gt; current)

&gt;  The Openqm.com website proudly proclaims
&gt; &quot; *Taking Multivalue Where It Has Never Been Before...&quot; *
&gt;  &quot;OpenQM is the *only* multivalue database product available both as a fully
&gt; supported commercial product and in open source form under the General
&gt; Public Licence.

&gt; Well, this is hardly the case any more.  The GPL product is a much older
&gt; version, and has major bits missing.  There is only GPL code available for
&gt; one platform (Linux), out of the many supported by the commercial release. I
&gt; think the statements are misleading.
">

Beyond the features added in the version updates, what major bits are
missing that are included with the commercial version?

<QUOTE PREVIOUSPOST="
&gt; 5. Periodic talk from the vendor about abandoning the project due to

&gt; &gt; lack of participation.

&gt; Some examples of participation:-
&gt; 1.  Some time ago, there was a  discussion about the possibility of adding
&gt; record/field level security to QM.  We worked out a mechanism for this,
&gt; which I offered to code up.  I've done this before, so it was not going to
&gt; take too long.  I offered that my modifications would be provided to
&gt; Ladybridge under their terms, so it could go into the main code base.
&gt; Martin thought that the changes were quite small, and so would rather do
&gt; them himself in order to integrate them properly with the rest of QM.  Fair
&gt; enough, he would undoubtedly do a better job.  So far, this has not appeared
&gt; in QM.
">

This is a good one.  MV databases have been notorious for their lack
of built-in security.

<QUOTE PREVIOUSPOST="
&gt; 10. My unreleased Application development framework, http://billabong-services.co.uk/anji
">

This looks really interesting!

Those are all really good improvments for sure!

<QUOTE PREVIOUSPOST="
&gt; &gt; contributor to license the patch to them as something other than the
&gt; &gt; GPL.  (LGPL or BSD maybe?)  However, they really can't do that because
&gt; &gt; the derived code is based upon GPLed code.  My god, did you guys think
&gt; &gt; about this at all before releasing OpenQM?

&gt; I think Martin did.  One of the reasons why he can only accept submissions
&gt; that are clearly the work of one person who provides it under a BSD
&gt; licence.  Okay, that's restricting the flow of input, but not a good reason
&gt; to whine about lack of participation.  It's the same for MySQL.
">

Right.  Again, the licensing difference with MySQL is IMHO what makes
it work.

<QUOTE PREVIOUSPOST="
&gt; &gt; Someone tell me I'm barking mad or at least becoming a frothing
&gt; &gt; conspiracy theorist.  Is this actually what's going on?

&gt; Nope, Martin understands this.  The problem seems to be that he thinks that
&gt; the benefit to QM will be from code contributions.  The reality is that the
&gt; benefits come from the building of an enthusiastic community and thus market
&gt; share.
">

Right!  Because of how OpenQM is licensed, they really can't profit
from the contributions anyway unless the submitter were to dual
license the contribution and frankly I can't see that happening.

<QUOTE PREVIOUSPOST="
&gt; &gt; &gt;But what makes it an obsolete technology?  I've yet to run into a
&gt; &gt; &gt;situation where MV didn't handily kick the living snot out of
&gt; &gt; &gt;any equivalent SQL solution and with half the complexity to boot.

&gt;   It's obsolete simply because it's a minority database, and does not
&gt; support SQL, and hence not a de-facto industry standard. Here again I've
&gt; tried to convince Martin that the absence SQL compliance has hindered the
&gt; uptake of QM, to which his reply was:-
&gt; &quot;As far as we know, we have never lost a sale as a result of not having SQL
&gt; .&quot;
">

*holds up a stick*
&quot;This stick is the best Bengal Tiger attack prevention device ever
invented!  I've been selling millions of these across the USA!&quot;
&quot;How can you make such a claim?  Are you sure it works?&quot;
&quot;Sure it does!  It's perfect!  When was the last time you heard of
someone being attacked by a Bengal Tiger?&quot;

<QUOTE PREVIOUSPOST="
&gt; I don't like to claim things are &quot;self-evident&quot;, but that's got to be one of
&gt; them.  Every one of the database vendors that make up 99% of the market
&gt; support SQL.  Even some of the multivalue ones like Revelation.  SQL
&gt; compliance is one of those tick list options that purchasers and marketing
&gt; departments have to have.  I know of several UK installations of Arev, which
&gt; stipulated SQL in the original tender.  That's why they added it.  It's a
&gt; must-have.
">

Adding SQL to OpenQM would certainly be a &quot;have your cake and eat it
too&quot; combination, especially for those that have a requirement
to use a &quot;lesser&quot; query language. *laughs*  More importantly it could
be a foot in the door to a lot of places.  Once you've got the wedge
in, it's a lot easier to make the crack wider. :)

<QUOTE PREVIOUSPOST="
&gt; &gt;Is the Multi-Value database really obsolete, or is that just the
&gt; &gt; &gt;agenda that SQL users and vendors are pushing?

&gt; Of course they are.  QM could be the centre of a major explosion of
&gt; multivalue usage. It could be the powerhouse of most new system development,
&gt; if only it was encouraged.  It would require lots of new parts, such as XML
&gt; interfaces, SQL, SOAP, etc.
">

The key word here is &quot;encouraged&quot;.  So far all I see is a vendor with
their hand out and not a lot of impetus behind improving the
open side of the project.

<QUOTE PREVIOUSPOST="
&gt; Parts that could come from the user community.

&gt; But that would require a paradigm shift on the part of Ladybridge.  They
&gt; would have to become a services company instead of a licensing company.
">

...which has the potential to be insanely profitable.  It could also
make MV experience a high-value skill again and NOT like
COBOL programmers got in the run up to Y2K. :)

<QUOTE PREVIOUSPOST="
&gt; QM  = The commercial version which contains everything we've seen so far.
&gt; Usable for those who want to migrate their application from other multivalue
&gt; products such as D3, Universe etc.

&gt; OpenQM = the GPL version.  QM, without the terminal handling routines (@
&gt; function).  Thus not appropriate for migration of green screen applications.
&gt; Otherwise feature complete, and so useful for creating new applications
">

Now this is one of those &quot;insanely great&quot; ideas I know that this
community is capable of.  Those companies that just need to be able to
move to a more reasonably priced platform to support their legacy code
bases are going to be a perfect match for the commercial edition.

For the rest of us that want to go screaming into the future with our
hair on fire, the @-less open edition will be the platform of choice.

I would suggest that the license be changed to something more along
the lines of GCC, but I've got a sneaking suspicion that I'll witness
the heat death of the universe long before that happens.

g.
</POST>
<POST>
<POSTER> &quot;patri...@spm1.com&quot; &lt;patrickpa...@yahoo.com&gt; </POSTER>
<POSTDATE> 2007-09-12T11:55:00 </POSTDATE>
Here is the best example of a feature no longer in the opensource
fersion, the VFS interface.  I have a older version (2.2) on a machine
and it has the VFS interface.  The code is a direct vfs.c code module
and was a very early release.  I downloaded the latest and couldn't
get it to work.  Ladybridge had moved it to the new Object model and I
thought perhaps I just had some syntax issues.  I finally got
irritated and downloaded the personal edition and my same syntax
worked.  Some poking/greping around the newer open source code base
showed almost no reference to VFS, telling me it had been removed.

The VFS interface is a very important &quot;open&quot; piece and makes extremely
good sense for the opensource package.  We can use this to interface
with mysql, postgress, oracle, sql server, etc.

We now have the perfect issue for a fork.  Ladybridge wants this to
probably be a commercial feature.  If the opensource people want it
then we will have to build our own.  We now have a fork.

A second is replication/clustering.  Ladybridge is working on
something and it will also only be available in the commercial
version.  If we want any type of replication and/or clustering we will
have to build it ourselves.

I completely understand Ladybridge's position on this and I see at
this point the only choice is to fork.  This would probably not be too
different from the Samba fork to add Active directy services a few
years ago.  The actual code base here is very small (under 10 megs
with databases) and merging later ladybridge additions would not be
too difficult.  In the future Ladybridge can decide if we haven't done
something better and decide to re-merge/supply additions they have
created.  With samba, the two forks were finally merged back together
to create the latest samba (I hope I am not getting this wrong).

What we probably need to do is develop a very good diff/version system
that allows us to easily identify what has been changed.  Again,
Ladybridge has already done something like this to allow them to post
a opensource version that is different from the commercial version
(and even from the windows version).

- Patrick

On Sep 11, 1:01 pm, &quot;Ashley Chapman&quot; &lt;ashley.chap...@billabong-

<QUOTE PREVIOUSPOST="
services.co.uk&gt; wrote:
&gt; On 11/09/2007, geneb &lt;f15 ... @gmail.com&gt; wrote:

&gt; &gt; Keep in mind that from what I understand of all the 'we don't support
&gt; &gt; this!' disclaimers on the OpenQM website, _no_ GPL version of OpenQM
&gt; &gt; is eligable(sp?) for commercial support of any kind.  To obtain
&gt; &gt; commercial support, you must buy licenses for the non-GPL product.
&gt; &gt; To me that means that if your client wishes to use OpenQM _and_ get
&gt; &gt; support from Ladybridge, they cannot use the GPL version of OpenQM.

&gt; Well, the idea was that the client can either:-
&gt; 1. Use the commercial version, and keep the GPL version handy should
&gt; Ladybridge not be able to support the product.
&gt; 2. Use the GPL version, and the clients &quot;big pile of money&quot; to persuade
&gt; Martin to come in and sort out any problems.

&gt; This idea got blown apart when the GPL version diverged from the commercial
&gt; release.  The client has subsequently chosen another database, so this
&gt; window of opportunity has now closed.  Such a great shame, as I put a HUGE
&gt; amount of effort into it.

&gt; RedHat has been mentioned a few times and it's important to realize

&gt; &gt; that RedHat at its core is NOT a software vendor.  They're a _support_
&gt; &gt; vendor and they've become wildly successful at it.  There is no reason
&gt; &gt; why Ladybridge cannot accomplish the same task in a similar fashion.

&gt; Yes.  The same can also be said for MySQL, which was frequently used as an
&gt; example of how Ladybridge envisioned the dual licensing system to work.  I
&gt; suspect that Ladybridge have avoided becoming a services company because it
&gt; would require a dramatic increase in staff levels.

&gt; I've done a lot of searching and reading the past couple of days and I

&gt; &gt; have been completely unable to find anything from Ladybridge that
&gt; &gt; actually promotes OpenQM as a project.  There has been no product
&gt; &gt; evangelizing that hasn't come from my keyboard.   I'm only one voice
&gt; &gt; and OpenQM as a project needs more than just me.  Ladybridge needs to
&gt; &gt; scream as loud and as long as it can; &quot;Look at this thing!  It's
&gt; &gt; f**king brilliant!  Come see it!  Use it!  Enjoy it!&quot;  Unfortunately
&gt; &gt; from what I've seen in the past I don't think that Ladybridge has the
&gt; &gt; corporate will to do this.  They've dropped a box on the floor,
&gt; &gt; mumbled some vague words about it and then got supremely annoyed that
&gt; &gt; no one was much interested in spending time working on it.

&gt; Many months ago, I had some spare time and offered to issue press releases
&gt; (which I have experience of).  Martin felt that this was something that
&gt; should come from Ladybridge, so declined my offer.  Not seen anything
&gt; subsequently.

&gt; Well DUH.

&gt; &gt; One thing they need to consider is the marketplace they're in.
&gt; &gt; They're surrounded on all sides by MV vendors that charge _obscene_
&gt; &gt; amounts of money for a product that at the end of the day is no better
&gt; &gt; than theirs.

&gt; The other vendors know it's an obsolete technology, so are squezzing the
&gt; last drop of blood out of their customers.  I had hoped that OpenQM would
&gt; have created a buzz, and been seen as the database which solves a lot of web
&gt; and object database requirements.  Something that it was uniquely positioned
&gt; to do.  Alas, this has been squandered, in order to preserve revenues from
&gt; the small number of multivalue users who have been able to convert their
&gt; applications to run on QM.  That's really just a drop in the ocean by
&gt; comparison.

&gt; MV users and developers have been used to paying a lot

&gt; &gt; of money for a lot of years for their platform of choice.  Suddenly
&gt; &gt; here comes this upstart, Ladybridge and quietly drops a commercial
&gt; &gt; quality MV product on the world in GPL form.  You ever see someone go
&gt; &gt; chumming for sharks?  That's exactly what happened, but on a very,
&gt; &gt; very quiet scale.  It was quiet because a) the sharks had a mouthful
&gt; &gt; of OpenQM and couldn't talk much, and b) they were so intidmidated by
&gt; &gt; the process of actually _getting_ a copy of OpenQM that they didn't
&gt; &gt; feel comfortable making any noise if they could stomach the abrasive
&gt; &gt; process of getting OpenQM in the first place.

&gt; &gt; OpenQM is in dire need of some momentum as project.  I'm happy to
&gt; &gt; start shoving as hard as I can, but Ladybridge needs to step up and
&gt; &gt; push some too because I can _guarantee_ if I'm left to my own devices,
&gt; &gt; they will NOT like some of the nonsense that's likely to come out of
&gt; &gt; my keyboard. :)

&gt; It's time for some tough love I think.

&gt; g.

&gt; --
&gt; Ashley Chapman
&gt; Billabong Services Ltd
">
</POST>
<POST>
<POSTER> &quot;Martin Phillips&quot; &lt;martinphill...@ladybridge.com&gt; </POSTER>
<POSTDATE> 2007-09-13T06:18:00 </POSTDATE>
Hi all,

OK, time to chuck in a few words from &quot;the factory&quot;. These are in no
particular sequence.

As Doug suggested, I have not had the time to read all the postings in
detail so I may well have missed some valuable information.

<QUOTE PREVIOUSPOST="
&gt; The trouble with Ladybridge being in charge of the GPL code, however,
&gt; is that developers aren't working together or swapping code
">

The whole reason why we became disillusioned with the open source is that it
turned into a one way traffic. We released the results of many years of work
and got back virtually nothing. In business terms, the open source has been
a commercial disaster to us and has cost us a great deal with no visible
income. It would take a very strong argument backed up with indisputable
figures to make us change our views though we still have no plans to abandon
the open source release.

One underlying issue in all this is that no one seems to be saying what they
want to do with the open source. Given the almost total lack of input, we
cannot tell what new features developers want to add. It's all very well
arguing about how or where the open source should be released but someone
please tell us what the target projects are. In the early days of the open
source release, we had an area on the web site where developers could put
forward project ideas. As far as I can recall nothing was ever listed. So
much for the cooperative development community that we tried to create.
Instead, we seem to have ended up with a bunch of isolated developers that
argue about the mechanics but with no underlying goals.

<QUOTE PREVIOUSPOST="
&gt;... it simply makes it into the main source (which, at the moment,
">

may not reach other GPL developers for six months!) or it doesn't.

Aside from some small changes to the tape utilities, the last submission to
the open source was a year ago and was incorporated and released in a matter
of days. There is a big difference between how quickly we will integrate
items from the open source community and how long after development we will
give away our own code. As a commercial organisation, we have to make a
profit and just giving away the source code doesn't help in that direction.

<QUOTE PREVIOUSPOST="
&gt; &quot;We'll put this on the request list&quot;, it may pop up later on; if it's
&gt; submitted to a forum, it may be that someone reads it, thinks 'yeah, I
&gt; could do that', and does.
">

Our experience is that for most of the things that have come from the open
source community, it has cost us significantly more in time to integrate
them than it would have to do the development ourselves. Also, so far not
one open source contribution has come with documentation despite this being
a condition of our acceptance terms.

Related to this, there is an interesting argument that has come up in
messages from several commercial users who tell us that they do not want a
product that has been developed in an uncoordinated manner by a &quot;free for
all&quot; group of developers and with little planning or documentation. Perhaps
one of these users would like to post their views into this thread.

<QUOTE PREVIOUSPOST="
&gt; Frankly, forking OpenQM could be seen as a hostile act
">

Sounds about right to me. I strongly suspect that we would treat a fork as
being the end of our commitment to open source as it is diametrically
opposed to the reasons for the open source version.

Note also that the documentation is protected by copyright and is part of
the commercial product.

<QUOTE PREVIOUSPOST="
&gt; What I really want to see is a way for OpenQM developers to easily
&gt; download, modify and upload code for OpenQM.
">

Perhaps we should stand back and look at the situation. QM is designed in a
manner that allows most developments to be done totally in QMBasic without
kernel changes of any sort. We should, therefore, expect to be seeing a
steady stream of new Basic components being contributed to the system. In
reality, we have had just three such submissions, two of which required
major changes to get them to work correctly.

<QUOTE PREVIOUSPOST="
&gt; Another important thing to discover what the GPL version of OpenQM
&gt; is being used for.  Considering Martin has the email address of just
&gt; about everyone that ever downloaded it, finding out what they're using
&gt; it for shouldn't prove difficult. :)
">

This goes back to what I said above. No one has yet told us what they
actually want to do with the open source. This is, of course, one of the
reasons why we ask users to register. We want to know how it is being used
and it gives us the opportunity to ask.

This information is, however, not publicly available. Not only would this
break our own privacy policy, we trade under British law and it would be a
violation of the Data Protection Act except in very general terms.

<QUOTE PREVIOUSPOST="
&gt; Well, the idea was that the client can either:-
&gt; 1. Use the commercial version, and keep the GPL version handy should
&gt; Ladybridge not be able to support the product.
">

Aside from escrow style agreements that we already have in place to ensure
that QM continues should we decide that we have better things to do with our
time, take a closer look at the commercial licence and it states absolutely
clearly that &quot;In the event that Ladybridge Systems ceases maintenance of the
product without passing ownership to another company, the source code will
become public property and may be developed or maintained by individuals or
companies with or without the intention of financial gain so long as the
originally published source code remains public property.&quot;

<QUOTE PREVIOUSPOST="
&gt; 2. Use the GPL version, and the clients &quot;big pile of money&quot; to persuade
&gt; Martin to come in and sort out any problems.
">

Look at the historic data. Most problems reported by customers on the
commercial software are resolved in a matter of minutes. There have been
several cases where we have supplied a pre-build to fix a bug in well under
an hour. If you asked us to support your own modified GPL version, we would
need to start by learning what you had done.

Also, remember that our support policy says that the client does not pay for
support that turns out to be a bug. This was our fault and hence we will
absorb the cost. We would charge a high fee just to look at a GPL problem
and this would be chargeable regardless of whether it was our bug or not.

<QUOTE PREVIOUSPOST="
&gt; This idea got blown apart when the GPL version diverged from the
&gt; commercial release.  The client has subsequently chosen another database,
">

Probably only because you said you couldn't support them. Did you actually
show the client the details of the commercial product and its asociated
support?

<QUOTE PREVIOUSPOST="
&gt; Such a great shame, as I put a HUGE amount of effort into it.
">

I find it puzzling that you appear to be the only person who has this
attitude. Personally, I would never buy software from a company that said
they would do their own source level support rather than using the services
of the original developers.

<QUOTE PREVIOUSPOST="
&gt; RedHat has been mentioned a few times and it's important to realize
&gt; that RedHat at its core is NOT a software vendor.  They're a _support_
&gt; vendor and they've become wildly successful at it.  There is no reason
&gt; why Ladybridge cannot accomplish the same task in a similar fashion.
">

Look at the support figures. There just isn't the call rate to support us.
Perhaps we need to make the product more difficult to use so that customers
must call us all the time? I can recall having to contact RedHat over the
simplest of things that they had not documented in a useable manner. Most QM
commercial users install the product, migrate their applications and then
run with no need to call us ever again. We have been known to call them just
to check that everything is still going smoothly.

<QUOTE PREVIOUSPOST="
&gt; The scary thing is that for all intensive purposes, the code base has
&gt; already been forked and Ladybridge did it themselves.
">

Right from the very first open source release we said that the GPL version
would only contain the core multivalue elements. It is not in our commercial
interests to give away everything but we wanted a platform from which open
source developers could contribute features to the product and, in return,
get everyone else's developments.

It was never about giving away the source for free. We have (so far)
resisted comments from those who have pointed out that we are entitled to
charge for use of the open source. Perhaps it's an idea for the future.

Martin Phillips, Ladybridge Systems Ltd
</POST>
<POST>
<POSTER> &quot;Simon Verona&quot; &lt;si...@dmservices.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-13T07:57:00 </POSTDATE>
Martin

Looking at this from another angle...

I can see all you mean about supporting &quot;open source&quot;, and agree with the
issues you state - being one way traffic etc.

However, the benefit from having an OpenSource distribution is that you can
get QM to a wider audience very quickly.

I'm not much into the legalities, but is it possible to post a version in a
MySQL style, whereby there is a completely unsupported but current
OpenSource version (with a binary download - which most ppl will just use
anyways), but with an agreement that this is only free for development and
personal use.

I get the feeling that whilst you might get a few companies that will flout
this and use the Open Source version for commercial use, in practice they
are people who wouldn't have bought your product in the first place!!!

There are others who would take the opensource version, have a play, decide
it's for them and then come back to you for a commercial version later.

The trick is to advertise the availability of the Open source version
correctly - which I believe was the initial thought behind the start of this
thread.   I believe that perhaps you should see OpenSource as a marketing
idea rather than anything more.

If the Opensource version was kept one release behind the commercial version
then customers (and potential customers) can have their cake and eat it.

In this way, you are using &quot;open source&quot; in much the same way as the
&quot;shareware&quot; guys do but in a more accessible and acceptable way for the
Linux community.

I see no reason to accept code back from the Opensource community at all...

Just some thoughts, maybe I'm off base?

Simon

=======================================
Simon Verona
Director

Dealer Management Services Ltd
si ... @dmservices.co.uk
=======================================

<QUOTE PREVIOUSPOST="
-----Original Message-----
From: OpenQM@googlegroups.com [mailto:OpenQM@googlegroups.com] On Behalf Of

Martin Phillips
Sent: 13 September 2007 11:19
To: OpenQM@googlegroups.com
Subject: Re: SourceForge?

Hi all,

OK, time to chuck in a few words from &quot;the factory&quot;. These are in no
particular sequence.

As Doug suggested, I have not had the time to read all the postings in
detail so I may well have missed some valuable information.

&gt; The trouble with Ladybridge being in charge of the GPL code, however,
&gt; is that developers aren't working together or swapping code

The whole reason why we became disillusioned with the open source is that it

turned into a one way traffic. We released the results of many years of work

and got back virtually nothing. In business terms, the open source has been
a commercial disaster to us and has cost us a great deal with no visible
income. It would take a very strong argument backed up with indisputable
figures to make us change our views though we still have no plans to abandon

the open source release.

One underlying issue in all this is that no one seems to be saying what they

want to do with the open source. Given the almost total lack of input, we
cannot tell what new features developers want to add. It's all very well
arguing about how or where the open source should be released but someone
please tell us what the target projects are. In the early days of the open
source release, we had an area on the web site where developers could put
forward project ideas. As far as I can recall nothing was ever listed. So
much for the cooperative development community that we tried to create.
Instead, we seem to have ended up with a bunch of isolated developers that
argue about the mechanics but with no underlying goals.

&gt;... it simply makes it into the main source (which, at the moment,
may not reach other GPL developers for six months!) or it doesn't.

Aside from some small changes to the tape utilities, the last submission to
the open source was a year ago and was incorporated and released in a matter

of days. There is a big difference between how quickly we will integrate
items from the open source community and how long after development we will
give away our own code. As a commercial organisation, we have to make a
profit and just giving away the source code doesn't help in that direction.

&gt; &quot;We'll put this on the request list&quot;, it may pop up later on; if it's
&gt; submitted to a forum, it may be that someone reads it, thinks 'yeah, I
&gt; could do that', and does.

Our experience is that for most of the things that have come from the open
source community, it has cost us significantly more in time to integrate
them than it would have to do the development ourselves. Also, so far not
one open source contribution has come with documentation despite this being
a condition of our acceptance terms.

Related to this, there is an interesting argument that has come up in
messages from several commercial users who tell us that they do not want a
product that has been developed in an uncoordinated manner by a &quot;free for
all&quot; group of developers and with little planning or documentation. Perhaps
one of these users would like to post their views into this thread.

&gt; Frankly, forking OpenQM could be seen as a hostile act

Sounds about right to me. I strongly suspect that we would treat a fork as
being the end of our commitment to open source as it is diametrically
opposed to the reasons for the open source version.

Note also that the documentation is protected by copyright and is part of
the commercial product.

&gt; What I really want to see is a way for OpenQM developers to easily
&gt; download, modify and upload code for OpenQM.

Perhaps we should stand back and look at the situation. QM is designed in a
manner that allows most developments to be done totally in QMBasic without
kernel changes of any sort. We should, therefore, expect to be seeing a
steady stream of new Basic components being contributed to the system. In
reality, we have had just three such submissions, two of which required
major changes to get them to work correctly.

&gt; Another important thing to discover what the GPL version of OpenQM
&gt; is being used for.  Considering Martin has the email address of just
&gt; about everyone that ever downloaded it, finding out what they're using
&gt; it for shouldn't prove difficult. :)

This goes back to what I said above. No one has yet told us what they
actually want to do with the open source. This is, of course, one of the
reasons why we ask users to register. We want to know how it is being used
and it gives us the opportunity to ask.

This information is, however, not publicly available. Not only would this
break our own privacy policy, we trade under British law and it would be a
violation of the Data Protection Act except in very general terms.

&gt; Well, the idea was that the client can either:-
&gt; 1. Use the commercial version, and keep the GPL version handy should
&gt; Ladybridge not be able to support the product.

Aside from escrow style agreements that we already have in place to ensure
that QM continues should we decide that we have better things to do with our

time, take a closer look at the commercial licence and it states absolutely
clearly that &quot;In the event that Ladybridge Systems ceases maintenance of the

product without passing ownership to another company, the source code will
become public property and may be developed or maintained by individuals or
companies with or without the intention of financial gain so long as the
originally published source code remains public property.&quot;

&gt; 2. Use the GPL version, and the clients &quot;big pile of money&quot; to persuade
&gt; Martin to come in and sort out any problems.

Look at the historic data. Most problems reported by customers on the
commercial software are resolved in a matter of minutes. There have been
several cases where we have supplied a pre-build to fix a bug in well under
an hour. If you asked us to support your own modified GPL version, we would
need to start by learning what you had done.

Also, remember that our support policy says that the client does not pay for

support that turns out to be a bug. This was our fault and hence we will
absorb the cost. We would charge a high fee just to look at a GPL problem
and this would be chargeable regardless of whether it was our bug or not.

&gt; This idea got blown apart when the GPL version diverged from the
&gt; commercial release.  The client has subsequently chosen another database,

Probably only because you said you couldn't support them. Did you actually
show the client the details of the commercial product and its asociated
support?

&gt; Such a great shame, as I put a HUGE amount of effort into it.

I find it puzzling that you appear to be the only person who has this
attitude. Personally, I would never buy software from a company that said
they would do their own source level support rather than using the services
of the original developers.

&gt; RedHat has been mentioned a few times and it's important to realize
&gt; that RedHat at its core is NOT a software vendor.  They're a _support_
&gt; vendor and they've become wildly successful at it.  There is no reason
&gt; why Ladybridge cannot accomplish the same task in a similar fashion.

Look at the support figures. There just isn't the call rate to support us.
Perhaps we need to make the product more difficult to use so that customers
must call us all the time? I can recall having to contact RedHat over the
simplest of things that they had not documented in a useable manner. Most QM

commercial users install the product, migrate their applications and then
run with no need to call us ever again. We have been known to call them just

to check that everything is still going smoothly.

&gt; The scary thing is that for all intensive purposes, the code base has
&gt; already been forked and Ladybridge did it themselves.

Right from the very first open source release we said that the GPL version
would only contain the core multivalue elements. It is not in our commercial

interests to give away everything but we
">

...
read more »
</POST>
<POST>
<POSTER> &quot;Steve Bush&quot; &lt;Steve.B...@NEOSYS.COM&gt; </POSTER>
<POSTDATE> 2007-09-13T08:18:00 </POSTDATE>
Hi Martin,

I think your use of the GPL effectively provides &quot;shared source&quot; (which
other commercial MV things don't) but people come with a lot of expectations
when you say GPL.

The sourceforge thing and linked websites need to be razed to the ground and
done again - I presume you have nothing to with that.

Cheers,
Steve Bush
NEOSYS

<QUOTE PREVIOUSPOST="
&gt; -----Original Message-----
&gt; From: OpenQM@googlegroups.com
&gt; [mailto:OpenQM@googlegroups.com] On Behalf Of Martin Phillips
&gt; Sent: 13 September 2007 14:19
&gt; To: OpenQM@googlegroups.com
&gt; Subject: Re: SourceForge?

&gt; Hi all,

&gt; OK, time to chuck in a few words from &quot;the factory&quot;. These
&gt; are in no particular sequence.
">
</POST>
<POST>
<POSTER> &quot;Martin Phillips&quot; &lt;martinphill...@ladybridge.com&gt; </POSTER>
<POSTDATE> 2007-09-13T08:31:00 </POSTDATE>
Hi Simon,

<QUOTE PREVIOUSPOST="
&gt; However, the benefit from having an OpenSource distribution is
&gt; that you can get QM to a wider audience very quickly.
">

As a commercial organisation, much as it is nice to see lots of users, we
only benefit from those that pay a licence fee. To the best of my knowledge,
no open source user has yet made the transition to a commercial licence
therefore gathering a large base of open source users is of dubious value.

<QUOTE PREVIOUSPOST="
&gt; I'm not much into the legalities, but is it possible to post a version in
&gt; a
&gt; MySQL style, whereby there is a completely unsupported but current
&gt; OpenSource version (with a binary download - which most ppl will
&gt; just use anyways), but with an agreement that this is only free for
&gt; development and personal use.
">

We already have this with the Personal Version and developer licences. I can
see no reason why we could not go back to having the open source reasonably
in step with the commercial version if the community start to use it in the
way in which we intended. As long as it remains the &quot;one way street&quot; that it
is at present, this will not happen.

<QUOTE PREVIOUSPOST="
&gt; I get the feeling that whilst you might get a few companies that will
&gt; flout
&gt; this and use the Open Source version for commercial use, in practice they
&gt; are people who wouldn't have bought your product in the first place!!!
">

We are reasonably sure that this is happening but do not yet have sufficient
evidence of violation of the GPL to do anything about it.

<QUOTE PREVIOUSPOST="
&gt; There are others who would take the opensource version, have a play,
&gt; decide it's for them and then come back to you for a commercial version
&gt; later.
">

I am not convinced about this sequence of events. Remember that the user can
get a totally free, supported evaluation copy that requires no work from
him. Compare this with having to build the source yourself and I know which
path I would take.

<QUOTE PREVIOUSPOST="
&gt; If the Opensource version was kept one release behind the commercial
&gt; version then customers (and potential customers) can have their cake and
&gt; eat it.
">

I may be wrong but I am reasonably certain that the open source will only
contain the core multivalue features for the foreseeable future. There is
much that we would have to discuss internally before we changed this
strategy.

Martin Phillips, Ladybridge Systems Ltd
</POST>
<POST>
<POSTER> &quot;Martin Phillips&quot; &lt;martinphill...@ladybridge.com&gt; </POSTER>
<POSTDATE> 2007-09-13T08:36:00 </POSTDATE>
Hi Steve,

The SourceForge components of OpenQM are nothing to do with us at all. They
were created by Doug Dumitru when the open source version was first released
and seemed to generate little interest.

The various domain names that belong to us are about to go though a bit of a
reorganisation as part of a complex process of reorganising our business
systems. One element of this is to move the dealer licensing system to a
server in the UK running DesignBais. Other parts of the site will remain on
the US server.

I am not sure when this work will be completed but it will be cleraly
visible as the whole &quot;look and feel&quot; of the OpenQM web site will change.

Martin Phillips, Ladybridge Systems Ltd
</POST>
<POST>
<POSTER> &quot;Simon Verona&quot; &lt;si...@dmservices.co.uk&gt; </POSTER>
<POSTDATE> 2007-09-13T09:29:00 </POSTDATE>
Martin

I'm guessing that most of the &quot;Opensource&quot; downloaders were actually MV
people looking for a free ride!  They are probably people that would never
spend money with you anyways.

Opensource is a percentages game - you need many downloads to get one sale.
From your perspective, why do you care about the 999 people who download it
and don't spend anything with you?  You are only after the 1 that does.

The point being made (I think) is that by the nature of the marketing and
distribution of the Opensource version you are only attracting existing MV
people to you anyway whereas to make it work you need to attract people who
are looking for databases *not* multi-value databases.  Basically, you need
to promote QM as a database usable in small  embedded applications and web
servers.   This was drilled to death in another post so I'm not going to
repeat it all.

Ideally, there should be no commercial cost in maintaining an Opensource
version, and certainly you wouldn't expect a reduction in revenue.  The only
&quot;spend&quot; would be in marketing the Opensource version to the general
community.  This of course is speculative cost, but I believe would be
self-funding.

The only item you need to ensure is documentation - you need to ensure that
anybody who downloads an opensource version can quickly install it and make
it do *something* that shows how useful it is.

To be honest, I guess this is something that could be picked up by one of
your sales channels (Doug???).  All that would be needed is for them to want
to do the marketing and for you to make available the opensource code.   You
need do no more.

Anyways, that's my last posting on the subject.  My only interest is in
perpetuating MV and pushing it &quot;mainstream&quot; as it makes my application
software more valuable!

Regards
Simon

=======================================
Simon Verona
Director

Dealer Management Services Ltd
si ... @dmservices.co.uk
=======================================

<QUOTE PREVIOUSPOST="
-----Original Message-----
From: OpenQM@googlegroups.com [mailto:OpenQM@googlegroups.com] On Behalf Of

Martin Phillips
Sent: 13 September 2007 13:36
To: OpenQM@googlegroups.com
Subject: Re: SourceForge?

Hi Steve,

The SourceForge components of OpenQM are nothing to do with us at all. They
were created by Doug Dumitru when the open source version was first released

and seemed to generate little interest.

The various domain names that belong to us are about to go though a bit of a

reorganisation as part of a complex process of reorganising our business
systems. One element of this is to move the dealer licensing system to a
server in the UK running DesignBais. Other parts of the site will remain on
the US server.

I am not sure when this work will be completed but it will be cleraly
visible as the whole &quot;look and feel&quot; of the OpenQM web site will change.

Martin Phillips, Ladybridge Systems Ltd

This message has been scanned for viruses by BlackSpider MailControl - www.blackspider.com
">
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T10:22:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; The SourceForge components of OpenQM are nothing to do with us at all. They
&gt; were created by Doug Dumitru when the open source version was first released
&gt; and seemed to generate little interest.
">

None of this has generated much interest!  You know why?  Because
nobody knows about it!

How many download &quot;registrations&quot; have you taken in? That number is a
direct reflection of how many
people actually know about it.

It's like you've designed the most fuel efficent car in the world that
is completely impossible to wreck and you advertise
it by putting a four line ad in the local paper, then complain because
nobody buys your bloody car!

There is absolutely _ZERO_ energy behind putting OpenQM in front of
eyes that may have an interest in it.  THAT is your problem.
Communities don't form out of thin air Martin, you've got to create
them.  You do that by asking the people that use your product to talk
about it as much as possible.  You haven't done that.  Not even once.
All you did was drop some source code and expected people to flock to
you.  Ain't gonna happen sonny.  People that understand open source
already know the value of it.  Your task is to show excitement about
your own product because it's great, not because it's open source.
The multi-value community is aware of you to some degree, the rest of
the planet hasn't a friggin clue.  THOSE are the people you need to
reach.

I cannot stress this enough - if you don't talk about your product
then nobody else will either and it'll be entirely your fault.  Carve
this into your forehead, because it's a fact of life and it's not
going to change.  You have GOT to reach out past the traditional MV
community because that community is getting smaller every day and if
you rely upon it alone, then your revenues will get smaller right
along with 'em.
OpenQM can be a foot in the door to a whole new customer base, but
ONLY IF YOU F'ING TELL THEM ABOUT IT!  And as you suspect, I'm going
to continue beating this drum until you get it.  I hope it doesn't
reach the point where I have to have a sign built across the street
from your office, because frankly I don't have that kind of money
handy. :)

As to problems with donated code....

If you spend more than 5 minutes working on code that was submitted
that doesn't meet your submission criteria, it's your own damn fault.

If I send you something that doesn't meet your submission
specifications to the _letter_, you'd better damn well throw it back
in my face and tell me to fix it.  It's not your job to debug or
document my code.  If it's not up to your standards then it should be
rejected _instantly_.

How much time do you think Linus Torvalds spends documenting or
debugging a submitted patch?  If your answer is anything larger than
&quot;none&quot;, you're wrong.  It's not about being &quot;nice&quot; or &quot;gracious&quot; or
&quot;grateful&quot;.  It's about holding a quality standard.  If a submission
doesn't meet that standard then every second you spend with it is
wasted.  You tell the submitter WHY the patch is being rejected, tell
'em to fix it and resubmit it.  Until then, get off my damn lawn!

You really need to release a binary version that's current with the
GPL tree.  Not everyone groks doing the whole compile/install thing,
especially with the barely adequate instructions included with the
tarball.  (hint:  if you _ask_ someone to do this for you, I bet it'll
happen pretty damn quick.)  Quite a number of the MV guys I know
wouldn't know a C compiler if I formed it into a brick and hit 'em in
the face with it.  Don't assume everyone knows what you do.  It costs
you nothing to make a binary release and it will definately make
things a little easier on the most important person in this whole
circus - your customer.  (and even if they're not stuffing your
undershorts with money, they're still your customer)

g.
</POST>
<POST>
<POSTER> Doug Dumitru &lt;d...@easyco.com&gt; </POSTER>
<POSTDATE> 2007-09-13T10:40:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Martin Phillips wrote:
&gt; Hi Steve,

&gt; The SourceForge components of OpenQM are nothing to do with us at all. They
&gt; were created by Doug Dumitru when the open source version was first released
&gt; and seemed to generate little interest.
">

As far as I am concerned, the SourceForge website has been dead for
several years now.  I think the main project name sub-domain still
points back to OpenQm.com, but all of the mailing lists etc are 100%
dead.  Sourceforge was a good site for discussion lists, but other than
lists and a landing page, none of the other sourceforge services were
actually used.

Doug Dumitru
</POST>
<POST>
<POSTER> &quot;Martin Phillips&quot; &lt;martinphill...@ladybridge.com&gt; </POSTER>
<POSTDATE> 2007-09-13T11:45:00 </POSTDATE>
Hi all,

This thread is reaching the point of becoming abusive and counter
productive. The negative attitude of many of the open source contributors to
this mailing list is actually harmful to the product. On the other hand, the
commercial users tend to communicate directly with us and are usually very
positive in their comments. Perhaps they have moved away from using this
list because of the attitude of a few open source users? It may be that we
are approaching the time when it make sense to separate the (positive)
commercial users from the (largely negative) open source users into two
mailing lists. This would be a sad day as the list was created to share
ideas.

Let me be clear about our position. QM is a commercial product. As such, it
must generate income for the company. It is doing this with a steadily
growing commercial user base, mostly migrating from other multivalue
platforms but some are genuinely new to the multivalue world.

The open source was created at the suggestion of our US distributor in the
hope that multivalue developers with some nifty idea of their own would
share their work and take the product forward into areas that we would
probably never even consider. So far, the only real contribution has been
the work on the tape utilities for which we are very grateful.

As far as we are aware, no open source user has ever migrated to the
commercial product. Until we see evidence of such a migration or the open
source community actually contributes something back to the product that
makes the effort worth our time, it is unlikely that we will change our
position. Every moment spent on the open source is taking time away from
commercial development and we have a long backlog of projects in plan. It is
up to the members of the open source community to demonstate that they have
something to offer, not for us to continue to give away our work in the
vague hope that something might come back.

I repeat that there is a free binary version already available. Given that
this is the situation, my earlier question still stands: what developments
are the open source community looking for? There was a brief flirtation with
XML that we thought might turn into a useful contribution to the project but
it seems that the developers who started this never really got sufficiently
organised to form a project team. I guess that we will end up having to do
this ourselves at some point.

Despite all this and contrary to what was suggested in an earlier posting in
this thread, there are over 150 open source users registered. They just
don't contribute to this group or the product. Every one of them gets
followed up to find out how they are getting on with the product.

====

A question for Steve Bush.....

<QUOTE PREVIOUSPOST="
&gt; I forgot to say that the version of openqm that I put up was ancient from
&gt; mid 2006 ... and also hacked to run on windows under cygwin - but had
&gt; problems with IPC speed.
">

Out of interest, how much time did you spend on this from initial thoughts
right through to the working port? It would be interesting to know just how
many fully supported commercial licences (without the performance problems
of your &quot;hack&quot;) you could have had for the same investment.

Martin Phillips
Ladybridge Systems Ltd
17b Coldstream Lane, Hardingstone, Northampton, NN4 6DB
+44-(0)1604-709200
</POST>
<POST>
<POSTER> &quot;Steve Bush&quot; &lt;Steve.B...@NEOSYS.COM&gt; </POSTER>
<POSTDATE> 2007-09-13T13:25:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; A question for Steve Bush.....

&gt; &gt; I forgot to say that the version of openqm that I put up
&gt; was ancient
&gt; &gt; from mid 2006 ... and also hacked to run on windows under
&gt; cygwin - but
&gt; &gt; had problems with IPC speed.

&gt; Out of interest, how much time did you spend on this from
&gt; initial thoughts right through to the working port? It would
&gt; be interesting to know just how many fully supported
&gt; commercial licences (without the performance problems of your
&gt; &quot;hack&quot;) you could have had for the same investment.
">

I think it was about a week in total say STG1000. I didn't go QM in the end
I found a fairly transparent way to convert basic to c++ and postgres while
retaining all the integrated simplicity of Pick for application programmers.
It isn't in production but it will be released under bsd licence. &quot;It's
Pick, Jim, but not as we know it&quot;.
Cheers, Steve.
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T13:52:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; This thread is reaching the point of becoming abusive and counter
&gt; productive. The negative attitude of many of the open source contributors to
&gt; this mailing list is actually harmful to the product. On the other hand, the
&gt; commercial users tend to communicate directly with us and are usually very
&gt; positive in their comments. Perhaps they have moved away from using this
&gt; list because of the attitude of a few open source users? It may be that we
&gt; are approaching the time when it make sense to separate the (positive)
&gt; commercial users from the (largely negative) open source users into two
&gt; mailing lists. This would be a sad day as the list was created to share
&gt; ideas.
">

Martin, I'm sorry you don't like me getting in your face about
OpenQM.  If I make any misconstrued, misleading or patently untrue
statements about how you handle the promotion of OpenQM (or anything
else for that matter!) then by all means tell me about it!
I'm the last guy on the planet that wants to make errors in anything I
say about OpenQM.

<QUOTE PREVIOUSPOST="
&gt; I repeat that there is a free binary version already available. Given that
">

Are you referring to the Debian build?

<QUOTE PREVIOUSPOST="
&gt; Despite all this and contrary to what was suggested in an earlier posting in
&gt; this thread, there are over 150 open source users registered. They just
&gt; don't contribute to this group or the product. Every one of them gets
&gt; followed up to find out how they are getting on with the product.
">

150?  150?!   I now completely understand why you haven't been getting
the level of participation you expected.  There are only 28 more
people on this list than have registered to download OpenQM.

I don't know what to say at this point.  I'm simply stunned.  150?
Really?  In nearly four years?  Wow.  That's just tragic.

I thought for sure that the MV community knew about OpenQM.  Boy, when
I'm wrong, I'm REALLY wrong.  You should've seen many times that
number based on morbid curiosity alone.  You don't have any former
Commodore employees working for you, do you? :)

Martin, I'm tired of busting your chops over this.  All I want from
you and your company is a little positive energy and promotion for
OpenQM.
It won't cost you a dime and has the potential to add a few zeroes to
your &quot;registered&quot; total and maybe some money in your bank.

At basically 150 users, you will never see the level of participation
you expect.  There just isn't a large enough sample to work with.  I
would hazard a guess that out of the 150, there may be 10 with the
desire to work on OpenQM, 5 with the actual spare time to do the work
and maybe 3 or 4 that feel strongly enough about it to actually write
code.

You don't have the numbers you need to make this a success.  To get
the numbers, you need to promote and evanglize.  In four years you
apparently haven't lifted a finger.  Why?  Just please tell me why.

g.
</POST>
<POST>
<POSTER> GlenB &lt;g...@mvdevcentral.com&gt; </POSTER>
<POSTDATE> 2007-09-13T15:51:00 </POSTDATE>
You have a dedicate space for it now? When are the hydrolic
actuators going to be implemented. :) BTW, did you ever find the
screens you needed for the displays?

Glen

On Sep 11, 1:18 pm, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 11 Sep, 09:59, &quot;Ashley Chapman&quot; &lt;ashley.chap ... @billabong-services.co.uk&gt; wrote:
&gt; &gt; As an aside,  are you the same guy that has a F15 cockpit in his garage?

&gt; &gt; Ashley

&gt; *cough* Er.. yes, that would be me. :)

&gt; It's not in a garage any longer.  I've got 2100sqft shop that it lives
&gt; in.  My wife wants it marked &quot;TOYS&quot; in big letters. :)

&gt; g.
">
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T16:07:00 </POSTDATE>
On 13 Sep, 12:51, GlenB &lt;g ... @mvdevcentral.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt;   You have a dedicate space for it now? When are the hydrolic
&gt; actuators going to be implemented. :) BTW, did you ever find the
&gt; screens you needed for the displays?
">

*screeeeech*  Well hiya Topic Drift, how ya doin? :)

The space is not dedicated to the F-15 all by itself.  Check out the
website and read about the adventure it's been. :)
The specialized screens I need are basically unobtainium without
coughing up many thousands of dollars each.  a 5&quot; x 5&quot; AMLCD screen
would cost me roughly $5000 to get - and I'd have to have it made by
cutting down a larger screen.

There won't be any hydraulics for the sim.  The systems themselves
would cost tens of thousands to just procure, not including the
structural reinforcement required to keep the sim from tearing the
building down.

http://www.f15sim.com is the website address Glen.  ttyl!

g.
</POST>
<POST>
<POSTER> GlenB &lt;g...@mvdevcentral.com&gt; </POSTER>
<POSTDATE> 2007-09-13T16:22:00 </POSTDATE>
On Sep 13, 11:45 am, &quot;Martin Phillips&quot; &lt;martinphill ... @ladybridge.com&gt;
wrote:
[chop]

<QUOTE PREVIOUSPOST="
&gt; I repeat that there is a free binary version already available. Given that
&gt; this is the situation, my earlier question still stands: what developments
&gt; are the open source community looking for? There was a brief flirtation with
&gt; XML that we thought might turn into a useful contribution to the project but
&gt; it seems that the developers who started this never really got sufficiently
&gt; organised to form a project team. I guess that we will end up having to do
&gt; this ourselves at some point.
">

I'm sorry Martin. I _want_ to work on that project, but I just don't
have enough free time to make something happen over the course of a
few months. Don't consider the project dead. I can submit to you, what
I have right now, if you are interested in viewing where we are at.
The last discussion was regarding DTD handling/generation and then
things stopped. Not long ago, Spectrum was held and I found a contact
that maybe could help solve the issues I had with DTDs and dealing
with math statements in XPATH. Of course, not being able to get a call
back and no time to play phone tag just added to the development
slump. After that, it's been a nut case here and at home with the
twins. I will be working on it, when I can. If you want to take what's
there and move forward, then feel free to. I tend to want to make 10
things happen at the same time, but I just can't code that much! The
core parser is stable for the most part and there are example tools
there for things like RSS. I've been using a D3 port of it in our XML
shipping application here for many months with no problems. I am
_still_ waiting for your new QPROC to provide XML out on queries, so
that hasn't helped with the integration progress either.

Glen
</POST>
<POST>
<POSTER> Kevin Powick &lt;ke...@powick.ca&gt; </POSTER>
<POSTDATE> 2007-09-13T20:32:00 </POSTDATE>
On Sep 13, 1:52 pm, geneb &lt;f15 ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; &gt; This thread is reaching the point of becoming abusive and counter
&gt; &gt; productive.
">

Agreed Martin.

<QUOTE PREVIOUSPOST="
&gt; Martin, I'm sorry you don't like me getting in your face about
&gt; OpenQM..... I'm tired of busting your chops over this.
">

Frankly, I'm a little tired of it to.  You make a lot of noise but so
far I see little positive action.  I kindly suggest that if you feel
so strongly about the open source version of QM and its promotion, you
come down off your high-horse and get to it.

Personally, I think much of the open source movement is overrated
idealism.  Yes, there are certainly some high-profile and very
successful products and applications that have come from the  OSS
world, but the vast majority of such projects are stagnant or
completely failed.  I also believe that of the &quot;successful&quot; OSS
projects, they have done so more likely to good timing, good
management and a little bit of luck, than to their being purely OS in
nature.

I believe that OSS devalues the commercial market. In the commercial
world, you have companies paying employees a lot of money to develop
products which they eventually market and sell to recoup their costs
and hopefully make a profit.  The company makes money, employees get
paid, and in turn purchase other goods/services.  This drives an
economy.

On the other hand you have OSS.  People with time on their hands
create the same products as a commercial software company, yet more
often than not, they give it away at no cost to the user.  So now we
have a commercial company trying to compete with an OSS group, but the
playing field is very uneven.

The only reason this happens in the software world is that the only
significant cost to software development is time, which commercial
companies must pay for, and OSS people seem not to value.

I'll really believe in the commercial viability of OSS when I see the
same concept being applied to other areas of industry - Automobile
production for example.  When/where can I buy my great new Open Source
SUX2010?

I've seen your opinion on OSS repeated by its advocates many times,
and now you've seen mine.  Feel free to comment, but I won't any
further, because unlike OSS advocates, I value my time and must get
back to work so that I can keep the lights on.

---
Kevin Powick
</POST>
<POST>
<POSTER> &quot;Martin Phillips&quot; &lt;martinphill...@ladybridge.com&gt; </POSTER>
<POSTDATE> 2007-09-14T04:37:00 </POSTDATE>
Hi all,

Let's bring this thread to a close. Frankly I don't have the time to take it
any further. So, to clear up a few remaining points...

<QUOTE PREVIOUSPOST="
&gt;&gt; I repeat that there is a free binary version already available.

&gt; Are you referring to the Debian build?
">

Not specifically. There are free versions for all platforms supported by the
commercial product and we are always open to suggestions for new platforms.

<QUOTE PREVIOUSPOST="
&gt; I don't know what to say at this point.  I'm simply stunned.  150?
&gt; Really?  In nearly four years?  Wow.  That's just tragic.
">

Contributors to this thread do not appear to be able to separate the open
source from the commercial product. Until we see some positive input from
the open source users, we have absolutely zero incentive to promote it. So
far all we have seen has been arguments about wanting the full product for
free and providing third party support to end users. Both of these take
revenue away from us.

If, as keeps being suggested, we release the full product as open source in
step with the commercial version, there would be no reason for anyone ever
to pay for the product and we would be out of business. The argument that we
would make a fortune out of support assumes that users need frequent
support. Most of our users install the product, migrate their software and
then never contact us again.

<QUOTE PREVIOUSPOST="
&gt; In preparation for some hot, steamy contributing action I found that I
&gt; cannot build the 2.4.17 tree under Fedora Core 7 using gcc v4.1.2.

&gt; I'm inundated with hundreds of &quot;...differ in signedness&quot; warnings from
&gt; the compiler
">

QM was originally developed on Windows. Because the need to handle much of
the internal data as unsigned characters clashed with the definitions of
many of the run time library functions that required the default character
type, we adopted the compiler option to treat the default character type as
unsigned. This extended through into gcc on the other platforms. It seems
that a recent version of gcc has become much more fussy about programming
style and started moaning about this. For compatibility reasons, we still
use a fairly old version of gcc.

The PDA development presented serious problems as the Microsoft compiler for
the PDA has a bug where the &quot;default is unsigned&quot; option doesn't work. As a
result of this, we have had to make some massive internal changes to the
source at release 2.6 to avoid literally thousands of casts. When the next
open source release appears, the internal structure will be very different.

Finally, to pick up on the list of open source developments published by
Ashley:

<QUOTE PREVIOUSPOST="
&gt; 1. record/field level security
">

This one was discussed at length of this list and no one could agree on what
should be done. We need to identify the problem and the requirements before
a solution can be accepted. The data encryption features added at release
2.6 probably cover this more than adequately.

<QUOTE PREVIOUSPOST="
&gt; 2. The tape utilities written by Tom deLombarde.
">

These were based on programs supplied by Doug Dumitru. Tom made some major
contributions to these tools though we are still waiting for documentation
of the tape format. We are very grateful for all of the work that went into
these tools.

<QUOTE PREVIOUSPOST="
&gt; 3. The object enhancements.
">

Yes, this was widely discussed on the list but the development was done by
us.

<QUOTE PREVIOUSPOST="
&gt; 4. The PHP interface, again by Tom deLombarde.
&gt; 5. The Bash CGI interface which was created by Tom, Glen and myself.
&gt; 6. the QM version of the MVWWW gateway created by Glen
">

These remain as private solutions as they have not been contributed back to
the main product.

<QUOTE PREVIOUSPOST="
&gt; 7. The Debian package of QM created by Glen
">

QM already runs on Debian so what does this do?

<QUOTE PREVIOUSPOST="
&gt; 8. The Coyote web server. Well, not really included, but undoubtedly works
&gt; better since Doug has had access to the QM sourcecode.
">

Not an open source project. My personal feeling is that access to the source
code made this worse as Doug rushed off to implement a complex socket
library interface of his own that should have been (and now is) an easy to
use part of the standard product.

<QUOTE PREVIOUSPOST="
&gt; 9. The nasty segfault which was caused by a bug in the QM initialisation.
">

I admit to not being able to remember what this one was.

<QUOTE PREVIOUSPOST="
&gt; 10. My unreleased Application development framework,
&gt; http://billabong-services.co.uk/anji
&gt; 11. Glen's work on an XML interface
">

Abandoned. This was sad as we had an XML project in plan that we scrapped in
the misguided belief that the open source community probably had a better
understanding of the requirements. It now looks as though we will need to
revive that project. If someone out there wants to do it, this doesn't need
open source at all. The whole job can be done in QMBasic using published
interfaces.

<QUOTE PREVIOUSPOST="
&gt; This is probably a bonehead question, but where would I find
&gt; documentation and downloads for these things?
">

Exactly my point! The handful of open source users that are actually doing
anything are keeping this private and not treating this as a cooperative
development system.

Martin Phillips
Ladybridge Systems Ltd
17b Coldstream Lane, Hardingstone, Northampton, NN4 6DB
+44-(0)1604-709200
</POST>
<POST>
<POSTER> geneb &lt;f15...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-14T10:02:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; &gt;&gt; I repeat that there is a free binary version already available.

&gt; &gt; Are you referring to the Debian build?

&gt; Not specifically. There are free versions for all platforms supported by the
&gt; commercial product and we are always open to suggestions for new platforms.
">

*sigh*  This lets me answer the question I asked.  &quot;Why no, there are
no binary releases of the OpenQM 2.4.17 available with the exception
of the user-contributed Debian build.&quot;

<QUOTE PREVIOUSPOST="
&gt; &gt; I don't know what to say at this point.  I'm simply stunned.  150?
&gt; &gt; Really?  In nearly four years?  Wow.  That's just tragic.

&gt; Contributors to this thread do not appear to be able to separate the open
&gt; source from the commercial product. Until we see some positive input from
&gt; the open source users, we have absolutely zero incentive to promote it. So
&gt; far all we have seen has been arguments about wanting the full product for
&gt; free and providing third party support to end users. Both of these take
&gt; revenue away from us.
">

What part of &quot;your user base is too small&quot; escapes your
understanding?

Let me make this VERY clear.

YOU DO NOT HAVE ENOUGH OF A USER BASE TO OBTAIN SIGNIFICANT
CONTRIBUTION.

You've built yourself a nice little circle of failure here.  As long
as nobody contributes, you're not going to tell anyone about OpenQM
and people that don't even know about OpenQM can't contribute.
Brilliant.

Oh, and let me reiterate that the _only_ version I'm concerned with is
the currently available GPL version.  To me it IS a seperate product
from the commercial offering and I've never implied anything
different.

<QUOTE PREVIOUSPOST="
&gt; &gt; In preparation for some hot, steamy contributing action I found that I
&gt; &gt; cannot build the 2.4.17 tree under Fedora Core 7 using gcc v4.1.2.
">

[snip] - this reply doesn't belong in this thread - I'm moving it in
the faint hope I'll get a reply to my further questions

<QUOTE PREVIOUSPOST="
&gt; &gt; 7. The Debian package of QM created by Glen

&gt; QM already runs on Debian so what does this do?
">

It gives people that aren't comfortable building things from source a
chance to use the product.   Oops, I need to clarify that - it gives
people that are interested in the open source version of OpenQM a
chance to use it without having to try to build it.  That way, some
poor schmuck that doesn't know C from a hole in the wall won't be left
with an uncompilable product due to &quot;differ in signedness&quot; warnings
that are treated as errors.  (And won't know they can adjust the
buildgpl script to allow warnings to NOT be treated as errors)

<QUOTE PREVIOUSPOST="
&gt; Abandoned. This was sad as we had an XML project in plan that we scrapped in
&gt; the misguided belief that the open source community probably had a better
&gt; understanding of the requirements. It now looks as though we will need to
">

Oh I can just about guarantee you that the &quot;open source community&quot; has
a far better understanding of XML than you could ever imagine.  The
problem is that your sample size is so terribly small that the chances
are virtually zero of having a good XML person fall within the magic
150.  Since you're not going to do anything to increase that 150, hit
http://www.oreilly.com - they've got some very nice books on XML.

g.
</POST>
</TEXT>
</BODY>
</DOC>
