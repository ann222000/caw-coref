<DOC>
<DOCID> eng-NG-31-126394-8200118 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-08-06T21:48:00 </DATETIME>
<BODY>
<HEADLINE>
What is the fastest way to do Data File I/O in C++
</HEADLINE>
<TEXT>
<POST>
<POSTER> elet.mir...@gmail.com </POSTER>
<POSTDATE> 2007-08-06T21:48:00 </POSTDATE>
Hi everyone,

I am currently using Visual C++ 8 Standard.

I have a quite large data array (1GB) in the form of an unsigned char
array.
I need to save this to disk in 16-bit format (two chars form a 16-bit
value) or 32-bit format (half of  32 bit value empty).

I was wondering what class I should use to save this data as fast as
possible.
Saving it as bytes is not best, as unfortunately the reading program
(Matlab) will have to convert this to 16-bit, and this will take quite
long.

What matters is for this data to end up on disk as fast as possible in
16-bit or 32-bit format.

Any help would be greatly appreciated!

Thank you,
Best regards,
Tele
</POST>
<POST>
<POSTER> &quot;Alf P. Steinbach&quot; &lt;al...@start.no&gt; </POSTER>
<POSTDATE> 2007-08-06T21:58:00 </POSTDATE>
* elet.mir ... @gmail.com:

<QUOTE PREVIOUSPOST="
&gt; Hi everyone,

&gt; I am currently using Visual C++ 8 Standard.

&gt; I have a quite large data array (1GB) in the form of an unsigned char
&gt; array.
&gt; I need to save this to disk in 16-bit format (two chars form a 16-bit
&gt; value) or 32-bit format (half of  32 bit value empty).

&gt; I was wondering what class I should use to save this data as fast as
&gt; possible.
&gt; Saving it as bytes is not best, as unfortunately the reading program
&gt; (Matlab) will have to convert this to 16-bit, and this will take quite
&gt; long.

&gt; What matters is for this data to end up on disk as fast as possible in
&gt; 16-bit or 32-bit format.

&gt; Any help would be greatly appreciated!
">

Presumably when you write that you &quot;have&quot; that array you mean that
there's no problem holding it in memory.

So just fix up endianness (if required) in memory.

Then dump the whole thing to a file using relevant API functions.

It has little nothing to do with C++ classes, or C++ at all.

Follow-ups therefore set to [comp.os.ms-windows.programmer.win32], and
please in future post Windows questions to Windows groups, etc.

--
A: Because it messes up the order in which people normally read text.
Q: Why is it such a bad thing?
A: Top-posting.
Q: What is the most annoying thing on usenet and in e-mail?
</POST>
<POST>
<POSTER> HumbleWorker &lt;amardeep.develo...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-06T22:55:00 </POSTDATE>
On Aug 7, 6:48 am, elet.mir ... @gmail.com wrote:

<QUOTE PREVIOUSPOST="
&gt; Hi everyone,

&gt; I am currently using Visual C++ 8 Standard.

&gt; I have a quite large data array (1GB) in the form of an unsigned char
&gt; array.
&gt; I need to save this to disk in 16-bit format (two chars form a 16-bit
&gt; value) or 32-bit format (half of  32 bit value empty).

&gt; I was wondering what class I should use to save this data as fast as
&gt; possible.
&gt; Saving it as bytes is not best, as unfortunately the reading program
&gt; (Matlab) will have to convert this to 16-bit, and this will take quite
&gt; long.

&gt; What matters is for this data to end up on disk as fast as possible in
&gt; 16-bit or 32-bit format.

&gt; Any help would be greatly appreciated!

&gt; Thank you,
&gt; Best regards,
&gt; Tele
">

Use ofstream class.
</POST>
<POST>
<POSTER> elet.mir...@gmail.com </POSTER>
<POSTDATE> 2007-08-06T23:14:00 </POSTDATE>
On Aug 6, 7:55 pm, HumbleWorker &lt;amardeep.develo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Aug 7, 6:48 am, elet.mir ... @gmail.com wrote:

&gt; &gt; Hi everyone,

&gt; &gt; I am currently using Visual C++ 8 Standard.

&gt; &gt; I have a quite large data array (1GB) in the form of an unsigned char
&gt; &gt; array.
&gt; &gt; I need to save this to disk in 16-bit format (two chars form a 16-bit
&gt; &gt; value) or 32-bit format (half of  32 bit value empty).

&gt; &gt; I was wondering what class I should use to save this data as fast as
&gt; &gt; possible.
&gt; &gt; Saving it as bytes is not best, as unfortunately the reading program
&gt; &gt; (Matlab) will have to convert this to 16-bit, and this will take quite
&gt; &gt; long.

&gt; &gt; What matters is for this data to end up on disk as fast as possible in
&gt; &gt; 16-bit or 32-bit format.

&gt; &gt; Any help would be greatly appreciated!

&gt; &gt; Thank you,
&gt; &gt; Best regards,
&gt; &gt; Tele

&gt; Use ofstream class.
">

Any particular reason why I should use ofstream?
As opposed for example to binarywriter or other.

Regards,
Tele
</POST>
<POST>
<POSTER> Ian Collins &lt;ian-n...@hotmail.com&gt; </POSTER>
<POSTDATE> 2007-08-06T23:57:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
HumbleWorker wrote:
&gt; On Aug 7, 6:48 am, elet.mir ... @gmail.com wrote:
&gt;&gt; Hi everyone,

&gt;&gt; I am currently using Visual C++ 8 Standard.

&gt;&gt; I have a quite large data array (1GB) in the form of an unsigned char
&gt;&gt; array.
&gt;&gt; I need to save this to disk in 16-bit format (two chars form a 16-bit
&gt;&gt; value) or 32-bit format (half of  32 bit value empty).

&gt;&gt; I was wondering what class I should use to save this data as fast as
&gt;&gt; possible.
&gt;&gt; Saving it as bytes is not best, as unfortunately the reading program
&gt;&gt; (Matlab) will have to convert this to 16-bit, and this will take quite
&gt;&gt; long.

&gt;&gt; What matters is for this data to end up on disk as fast as possible in
&gt;&gt; 16-bit or 32-bit format.

&gt;&gt; Any help would be greatly appreciated!

&gt; Use ofstream class.
">

That's probably bad advice!

The good advice is to ask on a windows group for the appropriate
platform specific API.

--
Ian Collins.
</POST>
<POST>
<POSTER> HumbleWorker &lt;amardeep.develo...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-06T23:58:00 </POSTDATE>
On Aug 7, 8:14 am, elet.mir ... @gmail.com wrote:

<QUOTE PREVIOUSPOST="
&gt; On Aug 6, 7:55 pm, HumbleWorker &lt;amardeep.develo ... @gmail.com&gt; wrote:

&gt; &gt; On Aug 7, 6:48 am, elet.mir ... @gmail.com wrote:

&gt; &gt; &gt; Hi everyone,

&gt; &gt; &gt; I am currently using Visual C++ 8 Standard.

&gt; &gt; &gt; I have a quite large data array (1GB) in the form of an unsigned char
&gt; &gt; &gt; array.
&gt; &gt; &gt; I need to save this to disk in 16-bit format (two chars form a 16-bit
&gt; &gt; &gt; value) or 32-bit format (half of  32 bit value empty).

&gt; &gt; &gt; I was wondering what class I should use to save this data as fast as
&gt; &gt; &gt; possible.
&gt; &gt; &gt; Saving it as bytes is not best, as unfortunately the reading program
&gt; &gt; &gt; (Matlab) will have to convert this to 16-bit, and this will take quite
&gt; &gt; &gt; long.

&gt; &gt; &gt; What matters is for this data to end up on disk as fast as possible in
&gt; &gt; &gt; 16-bit or 32-bit format.

&gt; &gt; &gt; Any help would be greatly appreciated!

&gt; &gt; &gt; Thank you,
&gt; &gt; &gt; Best regards,
&gt; &gt; &gt; Tele

&gt; &gt; Use ofstream class.

&gt; Any particular reason why I should use ofstream?
&gt; As opposed for example to binarywriter or other.

&gt; Regards,
&gt; Tele- Hide quoted text -

&gt; - Show quoted text -
">

BinaryWriters are .NET classes, and they are wrappers around the
streams only. They may not be specifically wrapping around Standard C+
+ streams, but they definitely wrap around something conceptually
similar. If you set the constant ios::binary in the constructor for
fstream, you get a binary writer.

if you can send me your code i can revert back with a complete code.

Thanks.
HW
</POST>
<POST>
<POSTER> elet.mir...@gmail.com </POSTER>
<POSTDATE> 2007-08-07T01:16:00 </POSTDATE>
On Aug 6, 8:58 pm, HumbleWorker &lt;amardeep.develo ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Aug 7, 8:14 am, elet.mir ... @gmail.com wrote:

&gt; &gt; On Aug 6, 7:55 pm, HumbleWorker &lt;amardeep.develo ... @gmail.com&gt; wrote:

&gt; &gt; &gt; On Aug 7, 6:48 am, elet.mir ... @gmail.com wrote:

&gt; &gt; &gt; &gt; Hi everyone,

&gt; &gt; &gt; &gt; I am currently using Visual C++ 8 Standard.

&gt; &gt; &gt; &gt; I have a quite large data array (1GB) in the form of an unsigned char
&gt; &gt; &gt; &gt; array.
&gt; &gt; &gt; &gt; I need to save this to disk in 16-bit format (two chars form a 16-bit
&gt; &gt; &gt; &gt; value) or 32-bit format (half of  32 bit value empty).

&gt; &gt; &gt; &gt; I was wondering what class I should use to save this data as fast as
&gt; &gt; &gt; &gt; possible.
&gt; &gt; &gt; &gt; Saving it as bytes is not best, as unfortunately the reading program
&gt; &gt; &gt; &gt; (Matlab) will have to convert this to 16-bit, and this will take quite
&gt; &gt; &gt; &gt; long.

&gt; &gt; &gt; &gt; What matters is for this data to end up on disk as fast as possible in
&gt; &gt; &gt; &gt; 16-bit or 32-bit format.

&gt; &gt; &gt; &gt; Any help would be greatly appreciated!

&gt; &gt; &gt; &gt; Thank you,
&gt; &gt; &gt; &gt; Best regards,
&gt; &gt; &gt; &gt; Tele

&gt; &gt; &gt; Use ofstream class.

&gt; &gt; Any particular reason why I should use ofstream?
&gt; &gt; As opposed for example to binarywriter or other.

&gt; &gt; Regards,
&gt; &gt; Tele- Hide quoted text -

&gt; &gt; - Show quoted text -

&gt; BinaryWriters are .NET classes, and they are wrappers around the
&gt; streams only. They may not be specifically wrapping around Standard C+
&gt; + streams, but they definitely wrap around something conceptually
&gt; similar. If you set the constant ios::binary in the constructor for
&gt; fstream, you get a binary writer.

&gt; if you can send me your code i can revert back with a complete code.

&gt; Thanks.
&gt; HW
">

Thanks, this information helps.
I didn't know BinaryWriters wrapped around streams, but I know how to
use ios::binary.
Thanks!
Tele
</POST>
<POST>
<POSTER> James Kanze &lt;james.ka...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-07T05:10:00 </POSTDATE>
On Aug 7, 5:57 am, Ian Collins &lt;ian-n ... @hotmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; HumbleWorker wrote:
&gt; &gt; Use ofstream class.
&gt; That's probably bad advice!
&gt; The good advice is to ask on a windows group for the appropriate
&gt; platform specific API.
">

It depends.  A good implementation of ofstream is likely to
handle buffering in some clever fashion which would require a
lot of work on your part to duplicate.

Given the quantity of data, of course, and the fact that he's
probably on a PC, IO bandwidth will probably be the limiting
factor, whatever solution he adopts, so he might as well do
whatever is simplest.

--
James Kanze (GABI Software)             email:james.ka ... @gmail.com
Conseils en informatique orientée objet/
Beratung in objektorientierter Datenverarbeitung
9 place Sémard, 78210 St.-Cyr-l'École, France, +33 (0)1 30 23 00 34
</POST>
<POST>
<POSTER> Ian Collins &lt;ian-n...@hotmail.com&gt; </POSTER>
<POSTDATE> 2007-08-07T05:16:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
James Kanze wrote:
&gt; On Aug 7, 5:57 am, Ian Collins &lt;ian-n ... @hotmail.com&gt; wrote:
&gt;&gt; HumbleWorker wrote:

&gt;&gt;&gt; Use ofstream class.

&gt;&gt; That's probably bad advice!

&gt;&gt; The good advice is to ask on a windows group for the appropriate
&gt;&gt; platform specific API.

&gt; It depends.  A good implementation of ofstream is likely to
&gt; handle buffering in some clever fashion which would require a
&gt; lot of work on your part to duplicate.
">

I'd expect a memory mapped file (where supported) to be the fastest and
simplest solution, but obviously some testing would be required.

<QUOTE PREVIOUSPOST="
&gt; Given the quantity of data, of course, and the fact that he's
&gt; probably on a PC, IO bandwidth will probably be the limiting
&gt; factor, whatever solution he adopts, so he might as well do
&gt; whatever is simplest.
">

True, although the filesystem cache might mask this.  Again, testing and
measuring beats speculation.

--
Ian Collins.
</POST>
<POST>
<POSTER> &quot;Gernot Frisch&quot; &lt;M...@Privacy.net&gt; </POSTER>
<POSTDATE> 2007-08-07T09:14:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&gt; I am currently using Visual C++ 8 Standard.
">

fstream are quite slow on Visual Studio's implementation. I found
fopen/fwrite to be pretty fast, but the API might be an even better
choice.
comp.os.ms-windows.programmer.win32 might be a place to ask.
</POST>
<POST>
<POSTER> James Kanze &lt;james.ka...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-08T03:24:00 </POSTDATE>
On Aug 7, 11:16 am, Ian Collins &lt;ian-n ... @hotmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; James Kanze wrote:
&gt; &gt; On Aug 7, 5:57 am, Ian Collins &lt;ian-n ... @hotmail.com&gt; wrote:
&gt; &gt;&gt; HumbleWorker wrote:
&gt; &gt;&gt;&gt; Use ofstream class.
&gt; &gt;&gt; That's probably bad advice!
&gt; &gt;&gt; The good advice is to ask on a windows group for the appropriate
&gt; &gt;&gt; platform specific API.
&gt; &gt; It depends.  A good implementation of ofstream is likely to
&gt; &gt; handle buffering in some clever fashion which would require a
&gt; &gt; lot of work on your part to duplicate.
&gt; I'd expect a memory mapped file (where supported) to be the
&gt; fastest and simplest solution, but obviously some testing
&gt; would be required.
">

It depends.  For random access, memory mapped files almost
always beat anything else.  For sequential access, I've seen
intelligent buffering win out (although more often for reading
than for writing).

<QUOTE PREVIOUSPOST="
&gt; &gt; Given the quantity of data, of course, and the fact that he's
&gt; &gt; probably on a PC, IO bandwidth will probably be the limiting
&gt; &gt; factor, whatever solution he adopts, so he might as well do
&gt; &gt; whatever is simplest.
&gt; True, although the filesystem cache might mask this.
">

Given the size of his data, I'm not sure.

<QUOTE PREVIOUSPOST="
&gt; Again, testing and measuring beats speculation.
">

I certainly agree with that.  I was just throwing out some
ideas.  If the original is not fast enough, and the profiler
shows that the problem isn't CPU per se, then he'll have to
experiment with different versions.  I just have a sneaky
suspicion, however, that if filebuf is well implemented, and
he's not an expert on the system, he won't be able to beat it.

Of course, if the problem is CPU, because e.g. the standard
requires filebuf to consider locale specific mappings, even if
the file type is binary, or to maintain a local buffer (where as
he has all of his data already formatted and buffered) then it
shouldn't be too hard to come up with something which requires
very little CPU.

As to which case he's in, of course: only his profiler knows for
sure.

--
James Kanze (GABI Software)             email:james.ka ... @gmail.com
Conseils en informatique orientée objet/
Beratung in objektorientierter Datenverarbeitung
9 place Sémard, 78210 St.-Cyr-l'École, France, +33 (0)1 30 23 00 34
</POST>
<POST>
<POSTER> Ian Collins &lt;ian-n...@hotmail.com&gt; </POSTER>
<POSTDATE> 2007-08-08T03:49:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
James Kanze wrote:
&gt; On Aug 7, 11:16 am, Ian Collins &lt;ian-n ... @hotmail.com&gt; wrote:
&gt;&gt; James Kanze wrote:

&gt;&gt;&gt; Given the quantity of data, of course, and the fact that he's
&gt;&gt;&gt; probably on a PC, IO bandwidth will probably be the limiting
&gt;&gt;&gt; factor, whatever solution he adopts, so he might as well do
&gt;&gt;&gt; whatever is simplest.

&gt;&gt; True, although the filesystem cache might mask this.

&gt; Given the size of his data, I'm not sure.
">

On this box (Solaris with ZFS), the file system will use as much of the
8GB of RAM as it can for cache - so it can make a big impact!

--
Ian Collins.
</POST>
</TEXT>
</BODY>
</DOC>
