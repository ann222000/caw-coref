<DOC>
<DOCID> eng-NG-31-126399-8203959 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-08-09T19:47:00 </DATETIME>
<BODY>
<HEADLINE>
beginner whitespace question
</HEADLINE>
<TEXT>
<POST>
<POSTER> eggie5 &lt;egg...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-09T19:47:00 </POSTDATE>
I keep getting an error for line 7, what's wrong with this?

from django.db import models

class Poll(models.Model):
question = models.CharField(max_length=200)
pub_date = models.DateTimeField('date published')

def __unicode__(self):
return self.question

def was_published_today(self):
return self.pub_date.date() == datetime.date.today()

class Choice(models.Model):
poll = models.ForeignKey(Poll)
choice = models.CharField(max_length=200)
votes = models.IntegerField()

def __unicode__(self):
return self.choice
</POST>
<POST>
<POSTER> Dan Bishop &lt;danb...@yahoo.com&gt; </POSTER>
<POSTDATE> 2007-08-09T19:52:00 </POSTDATE>
On Aug 9, 6:47 pm, eggie5 &lt;egg ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I keep getting an error for line 7, what's wrong with this?

&gt; from django.db import models

&gt; class Poll(models.Model):
&gt;     question = models.CharField(max_length=200)
&gt;     pub_date = models.DateTimeField('date published')

&gt;         def __unicode__(self):
&gt;                 return self.question
">

The &quot;def&quot; statements have to be at the same indentation level as
what's before it.
</POST>
<POST>
<POSTER> eggie5 &lt;egg...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-09T20:02:00 </POSTDATE>
On Aug 9, 4:52 pm, Dan Bishop &lt;danb ... @yahoo.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Aug 9, 6:47 pm, eggie5 &lt;egg ... @gmail.com&gt; wrote:

&gt; &gt; I keep getting an error for line 7, what's wrong with this?

&gt; &gt; from django.db import models

&gt; &gt; class Poll(models.Model):
&gt; &gt;     question = models.CharField(max_length=200)
&gt; &gt;     pub_date = models.DateTimeField('date published')

&gt; &gt;         def __unicode__(self):
&gt; &gt;                 return self.question

&gt; The &quot;def&quot; statements have to be at the same indentation level as
&gt; what's before it.
">

will they still be a part of the classes?
</POST>
<POST>
<POSTER> Dan Bishop &lt;danb...@yahoo.com&gt; </POSTER>
<POSTDATE> 2007-08-09T20:52:00 </POSTDATE>
On Aug 9, 7:02 pm, eggie5 &lt;egg ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Aug 9, 4:52 pm, Dan Bishop &lt;danb ... @yahoo.com&gt; wrote:

&gt; &gt; On Aug 9, 6:47 pm, eggie5 &lt;egg ... @gmail.com&gt; wrote:

&gt; &gt; &gt; I keep getting an error for line 7, what's wrong with this?

&gt; &gt; &gt; from django.db import models

&gt; &gt; &gt; class Poll(models.Model):
&gt; &gt; &gt;     question = models.CharField(max_length=200)
&gt; &gt; &gt;     pub_date = models.DateTimeField('date published')

&gt; &gt; &gt;         def __unicode__(self):
&gt; &gt; &gt;                 return self.question

&gt; &gt; The &quot;def&quot; statements have to be at the same indentation level as
&gt; &gt; what's before it.

&gt; will they still be a part of the classes?
">

If you indent them twice, it's a syntax error.
If you indent them once, they'll be methods of the class.
If you don't indent them at all, they'll be global functions.
</POST>
<POST>
<POSTER> eggie5 &lt;egg...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-09T21:13:00 </POSTDATE>
But this still isn't valid:

from django.db import models

class Poll(models.Model):
question = models.CharField(max_length=200)
pub_date = models.DateTimeField('date published')

def __unicode__(self):
return self.question

class Choice(models.Model):
poll = models.ForeignKey(Poll)
choice = models.CharField(max_length=200)
votes = models.IntegerField()

def __unicode__(self):
return self.choice

On Aug 9, 5:52 pm, Dan Bishop &lt;danb ... @yahoo.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Aug 9, 7:02 pm, eggie5 &lt;egg ... @gmail.com&gt; wrote:

&gt; &gt; On Aug 9, 4:52 pm, Dan Bishop &lt;danb ... @yahoo.com&gt; wrote:

&gt; &gt; &gt; On Aug 9, 6:47 pm, eggie5 &lt;egg ... @gmail.com&gt; wrote:

&gt; &gt; &gt; &gt; I keep getting an error for line 7, what's wrong with this?

&gt; &gt; &gt; &gt; from django.db import models

&gt; &gt; &gt; &gt; class Poll(models.Model):
&gt; &gt; &gt; &gt;     question = models.CharField(max_length=200)
&gt; &gt; &gt; &gt;     pub_date = models.DateTimeField('date published')

&gt; &gt; &gt; &gt;         def __unicode__(self):
&gt; &gt; &gt; &gt;                 return self.question

&gt; &gt; &gt; The &quot;def&quot; statements have to be at the same indentation level as
&gt; &gt; &gt; what's before it.

&gt; &gt; will they still be a part of the classes?

&gt; If you indent them twice, it's a syntax error.
&gt; If you indent them once, they'll be methods of the class.
&gt; If you don't indent them at all, they'll be global functions.
">
</POST>
<POST>
<POSTER> James Stroud &lt;jstr...@mbi.ucla.edu&gt; </POSTER>
<POSTDATE> 2007-08-09T21:28:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
eggie5 wrote:
&gt; But this still isn't valid:

&gt; from django.db import models

&gt; class Poll(models.Model):
&gt;    question = models.CharField(max_length=200)
&gt;    pub_date = models.DateTimeField('date published')

&gt;     def __unicode__(self):
&gt;            return self.question

&gt; class Choice(models.Model):
&gt;     poll = models.ForeignKey(Poll)
&gt;     choice = models.CharField(max_length=200)
&gt;     votes = models.IntegerField()

&gt;     def __unicode__(self):
&gt;            return self.choice
">

You want this:

from django.db import models

class Poll(models.Model):
question = models.CharField(max_length=200)
pub_date = models.DateTimeField('date published')

def __unicode__(self):
return self.question

class Choice(models.Model):
poll = models.ForeignKey(Poll)
choice = models.CharField(max_length=200)
votes = models.IntegerField()

def __unicode__(self):
return self.choice

But this mixes tabs and spaces.

Rules:

1. Don't use tabs!
2. If you are clueless enough to violate (1), then don't mix tabs and
spaces.
3. Don't use tabs!

Tabs are for tables, hence the name. &quot;Use spaces for space and use tabs
for tables&quot; can be a little mnemonic to help you remember the rules. We
can make a little song together if you can think of some things that
rhyme with &quot;don't&quot; and &quot;use&quot; and &quot;tabs&quot;.

You have been warned. Next time I'll piont and laugh as I answer.

James

--
James Stroud
UCLA-DOE Institute for Genomics and Proteomics
Box 951570
Los Angeles, CA 90095

http://www.jamesstroud.com/
</POST>
<POST>
<POSTER> James Stroud &lt;jstr...@mbi.ucla.edu&gt; </POSTER>
<POSTDATE> 2007-08-09T21:31:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
James Stroud wrote:
&gt;     def __unicode__(self):
&gt;     return self.choice
">

Laughing to hard at the tab &amp; spaces thing to notice the lack of
indentation here.

James

--
James Stroud
UCLA-DOE Institute for Genomics and Proteomics
Box 951570
Los Angeles, CA 90095

http://www.jamesstroud.com/
</POST>
<POST>
<POSTER> eggie5 &lt;egg...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-09T22:28:00 </POSTDATE>
On Aug 9, 6:31 pm, James Stroud &lt;jstr ... @mbi.ucla.edu&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; James Stroud wrote:
&gt; &gt;     def __unicode__(self):
">

That's so goofy.....

<QUOTE PREVIOUSPOST="
&gt; &gt;     return self.choice

&gt; Laughing to hard at the tab &amp; spaces thing to notice the lack of
&gt; indentation here.

&gt; James

&gt; --
&gt; James Stroud
&gt; UCLA-DOE Institute for Genomics and Proteomics
&gt; Box 951570
&gt; Los Angeles, CA 90095

&gt; http://www.jamesstroud.com/
">
</POST>
<POST>
<POSTER> Dan Bishop &lt;danb...@yahoo.com&gt; </POSTER>
<POSTDATE> 2007-08-09T23:25:00 </POSTDATE>
On Aug 9, 8:28 pm, James Stroud &lt;jstr ... @mbi.ucla.edu&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; eggie5 wrote:
&gt; &gt; But this still isn't valid:

&gt; &gt; from django.db import models

&gt; &gt; class Poll(models.Model):
&gt; &gt;    question = models.CharField(max_length=200)
&gt; &gt;    pub_date = models.DateTimeField('date published')

&gt; &gt;     def __unicode__(self):
&gt; &gt;            return self.question

&gt; &gt; class Choice(models.Model):
&gt; &gt;     poll = models.ForeignKey(Poll)
&gt; &gt;     choice = models.CharField(max_length=200)
&gt; &gt;     votes = models.IntegerField()

&gt; &gt;     def __unicode__(self):
&gt; &gt;            return self.choice

&gt; You want this:

&gt; from django.db import models

&gt; class Poll(models.Model):
&gt;         question = models.CharField(max_length=200)
&gt;         pub_date = models.DateTimeField('date published')

&gt;         def __unicode__(self):
&gt;                 return self.question

&gt; class Choice(models.Model):
&gt;      poll = models.ForeignKey(Poll)
&gt;      choice = models.CharField(max_length=200)
&gt;      votes = models.IntegerField()

&gt;      def __unicode__(self):
&gt;         return self.choice

&gt; But this mixes tabs and spaces.

&gt; Rules:

&gt; 1. Don't use tabs!
&gt; 2. If you are clueless enough to violate (1), then don't mix tabs and
&gt; spaces.
&gt; 3. Don't use tabs!

&gt; Tabs are for tables, hence the name. &quot;Use spaces for space and use tabs
&gt; for tables&quot; can be a little mnemonic to help you remember the rules. We
&gt; can make a little song together if you can think of some things that
&gt; rhyme with &quot;don't&quot; and &quot;use&quot; and &quot;tabs&quot;.
">

&quot;won't&quot;

&quot;blues&quot;, &quot;booze&quot;, &quot;bruise&quot;, &quot;choose&quot;, &quot;cruise&quot;, &quot;fuse&quot;, &quot;hues&quot;,
&quot;Jews&quot;, &quot;lose&quot;, &quot;muse&quot;, &quot;news&quot;, &quot;snooze&quot;, &quot;views&quot;, etc.

&quot;abs&quot;, &quot;cabs&quot;, &quot;crabs&quot;, &quot;dabs&quot;, &quot;grabs&quot;, &quot;labs&quot;, &quot;scabs&quot;, &quot;slabs&quot;,
&quot;stabs&quot;, etc.
</POST>
<POST>
<POSTER> James Stroud &lt;jstr...@mbi.ucla.edu&gt; </POSTER>
<POSTDATE> 2007-08-10T01:37:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Dan Bishop wrote:
&gt;&gt; Tabs are for tables, hence the name. &quot;Use spaces for space and use tabs
&gt;&gt; for tables&quot; can be a little mnemonic to help you remember the rules. We
&gt;&gt; can make a little song together if you can think of some things that
&gt;&gt; rhyme with &quot;don't&quot; and &quot;use&quot; and &quot;tabs&quot;.

&gt; &quot;won't&quot;

&gt; &quot;blues&quot;, &quot;booze&quot;, &quot;bruise&quot;, &quot;choose&quot;, &quot;cruise&quot;, &quot;fuse&quot;, &quot;hues&quot;,
&gt; &quot;Jews&quot;, &quot;lose&quot;, &quot;muse&quot;, &quot;news&quot;, &quot;snooze&quot;, &quot;views&quot;, etc.

&gt; &quot;abs&quot;, &quot;cabs&quot;, &quot;crabs&quot;, &quot;dabs&quot;, &quot;grabs&quot;, &quot;labs&quot;, &quot;scabs&quot;, &quot;slabs&quot;,
&gt; &quot;stabs&quot;, etc.
">

When you want to screw your whitespace--don't!
Take this little pledge and I know you won't:

When I was in school I would take of booze
While my typing teacher said I'm free to use
Space or formfeed or even tabs
And I punched so hard with my pinkie that scabs
Covered my Jake and Elwood tatoos.
(You didn't see that one coming did yous?)
</POST>
<POST>
<POSTER> Ben Finney &lt;bignose+hates-s...@benfinney.id.au&gt; </POSTER>
<POSTDATE> 2007-08-10T06:05:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
James Stroud &lt;jstr ... @mbi.ucla.edu&gt; writes:
&gt; When you want to screw your whitespace--don't!
&gt; Take this little pledge and I know you won't:
">

James, you're a poet
And you don't even realise

--
\      &quot;[...] a Microsoft Certified System Engineer is to information |
`\     technology as a McDonalds Certified Food Specialist is to the |
_o__)                               culinary arts.&quot; —Michael Bacarella |
Ben Finney
</POST>
<POST>
<POSTER> eggie5 &lt;egg...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-08-10T14:46:00 </POSTDATE>
On Aug 9, 10:37 pm, James Stroud &lt;jstr ... @mbi.ucla.edu&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Dan Bishop wrote:
&gt; &gt;&gt; Tabs are for tables, hence the name. &quot;Use spaces for space and use tabs
&gt; &gt;&gt; for tables&quot; can be a little mnemonic to help you remember the rules. We
&gt; &gt;&gt; can make a little song together if you can think of some things that
&gt; &gt;&gt; rhyme with &quot;don't&quot; and &quot;use&quot; and &quot;tabs&quot;.

&gt; &gt; &quot;won't&quot;

&gt; &gt; &quot;blues&quot;, &quot;booze&quot;, &quot;bruise&quot;, &quot;choose&quot;, &quot;cruise&quot;, &quot;fuse&quot;, &quot;hues&quot;,
&gt; &gt; &quot;Jews&quot;, &quot;lose&quot;, &quot;muse&quot;, &quot;news&quot;, &quot;snooze&quot;, &quot;views&quot;, etc.

&gt; &gt; &quot;abs&quot;, &quot;cabs&quot;, &quot;crabs&quot;, &quot;dabs&quot;, &quot;grabs&quot;, &quot;labs&quot;, &quot;scabs&quot;, &quot;slabs&quot;,
&gt; &gt; &quot;stabs&quot;, etc.

&gt; When you want to screw your whitespace--don't!
&gt; Take this little pledge and I know you won't:

&gt; When I was in school I would take of booze
&gt; While my typing teacher said I'm free to use
&gt; Space or formfeed or even tabs
&gt; And I punched so hard with my pinkie that scabs
&gt; Covered my Jake and Elwood tatoos.
&gt; (You didn't see that one coming did yous?)
">

I'm so confused, I have no idea what's going on...
</POST>
</TEXT>
</BODY>
</DOC>
