<DOC>
<DOCID> eng-NG-31-135902-8606096 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-09-10T03:29:00 </DATETIME>
<BODY>
<HEADLINE>
Complete Basic?
</HEADLINE>
<TEXT>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T03:29:00 </POSTDATE>
Just found something interesting looking back:
--
!!  TML Systems Sells off IIgs line  !!
...and their Mac line as well.  In other words, TML has dissolved as
a
company (but they are still answering their phones (904)636-8592).

&quot;Complete Technology&quot; is a new company, founded by Vince Cooper
(former
engineer at TML in charge of the IIgs line), and they have purchased
the
entire line of IIgs products from TML (TML Basic, TML Pascal...) and
will
soon re-release them as &quot;Complete Basic&quot;, &quot;Complete Pascal&quot;...

Their first step, is to release &quot;Complete Pascal v1.0&quot;, which will be
essentially TML Pascal II v1.1 with few, if any, changes. They will
then
update TML Basic so that it can run under System 5.0, and release it
as
&quot;Complete Basic&quot;. They will then go back to their Pascal compiler,
and
resolve as many bugs as possible, and enhance the resource editor.
--

Is there ever a release of Complete Basic? I have seen the sample
codes of TML Basic and it is quite bad (I am not sure about TML Pascal
1.x version... maybe they are equally bad and 2.0 and a lot of
enhancements). I am wondering whether Complete Basic is ever released.
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T04:21:00 </POSTDATE>
The version I have is 1.0, released in 1988. Just thought I make a
note of this - seems to be the same era as TML Pascal 1.x.
</POST>
<POST>
<POSTER> Polymorph &lt;mike.a.steph...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T04:49:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; The version I have is 1.0, released in 1988. Just thought I make a
&gt; note of this - seems to be the same era as TML Pascal 1.x.
">

From what I've read, I *believe* there was a Complete Basic as well (it
was certainly mentioned by Vince in some of his promotional speeches).

I've not seen a version of it however, maybe or friend Paul could work
his magic again.  :-)

cheers,
-p
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T05:21:00 </POSTDATE>
And is there any site hosted a version of TML Basic too?

I am also never seen a documentation of TML Basic.

On 9 10 ,   4 49 , Polymorph &lt;mike.a.steph ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt;  From what I've read, I *believe* there was a Complete Basic as well (it
&gt; was certainly mentioned by Vince in some of his promotional speeches).

&gt; I've not seen a version of it however, maybe or friend Paul could work
&gt; his magic again.  :-)

&gt; cheers,
&gt; -p
">
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T06:02:00 </POSTDATE>
Interesting read:

http://72.14.235.104/search?q=cache:YYysx_T7BNUJ:textfiles.poboxes.in...

Some tidbits:

- syntax the same as GS Basic! (This itself is a good reason for
learning it)
- at least 1.1 is being released or 1.5 (mentioned here)

I am also wondering about the status of GS Basic from Apple... has
anyone used this before?
</POST>
<POST>
<POSTER> &quot;sfahey&quot; &lt;sfa...@a2central.com.remove-l0e-this&gt; </POSTER>
<POSTDATE> 2007-09-10T11:07:00 </POSTDATE>
To: limtc
Re: Re: Complete Basic?
By: limtc to comp.sys.apple2.programmer,comp.sys.apple2 on Mon Sep 10 2007 03:02 am

&gt; I am also wondering about the status of GS Basic from Apple... has
&gt; anyone used this before?

Never left beta, last known version 1.0 b4.

--- Synchronet 3.14a-Win32 NewsLink 1.85
A2Central.com - Your total source for Apple II computing.
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T11:27:00 </POSTDATE>
How's the quality of 1.0b4? Usable?

Most Google product are beta anyway. :)

On 9 10 ,   11 07 , &quot;sfahey&quot; &lt;sfa ... @a2central.com.remove-l0e-this&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; Never left beta, last known version 1.0 b4.

&gt; --- Synchronet 3.14a-Win32 NewsLink 1.85
&gt; A2Central.com - Your total source for Apple II computing.
">
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-10T15:07:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; How's the quality of 1.0b4? Usable?

&gt; Most Google product are beta anyway. :)
">

As I'm sure you know &quot;beta&quot; means many different things to
different companies...

I've seen some &quot;release&quot; software that was not up to my
idea of beta software.  ;-)

<QUOTE PREVIOUSPOST="
&gt; On 9 10 ,   11 07 , &quot;sfahey&quot; &lt;sfa ... @a2central.com.remove-l0e-this&gt;
&gt; wrote:

&gt;&gt;Never left beta, last known version 1.0 b4.
">

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T19:26:00 </POSTDATE>
Ya, the question is whether Apple is such a company? :)

On 9 11 ,   3 07 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; As I'm sure you know &quot;beta&quot; means many different things to
&gt; different companies...

&gt; I've seen some &quot;release&quot; software that was not up to my
&gt; idea of beta software.  ;-)
">
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-10T23:18:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; Ya, the question is whether Apple is such a company? :)
">

When a program is getting canceled, sometimes the dying gasps
are not typical of the company...

<QUOTE PREVIOUSPOST="
&gt; On 9 11 ,   3 07 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;As I'm sure you know &quot;beta&quot; means many different things to
&gt;&gt;different companies...

&gt;&gt;I've seen some &quot;release&quot; software that was not up to my
&gt;&gt;idea of beta software.  ;-)
">

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-10T23:52:00 </POSTDATE>
Have you (or others here) try it before?

I think Apple cancels many Apple II related projects sometimes not
related to the product itself, but more of other reasons (like it is
too powerful for a non-Mac computer).

On 9 11 ,   11 18 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; limtc wrote:
&gt; &gt; Ya, the question is whether Apple is such a company? :)

&gt; When a program is getting canceled, sometimes the dying gasps
&gt; are not typical of the company...
&gt;ool--and it's seriously underused.&quot;
">
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-11T03:04:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; Have you (or others here) try it before?

&gt; I think Apple cancels many Apple II related projects sometimes not
&gt; related to the product itself, but more of other reasons (like it is
&gt; too powerful for a non-Mac computer).
">

I think you're right--but a vanishing project that want's to
just &quot;get something out&quot; often makes lots of compromises.

Frequently, marketing steps in and prevents them from releasing
their final effort at all, but it sometimes &quot;leaks&quot; out as a
&quot;beta&quot;.

<QUOTE PREVIOUSPOST="
&gt; On 9 11 ,   11 18 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;limtc wrote:

&gt;&gt;&gt;Ya, the question is whether Apple is such a company? :)

&gt;&gt;When a program is getting canceled, sometimes the dying gasps
&gt;&gt;are not typical of the company...
">

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-11T03:31:00 </POSTDATE>
I am interested only as a history footnote and wanted to check it out
somehow. Just wonder anybody has a manual for it (I saw a French book
on it) or actually try it out.

On Sep 11, 3:04 pm, &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I think you're right--but a vanishing project that want's to
&gt; just &quot;get something out&quot; often makes lots of compromises.

&gt; Frequently, marketing steps in and prevents them from releasing
&gt; their final effort at all, but it sometimes &quot;leaks&quot; out as a
&gt; &quot;beta&quot;.

&gt; &gt; On 9 11 ,   11 18 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

&gt; &gt;&gt;limtc wrote:

&gt; &gt;&gt;&gt;Ya, the question is whether Apple is such a company? :)

&gt; &gt;&gt;When a program is getting canceled, sometimes the dying gasps
&gt; &gt;&gt;are not typical of the company...

&gt; -michael

&gt; NadaPong: Network game demo for Apple II computers!
&gt; Home page: http://members.aol.com/MJMahon/

&gt; &quot;The wastebasket is our most important design
&gt; tool--and it's seriously underused.&quot;
">
</POST>
<POST>
<POSTER> &quot;sfahey&quot; &lt;sfa...@a2central.com.remove-fga-this&gt; </POSTER>
<POSTDATE> 2007-09-11T10:35:00 </POSTDATE>
To: limtc
Re: Re: Complete Basic?
By: limtc to comp.sys.apple2 on Mon Sep 10 2007 08:52 pm

&gt; I think Apple cancels many Apple II related projects sometimes not
&gt; related to the product itself, but more of other reasons (like it is
&gt; too powerful for a non-Mac computer).

I think it was more likely due to their alternating warm and cold relationships
with various developers, and the realization that their product wouldn't sell
in an already crowded market. That and declining sales and de-emphasis of the
Apple II platform - it was bound to get scrapped.

--- Synchronet 3.14a-Win32 NewsLink 1.85
A2Central.com - Your total source for Apple II computing.
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-11T14:16:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
sfahey wrote:
&gt;   To: limtc
&gt;   Re: Re: Complete Basic?
&gt;   By: limtc to comp.sys.apple2 on Mon Sep 10 2007 08:52 pm

&gt;  &gt; I think Apple cancels many Apple II related projects sometimes not
&gt;  &gt; related to the product itself, but more of other reasons (like it is
&gt;  &gt; too powerful for a non-Mac computer).

&gt; I think it was more likely due to their alternating warm and cold relationships
&gt; with various developers, and the realization that their product wouldn't sell
&gt; in an already crowded market. That and declining sales and de-emphasis of the
&gt; Apple II platform - it was bound to get scrapped.
">

That sounds right.

I also suspect that someone noticed that writing desktop programs in
any language was not going to be a beginner's exercise.  As GSOS became
the IIgs OS, any hope of simple programs became a pipedream.

As I've observed before, a GUI means that almost any program you want
to write will be 10% your functionality and 90% GUI wrangling.  That's
a heck of a tax!

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> &quot;Charlie&quot; &lt;charlieD...@verEYEzon.net&gt; </POSTER>
<POSTDATE> 2007-09-12T13:56:00 </POSTDATE>
&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...

<QUOTE PREVIOUSPOST="
&gt; sfahey wrote:
&gt;&gt;   To: limtc
&gt;&gt;   Re: Re: Complete Basic?
&gt;&gt;   By: limtc to comp.sys.apple2 on Mon Sep 10 2007 08:52 pm

&gt;&gt;  &gt; I think Apple cancels many Apple II related projects sometimes not
&gt;&gt;  &gt; related to the product itself, but more of other reasons (like it is
&gt;&gt;  &gt; too powerful for a non-Mac computer).

&gt;&gt; I think it was more likely due to their alternating warm and cold
&gt;&gt; relationships
&gt;&gt; with various developers, and the realization that their product wouldn't
&gt;&gt; sell
&gt;&gt; in an already crowded market. That and declining sales and de-emphasis of
&gt;&gt; the
&gt;&gt; Apple II platform - it was bound to get scrapped.

&gt; That sounds right.

&gt; I also suspect that someone noticed that writing desktop programs in
&gt; any language was not going to be a beginner's exercise.
">

I agree.

<QUOTE PREVIOUSPOST="
&gt; As GSOS became
&gt; the IIgs OS, any hope of simple programs became a pipedream.
">

I have to disagree with you here.  GSOS has little if anything to do with
the GUI that you are associating with the Apple IIgs.  GSOS is an operating
system mostly for input/output for block and character devices.  Calls are
made to its function in a similar way to those in ProDOS machine language
interface.  Aside from the fact that it can handle much larger volumes and
files, the major differences are that GSOS has no file system of its own (it
translates its functions to handle ProDOS, DOS 3.3, MS-DOS, etc.) and it
(with help from the Memory Manager) allows files/programs to reside almost
anywhere in memory.

<QUOTE PREVIOUSPOST="
&gt; As I've observed before, a GUI means that almost any program you want
&gt; to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt; a heck of a tax!
">

Certainly true (and I'm someone who likes GUI programming).  There are
non-GUI tools in the IIgs toolbox but text based programs were pretty rare
on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it is
GSOS/text.  The Orca text shell is another.

Charlie
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-12T21:33:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Charlie wrote:
&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt; news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...

&gt;&gt;sfahey wrote:

&gt;&gt;&gt;  To: limtc
&gt;&gt;&gt;  Re: Re: Complete Basic?
&gt;&gt;&gt;  By: limtc to comp.sys.apple2 on Mon Sep 10 2007 08:52 pm

&gt;&gt;&gt; &gt; I think Apple cancels many Apple II related projects sometimes not
&gt;&gt;&gt; &gt; related to the product itself, but more of other reasons (like it is
&gt;&gt;&gt; &gt; too powerful for a non-Mac computer).

&gt;&gt;&gt;I think it was more likely due to their alternating warm and cold
&gt;&gt;&gt;relationships
&gt;&gt;&gt;with various developers, and the realization that their product wouldn't
&gt;&gt;&gt;sell
&gt;&gt;&gt;in an already crowded market. That and declining sales and de-emphasis of
&gt;&gt;&gt;the
&gt;&gt;&gt;Apple II platform - it was bound to get scrapped.

&gt;&gt;That sounds right.

&gt;&gt;I also suspect that someone noticed that writing desktop programs in
&gt;&gt;any language was not going to be a beginner's exercise.

&gt; I agree.

&gt;&gt;As GSOS became
&gt;&gt;the IIgs OS, any hope of simple programs became a pipedream.

&gt; I have to disagree with you here.  GSOS has little if anything to do with
&gt; the GUI that you are associating with the Apple IIgs.  GSOS is an operating
&gt; system mostly for input/output for block and character devices.  Calls are
&gt; made to its function in a similar way to those in ProDOS machine language
&gt; interface.  Aside from the fact that it can handle much larger volumes and
&gt; files, the major differences are that GSOS has no file system of its own (it
&gt; translates its functions to handle ProDOS, DOS 3.3, MS-DOS, etc.) and it
&gt; (with help from the Memory Manager) allows files/programs to reside almost
&gt; anywhere in memory.
">

Of course that's true, but to the average user, GSOS was just one big
ball of wax.  Either you booted ProDOS and had a faster //e or you
booted GSOS and had a GUI machine that you couldn't program.  Thye Chean
has been trying to address that very problem.

<QUOTE PREVIOUSPOST="
&gt;&gt;As I've observed before, a GUI means that almost any program you want
&gt;&gt;to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt;&gt;a heck of a tax!

&gt; Certainly true (and I'm someone who likes GUI programming).  There are
&gt; non-GUI tools in the IIgs toolbox but text based programs were pretty rare
&gt; on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it is
&gt; GSOS/text.  The Orca text shell is another.
">

True, but only developers used text-based apps on the IIgs.

The original Apple II &quot;idea&quot; was that its considerable capabilities
were accessible out-of-the box to anyone who was patient and could
read--a true &quot;bicycle for the mind.&quot;

By contrast, the Apple IIgs (like the III before it) had even greater
capabilities, but access to them was wrapped in prodigious complexity
and locked up by the absence of out of the box documentation and tools.

I still say that the IIgs, like the III, departed radically from the
original Apple II idea of *accessible computer power*, and having Woz's
signature on the case of the first 50,000 or so was irony.

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> David Schmenk &lt;dschm...@sbcglobal.net&gt; </POSTER>
<POSTDATE> 2007-09-13T00:01:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Michael J. Mahon wrote:
&gt; Charlie wrote:
&gt;&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt; news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...
">

[snip]

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt; As I've observed before, a GUI means that almost any program you want
&gt;&gt;&gt; to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt;&gt;&gt; a heck of a tax!

&gt;&gt; Certainly true (and I'm someone who likes GUI programming).  There are
&gt;&gt; non-GUI tools in the IIgs toolbox but text based programs were pretty
&gt;&gt; rare on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it
&gt;&gt; is GSOS/text.  The Orca text shell is another.

&gt; True, but only developers used text-based apps on the IIgs.

&gt; The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt; were accessible out-of-the box to anyone who was patient and could
&gt; read--a true &quot;bicycle for the mind.&quot;

&gt; By contrast, the Apple IIgs (like the III before it) had even greater
&gt; capabilities, but access to them was wrapped in prodigious complexity
&gt; and locked up by the absence of out of the box documentation and tools.

&gt; I still say that the IIgs, like the III, departed radically from the
&gt; original Apple II idea of *accessible computer power*, and having Woz's
&gt; signature on the case of the first 50,000 or so was irony.

&gt; -michael

&gt; NadaPong: Network game demo for Apple II computers!
&gt; Home page: http://members.aol.com/MJMahon/

&gt; &quot;The wastebasket is our most important design
&gt; tool--and it's seriously underused.&quot;
">

I think the difference is that the III and IIgs were &quot;tweeners&quot;.
Neither this nor that.  The III was supposed to be a serious business
machine but hobbled with II compatibility.  I honestly don't know what
the IIgs was supposed to be.  A Mac for the home?  A high end game
machine?  Too slow for either. Whatever.

The II had a purpose and focus.  It was the computer Woz wanted for
himself to explore what it meant to be a microcomputer.  It came out of
the box ready to explore.  There was no right or wrong way to program
it.  No GUI that forced you to use the widgets handed to you in a
library or toolbox.  No Managers.

Why, when I was a youngster I learned to program by typing hex code into
the monitor!  Harumph!  ( I know somebody is going to reply with: I had
toggle switches! or: I had to program core memory with tweezers!)

If you're going to program for a GUI, might as well go for XCode on OS
X.  Interface Builder almost makes it fun.

Dave...
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T00:33:00 </POSTDATE>
Yup, except that I prefer Visual Studio and C#. I personally dislike
Objective C, but that's another issue. :)

That's why my programming example will not be desktop programming, but
primary on what's the simplest on these: graphics and animation. I
hope doing sound is as simple as these though.

On 9 13 ,   12 01 , David Schmenk &lt;dschm ... @sbcglobal.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; If you're going to program for a GUI, might as well go for XCode on OS
&gt; X.  Interface Builder almost makes it fun.

&gt; Dave...
">
</POST>
<POST>
<POSTER> Eric &lt;englere_...@yahoo.com&gt; </POSTER>
<POSTDATE> 2007-09-13T10:57:00 </POSTDATE>
On Sep 13, 12:01 am, David Schmenk &lt;dschm ... @sbcglobal.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; The II had a purpose and focus.  It was the computer Woz wanted for
&gt; himself to explore what it meant to be a microcomputer.  It came out of
&gt; the box ready to explore.
">

I wish there were something like this today. Today's young people are
discouraged from getting under the hood to the low-level assembler.
Many of them really don't understand what is going on. Their high
level software APIs wrap all the cool stuff we really enjoyed :-(

Eric
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T11:12:00 </POSTDATE>
I actually think the II serve 2 focus, not one. The total beginners of
programming are well served by the Applesoft BASIC with its ease of
use (just program!) and the hacker community (with buildin assembler
and monitor).

None of these are now served by the current computer generation.

The hacker community is probably still alive and well (as a smaller
group) - most of them are probably in comp.sys.apple2.programmer
now. :)

I wanted to focus on the 1st community, even though I might have only
one or more audience (at least one who is my son). :)

On 9 13 ,   10 57 , Eric &lt;englere_ ... @yahoo.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On Sep 13, 12:01 am, David Schmenk &lt;dschm ... @sbcglobal.net&gt; wrote:

&gt; &gt; The II had a purpose and focus.  It was the computer Woz wanted for
&gt; &gt; himself to explore what it meant to be a microcomputer.  It came out of
&gt; &gt; the box ready to explore.

&gt; I wish there were something like this today. Today's young people are
&gt; discouraged from getting under the hood to the low-level assembler.
&gt; Many of them really don't understand what is going on. Their high
&gt; level software APIs wrap all the cool stuff we really enjoyed :-(

&gt; Eric
">
</POST>
<POST>
<POSTER> &quot;sfahey&quot; &lt;sfa...@a2central.com.remove-vnm-this&gt; </POSTER>
<POSTDATE> 2007-09-13T11:08:00 </POSTDATE>
To: David Schmenk
Re: Re: Complete Basic?
By: David Schmenk to comp.sys.apple2 on Thu Sep 13 2007 04:01 am

&gt; I think the difference is that the III and IIgs were &quot;tweeners&quot;.
&gt; Neither this nor that.  The III was supposed to be a serious business
&gt; machine but hobbled with II compatibility.  I honestly don't know what
&gt; the IIgs was supposed to be.  A Mac for the home?  A high end game
&gt; machine?  Too slow for either. Whatever.

If this were slashdot, I'd have given this a +5 (Insightful)

--- Synchronet 3.14a-Win32 NewsLink 1.85
A2Central.com - Your total source for Apple II computing.
</POST>
<POST>
<POSTER> &quot;Charlie&quot; &lt;charlieD...@verEYEzon.net&gt; </POSTER>
<POSTDATE> 2007-09-13T13:06:00 </POSTDATE>
&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
news:lP6dnWNZgL35DnXbnZ2dnUVZ_hisnZ2d@comcast.com ...

*** much snipped ***

<QUOTE PREVIOUSPOST="
&gt; The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt; were accessible out-of-the box to anyone who was patient and could
&gt; read--a true &quot;bicycle for the mind.&quot;

&gt; By contrast, the Apple IIgs (like the III before it) had even greater
&gt; capabilities, but access to them was wrapped in prodigious complexity
&gt; and locked up by the absence of out of the box documentation and tools.
">

Ah..., now you've hit on what I believe are the true reasons that the Apple
IIgs was different.  No toolbox documentation out of the box and no built in
GS specific BASIC.

<QUOTE PREVIOUSPOST="
&gt; I still say that the IIgs, like the III, departed radically from the
&gt; original Apple II idea of *accessible computer power*, and having Woz's
&gt; signature on the case of the first 50,000 or so was irony.
">

Well, departed yes, radically no, I can't see that.  After all the IIgs
still has nearly all the capabilities of the other Apple IIs (more than the
Apple IIc in my opinion) and the bundled documentation deteriorated with all
the later Apple IIs.

Charlie
</POST>
<POST>
<POSTER> &quot;Charlie&quot; &lt;charlieD...@verEYEzon.net&gt; </POSTER>
<POSTDATE> 2007-09-13T13:35:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
&quot;David Schmenk&quot; &lt;dschm ... @sbcglobal.net&gt; wrote in message
">

news:bC2Gi.33748$RX.21877@newssvr11.news.prodigy.net ...

<QUOTE PREVIOUSPOST="
&gt; Michael J. Mahon wrote:
&gt;&gt; Charlie wrote:
&gt;&gt;&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt;&gt; news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...

&gt; [snip]

&gt;&gt;&gt;&gt; As I've observed before, a GUI means that almost any program you want
&gt;&gt;&gt;&gt; to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt;&gt;&gt;&gt; a heck of a tax!

&gt;&gt;&gt; Certainly true (and I'm someone who likes GUI programming).  There are
&gt;&gt;&gt; non-GUI tools in the IIgs toolbox but text based programs were pretty
&gt;&gt;&gt; rare on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it is
&gt;&gt;&gt; GSOS/text.  The Orca text shell is another.

&gt;&gt; True, but only developers used text-based apps on the IIgs.

&gt;&gt; The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt; were accessible out-of-the box to anyone who was patient and could
&gt;&gt; read--a true &quot;bicycle for the mind.&quot;

&gt;&gt; By contrast, the Apple IIgs (like the III before it) had even greater
&gt;&gt; capabilities, but access to them was wrapped in prodigious complexity
&gt;&gt; and locked up by the absence of out of the box documentation and tools.

&gt;&gt; I still say that the IIgs, like the III, departed radically from the
&gt;&gt; original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt; signature on the case of the first 50,000 or so was irony.

&gt;&gt; -michael

&gt;&gt; NadaPong: Network game demo for Apple II computers!
&gt;&gt; Home page: http://members.aol.com/MJMahon/

&gt;&gt; &quot;The wastebasket is our most important design
&gt;&gt; tool--and it's seriously underused.&quot;

&gt; I think the difference is that the III and IIgs were &quot;tweeners&quot;. Neither
&gt; this nor that.  The III was supposed to be a serious business machine but
&gt; hobbled with II compatibility.  I honestly don't know what the IIgs was
&gt; supposed to be.  A Mac for the home?  A high end game machine?  Too slow
&gt; for either. Whatever.
">

The IIgs was supposed to be what it is:  A natural progression of the Apple
II line.  It gave you more memory, a 16 bit processor that was fully
compatible with the 6502 and the toolbox is nothing more than a bunch of
routines much like the system monitor is a collection of routines.  Use them
if you want or write your own.
I do believe that the IIgs was not all it could have been but to suggest
that it isn't an Apple II makes no sense to me.  Is a car not a car if it
has air conditioning?

<QUOTE PREVIOUSPOST="
&gt; The II had a purpose and focus.  It was the computer Woz wanted for
&gt; himself to explore what it meant to be a microcomputer.  It came out of
&gt; the box ready to explore.  There was no right or wrong way to program it.
&gt; No GUI that forced you to use the widgets handed to you in a library or
&gt; toolbox.  No Managers.
">

Come on, no one was forced to use the GUI on an Apple IIgs or the toolbox or
managers either.

<QUOTE PREVIOUSPOST="
&gt; Why, when I was a youngster I learned to program by typing hex code into
&gt; the monitor!  Harumph!  ( I know somebody is going to reply with: I had
&gt; toggle switches! or: I had to program core memory with tweezers!)
">

Toggle switches!  You youngsters had it easy.  I had to build a new computer
for each problem. (analog computer, not digital).  Couldn't resist :-)

Charlie
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-13T14:56:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Eric wrote:
&gt; On Sep 13, 12:01 am, David Schmenk &lt;dschm ... @sbcglobal.net&gt; wrote:

&gt;&gt;The II had a purpose and focus.  It was the computer Woz wanted for
&gt;&gt;himself to explore what it meant to be a microcomputer.  It came out of
&gt;&gt;the box ready to explore.

&gt; I wish there were something like this today. Today's young people are
&gt; discouraged from getting under the hood to the low-level assembler.
&gt; Many of them really don't understand what is going on. Their high
&gt; level software APIs wrap all the cool stuff we really enjoyed :-(
">

And this unfortunate state of affairs applies to almost all the
high-tech devices we use.

You can't learn much about electronics by taking a &quot;single chip&quot;
device apart!

Our modern devices have shrunk to the level of opacity for the
curious non-professional.

I worry about where the next generation of engineers will come
from (and I don't just mean country of origin  ;-).

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-13T15:30:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Charlie wrote:
&gt; &quot;David Schmenk&quot; &lt;dschm ... @sbcglobal.net&gt; wrote in message
&gt; news:bC2Gi.33748$RX.21877@newssvr11.news.prodigy.net ...

&gt;&gt;Michael J. Mahon wrote:

&gt;&gt;&gt;Charlie wrote:

&gt;&gt;&gt;&gt;&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt;&gt;&gt; news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...

&gt;&gt;[snip]

&gt;&gt;&gt;&gt;&gt;As I've observed before, a GUI means that almost any program you want
&gt;&gt;&gt;&gt;&gt;to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt;&gt;&gt;&gt;&gt;a heck of a tax!

&gt;&gt;&gt;&gt;Certainly true (and I'm someone who likes GUI programming).  There are
&gt;&gt;&gt;&gt;non-GUI tools in the IIgs toolbox but text based programs were pretty
&gt;&gt;&gt;&gt;rare on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it is
&gt;&gt;&gt;&gt;GSOS/text.  The Orca text shell is another.

&gt;&gt;&gt;True, but only developers used text-based apps on the IIgs.

&gt;&gt;&gt;The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt;&gt;were accessible out-of-the box to anyone who was patient and could
&gt;&gt;&gt;read--a true &quot;bicycle for the mind.&quot;

&gt;&gt;&gt;By contrast, the Apple IIgs (like the III before it) had even greater
&gt;&gt;&gt;capabilities, but access to them was wrapped in prodigious complexity
&gt;&gt;&gt;and locked up by the absence of out of the box documentation and tools.

&gt;&gt;&gt;I still say that the IIgs, like the III, departed radically from the
&gt;&gt;&gt;original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt;&gt;signature on the case of the first 50,000 or so was irony.

&gt;&gt;&gt;-michael

&gt;&gt;&gt;NadaPong: Network game demo for Apple II computers!
&gt;&gt;&gt;Home page: http://members.aol.com/MJMahon/

&gt;&gt;&gt;&quot;The wastebasket is our most important design
&gt;&gt;&gt;tool--and it's seriously underused.&quot;

&gt;&gt;I think the difference is that the III and IIgs were &quot;tweeners&quot;. Neither
&gt;&gt;this nor that.  The III was supposed to be a serious business machine but
&gt;&gt;hobbled with II compatibility.  I honestly don't know what the IIgs was
&gt;&gt;supposed to be.  A Mac for the home?  A high end game machine?  Too slow
&gt;&gt;for either. Whatever.

&gt; The IIgs was supposed to be what it is:  A natural progression of the Apple
&gt; II line.  It gave you more memory, a 16 bit processor that was fully
&gt; compatible with the 6502 and the toolbox is nothing more than a bunch of
&gt; routines much like the system monitor is a collection of routines.  Use them
&gt; if you want or write your own.
&gt; I do believe that the IIgs was not all it could have been but to suggest
&gt; that it isn't an Apple II makes no sense to me.  Is a car not a car if it
&gt; has air conditioning?
">

More like a car is not a &quot;car to learn about cars on&quot; if the air
conditioner keeps you from getting at the engine.  ;-)

The Apple II wasn't just a collection of chips--it was the embodiment
of the hacker ideal of minimal, efficient logical design with great
malleability for simple adaptation to any task.

&quot;Beauty = Function / Complexity&quot;, and by that measure, the Apple II
was at least a &quot;10&quot;.  ;-)  The II line continued to hold the record
until the IIgs, at which point complexity increased much more than
functionality, causing a big dip in engineering beauty.

The &quot;joking but serious&quot; measure I've used in the past is &quot;total weight
of system&quot; divided by &quot;total weight of documentation required to fully
exploit the system&quot;--another way to compute engineering beauty.  ;-)

<QUOTE PREVIOUSPOST="
&gt;&gt;The II had a purpose and focus.  It was the computer Woz wanted for
&gt;&gt;himself to explore what it meant to be a microcomputer.  It came out of
&gt;&gt;the box ready to explore.  There was no right or wrong way to program it.
&gt;&gt;No GUI that forced you to use the widgets handed to you in a library or
&gt;&gt;toolbox.  No Managers.

&gt; Come on, no one was forced to use the GUI on an Apple IIgs or the toolbox or
&gt; managers either.
">

Indeed--the &quot;French connection&quot; proved that--but it wasn't easy, like
Applesoft!

And that's because of the innate complexity of the underlying hardware
of the IIgs (admittedly further complicated by a requirement to remain
compatible with earlier II's).

The 65816 is a horrible kludge of a processor architecture, particularly
in contrast to the clean, spare 6502.  The Ensoniq chip is a universe
unto itself, completely &quot;tacked on&quot; to the IIgs design.  The SHR modes
are distinctly non &quot;Apple II&quot;, even having a different pixel clock!

No, the IIgs is not a &quot;natural progression&quot; of the Apple II--it is a
Frankenstein by comparison with the &quot;organic&quot; hardware of the II.

I realize that its design was pushed by many forces, not the least of
which was the absence of Woz's disciplined hand.  And the disdain of
Jobs must have cost the project dearly.  But I judge it not for how it
came to be as much as for what it actually is and is not.

It, like the Mac, symbolizes the shift of Apple away from the hobbyist
machine toward a consumer machine.  A shift that was inevitable if the
company was to survive and prosper, but one deserving of a lament from
hobbyists, at least.

When your attempts to solve a problem with a machine become dominated
by trying to understand and control the machine rather than trying to
understand and solve the problem, the balance is off.  This is a
function of system complexity, system documentation, and the provided
programming tools.

<QUOTE PREVIOUSPOST="
&gt;&gt;Why, when I was a youngster I learned to program by typing hex code into
&gt;&gt;the monitor!  Harumph!  ( I know somebody is going to reply with: I had
&gt;&gt;toggle switches! or: I had to program core memory with tweezers!)

&gt; Toggle switches!  You youngsters had it easy.  I had to build a new computer
&gt; for each problem. (analog computer, not digital).  Couldn't resist :-)
">

Yep--been there, done that!  In fact, the sweetness of digital computers
for me was their universal (and even easy) programmability to solve
whatever problem came to mind.  ;-)  In fact, it's the precipitous
decrease in &quot;casual&quot; programmability that I most lament in computers
since the //e.

Ah, well--I don't expect to change anyone's mind, after all &quot;there's
no disputing tastes&quot;--so I'll let it go.  It's just my opinion.

I still love sitting down after supper and dashing off a 50-line
program to try something and provide it with graphical display of
the results!  ;-)  Sometimes that's the end of it, and sometimes
it results in a (completely different) full-blown program--but it's
always great fun, and the computer is seldom in the way of the
problem I'm focusing on.  The computer?  A //e with Applesoft!

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-13T15:34:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Charlie wrote:
&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt; news:lP6dnWNZgL35DnXbnZ2dnUVZ_hisnZ2d@comcast.com ...

&gt; *** much snipped ***

&gt;&gt;The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt;were accessible out-of-the box to anyone who was patient and could
&gt;&gt;read--a true &quot;bicycle for the mind.&quot;

&gt;&gt;By contrast, the Apple IIgs (like the III before it) had even greater
&gt;&gt;capabilities, but access to them was wrapped in prodigious complexity
&gt;&gt;and locked up by the absence of out of the box documentation and tools.

&gt; Ah..., now you've hit on what I believe are the true reasons that the Apple
&gt; IIgs was different.  No toolbox documentation out of the box and no built in
&gt; GS specific BASIC.

&gt;&gt;I still say that the IIgs, like the III, departed radically from the
&gt;&gt;original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt;signature on the case of the first 50,000 or so was irony.

&gt; Well, departed yes, radically no, I can't see that.  After all the IIgs
&gt; still has nearly all the capabilities of the other Apple IIs (more than the
&gt; Apple IIc in my opinion) and the bundled documentation deteriorated with all
&gt; the later Apple IIs.
">

It's not &quot;compatibility&quot; that makes a machine an Apple II--it's the
whole spirit of the thing--the way the case snaps open, the way it
greets you with a &quot;program me&quot; prompt when you turn it on!

(That's why I can't get excited about emulation of a II on a modern
structural behemoth.)

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> pau...@saaf.se (Paul Schlyter) </POSTER>
<POSTDATE> 2007-09-13T15:42:00 </POSTDATE>
In article &lt;1189695437.293680.48 ... @r29g2000hsg.googlegroups.com&gt;,

<QUOTE PREVIOUSPOST="
Eric  &lt;englere_ ... @yahoo.com&gt; wrote:
&gt; On Sep 13, 12:01 am, David Schmenk &lt;dschm ... @sbcglobal.net&gt; wrote:

&gt;&gt; The II had a purpose and focus.  It was the computer Woz wanted for
&gt;&gt; himself to explore what it meant to be a microcomputer.  It came out of
&gt;&gt; the box ready to explore.

&gt; I wish there were something like this today. Today's young people are
&gt; discouraged from getting under the hood to the low-level assembler.
&gt; Many of them really don't understand what is going on. Their high
&gt; level software APIs wrap all the cool stuff we really enjoyed :-(
">

And they're far from alone in not understanding what happens &quot;under
the hood&quot;.  I remember reading a column by P.J. Plaugher (well-known C
and Unix veteran) some years ago in &quot;C User's Journal&quot;, where he
described getting his first Windows NT machine up and running.  He
wrote that for the first time in his life, he didn't understand much
of what was happening in the computer he was about to use....  he too
was missing the computers of the past, which were simple enough to be
understandable.

<QUOTE PREVIOUSPOST="
&gt; Eric
">

--
----------------------------------------------------------------
Paul Schlyter,  Grev Turegatan 40,  SE-114 38 Stockholm,  SWEDEN
e-mail:  pausch at stockholm dot bostream dot se
WWW: http://stjarnhimlen.se/
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-13T15:46:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Paul Schlyter wrote:
&gt; In article &lt;1189695437.293680.48 ... @r29g2000hsg.googlegroups.com&gt;,
&gt; Eric  &lt;englere_ ... @yahoo.com&gt; wrote:

&gt;&gt;On Sep 13, 12:01 am, David Schmenk &lt;dschm ... @sbcglobal.net&gt; wrote:

&gt;&gt;&gt;The II had a purpose and focus.  It was the computer Woz wanted for
&gt;&gt;&gt;himself to explore what it meant to be a microcomputer.  It came out of
&gt;&gt;&gt;the box ready to explore.

&gt;&gt;I wish there were something like this today. Today's young people are
&gt;&gt;discouraged from getting under the hood to the low-level assembler.
&gt;&gt;Many of them really don't understand what is going on. Their high
&gt;&gt;level software APIs wrap all the cool stuff we really enjoyed :-(

&gt; And they're far from alone in not understanding what happens &quot;under
&gt; the hood&quot;.  I remember reading a column by P.J. Plaugher (well-known C
&gt; and Unix veteran) some years ago in &quot;C User's Journal&quot;, where he
&gt; described getting his first Windows NT machine up and running.  He
&gt; wrote that for the first time in his life, he didn't understand much
&gt; of what was happening in the computer he was about to use....  he too
&gt; was missing the computers of the past, which were simple enough to be
&gt; understandable.
">

Reminds me of Bjarne Stroustrup's clever comment:

&quot;I have always wished that my computer would be as easy to use as my
telephone. My wish has come true. I no longer know how to use my telephone.&quot;

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> Michael Kent &lt;mich...@syndicomm.remove.this.com&gt; </POSTER>
<POSTDATE> 2007-09-13T20:52:00 </POSTDATE>
Michael J. Mahon &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Charlie wrote:
&gt;&gt; &quot;David Schmenk&quot; &lt;dschm ... @sbcglobal.net&gt; wrote in message
&gt;&gt; news:bC2Gi.33748$RX.21877@newssvr11.news.prodigy.net ...
&gt;&gt;&gt;Michael J. Mahon wrote:
&gt;&gt;&gt;&gt;Charlie wrote:
&gt;&gt;&gt;&gt;&gt;&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt;&gt;&gt;&gt; news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...
&gt;&gt;&gt;&gt;&gt;&gt;As I've observed before, a GUI means that almost any program you want
&gt;&gt;&gt;&gt;&gt;&gt;to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt;&gt;&gt;&gt;&gt;&gt;a heck of a tax!
">

Your numbers seem to be off.  With GSoft BASIC (and apparently Complete
Pascal from what I read of Chye Thean's site) you can write a desktop
program in just a few dozen lines of code.  That's the magic of the
toolbox.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;Certainly true (and I'm someone who likes GUI programming).  There are
&gt;&gt;&gt;&gt;&gt;non-GUI tools in the IIgs toolbox but text based programs were pretty
&gt;&gt;&gt;&gt;&gt;rare on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it is
&gt;&gt;&gt;&gt;&gt;GSOS/text.  The Orca text shell is another.
">

By far the most powerful, IMO, is GNO/ME -- a text-based multi-tasking
shell for GS/OS that provides access to GS/OS's drivers, filesystems,
and desktop applications.  It was a decent attempt at 16-bit Unix for
the IIgs.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;True, but only developers used text-based apps on the IIgs.
">

Not true.  Many non-developers used AppleWorks, ProTERM, Applesoft,
ProSel, Davex, GNO/ME etc. on the GS.  AppleWorks and ProTERM appealed
to non-programming users for obvious reasons, while power users liked
more powerful tools like GNO/ME.  Those power users -- mostly college
kids and hacker types -- were the same type of people writing AppleSoft
and machine language programs on the IIe just a few years before.  The
IIgs allowed them to expand into a modern environment.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt;&gt;&gt;were accessible out-of-the box to anyone who was patient and could
&gt;&gt;&gt;&gt;read--a true &quot;bicycle for the mind.&quot;
">

And that idea is carried much further on the GS than the classic Apple II.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;I still say that the IIgs, like the III, departed radically from the
&gt;&gt;&gt;&gt;original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt;&gt;&gt;signature on the case of the first 50,000 or so was irony.
">

The IIgs is every bit as accessible as the other slot-based II's.  Even
more so.  (And much more so than the IIc and IIc+.)  The GS has the same
slots as the classic II's, which accept nearly all the same cards (Disk
II controller cards, Super Serial cards, slinky RAM cards, etc.).  It has
Monitor, AppleSoft, and most of the II firmware built in.  It can switch
video modes using the same soft switches as the classic II's, read the
keyboard at the same address, and be programmed in the same AppleSoft as
the others using the same peeks and pokes.  It can even load Integer
into the langauge card just like older Apple II's.

What's more, the GS can be accessed at the bare metal of the system in
ways 8-bit Apple II's can't.  Nearly any program on the GS -- 8-bit or
16-bit -- can be stopped at anytime with a command-ctrl-esc, and the
user can instantly access the Monitor with said program frozen in place.
Any byte in RAM, ROM, or on any card in any slot can be read, and any
byte in RAM can be written -- total God-like accessibility -- and the
program then continued by just exiting the CDA menu.  &quot;Visit Monitor&quot;
is built-in to every Apple IIgs.

To say the IIgs is not accessible like an Apple II is just plain wrong.
It *is* an Apple II -- at the CPU level, at the bus level, at the slot
level, at the Monitor level, at the firmware level, and at the AppleSoft
level.  It then adds more functionality and more accessibility on top
of that.

Oh, and the Apple IIgs was designed by Woz -- or rather the design was
started by Woz -- himself back when it was known as the Apple IIx.  That's
probably why the machine remained so open at the time all of the other
computers put out by Apple (starting with the Lisa and including the
IIc and IIc+) were closed boxes.

<QUOTE PREVIOUSPOST="
&gt; The Apple II wasn't just a collection of chips--it was the embodiment
&gt; of the hacker ideal of minimal, efficient logical design with great
&gt; malleability for simple adaptation to any task.
">

Proving that the Apple IIgs is a true Apple II.

<QUOTE PREVIOUSPOST="
&gt; &quot;Beauty = Function / Complexity&quot;, and by that measure, the Apple II
&gt; was at least a &quot;10&quot;.  ;-)  The II line continued to hold the record
&gt; until the IIgs, at which point complexity increased much more than
&gt; functionality, causing a big dip in engineering beauty.
">

Functionality increased way more than complexity.  With the IIgs near-
photographic quality graphics was possible, as was near CD-quality
music (the Ensoniq can duplicate nearly any sound except human-quality
voice through wave-table synthesis).  A usable desktop-based graphical
user interface was available -- in color -- as was a pre-emtive multi-
tasking shell.  Multi-gigabyte storage, modern computer languages,
multiple filesystems (such as HFS, High Sierra, ISO-9660, and MS-DOS),
AppleTalk networking, laser and inkjet printers, Apple Desktop Bus,
TCP/IP-based networking, true-type fonts, and much more all became
available to the user at whatever level -- from novice to expert -- he
chose to use that particular functionality at.

At what price did all this functionality cost?  None if you didn't use
it.  The IIgs is at its core an Apple II.  Or you could start using the
16-bit opcodes they added to the 6502, or speed your bus up to 2.8 MHz,
or start using the firmware instead of the softswitches, or the ADB
instead of the keyboard bytes, or the Ensoniq instead of toggling the
speaker directly, etc.

Unless you define &quot;complexity&quot; as &quot;functionality&quot;, the IIgs wins this
comparison hands-down compared to its 8-bit brothers (and even its
32-bit cousins).

<QUOTE PREVIOUSPOST="
&gt;&gt; Come on, no one was forced to use the GUI on an Apple IIgs or the toolbox or
&gt;&gt; managers either.
&gt; Indeed--the &quot;French connection&quot; proved that--but it wasn't easy, like
&gt; Applesoft!
">

The IIgs has Applesoft.  And GSoft BASIC.

<QUOTE PREVIOUSPOST="
&gt; The 65816 is a horrible kludge of a processor architecture, particularly
&gt; in contrast to the clean, spare 6502.
">

The 65816 is a 6502 with 16-bit opcodes added, the address bus expanded,
and a few other things.  This program:

300: 20 58 FC 60

clears the screen on the IIgs just like on any other Apple II.

<QUOTE PREVIOUSPOST="
&gt; The Ensoniq chip is a universe
&gt; unto itself, completely &quot;tacked on&quot; to the IIgs design.
">

True, but the capability it brought to the Apple II was unmatched by
any other personal computer for about seven years or so.

<QUOTE PREVIOUSPOST="
&gt; The SHR modes
&gt; are distinctly non &quot;Apple II&quot;, even having a different pixel clock!
">

But they have higher resolution, many more colors, a fill mode, and
linear addressing (so in some ways are less complex than classic Apple II
video modes).

<QUOTE PREVIOUSPOST="
&gt; It, like the Mac, symbolizes the shift of Apple away from the hobbyist
&gt; machine toward a consumer machine.
">

It is a hobbyist machine to its core.  But it adds much of the function-
ality of a consumer machine that enables hobbyists to get things done as
well as have fun.

<QUOTE PREVIOUSPOST="
&gt; A shift that was inevitable if the
&gt; company was to survive and prosper, but one deserving of a lament from
&gt; hobbyists, at least.
">

I just don't understand the lament from the 8-bitters, unless it's the
extra functionality that gets your goat.  Nearly everything you can do
with a IIe I can do with a IIgs -- hardwarewise as well as softwarewise.
And then there's boatloads of things a IIgs can do that a IIe can't.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;Why, when I was a youngster I learned to program by typing hex code into
&gt;&gt;&gt;the monitor!
">

And the IIgs has the same Monitor and accepts the same hex code as the
8-bit Apple II's.

<QUOTE PREVIOUSPOST="
&gt; I still love sitting down after supper and dashing off a 50-line
&gt; program to try something and provide it with graphical display of
&gt; the results!  ;-)  Sometimes that's the end of it, and sometimes
&gt; it results in a (completely different) full-blown program--but it's
&gt; always great fun, and the computer is seldom in the way of the
&gt; problem I'm focusing on.  The computer?  A //e with Applesoft!
">

A IIgs has the same Applesoft as the IIe.  Plus you can put the keyboard
on your lap!

Like I said before, I just don't understand the disdain the GS receives
from the 8-bit Apple II users.  I'd say it's envy, but come on!  Both
the 8-bits and the GS are the same price these days -- essentially free.

Mike
</POST>
<POST>
<POSTER> Michael Kent &lt;mich...@syndicomm.remove.this.com&gt; </POSTER>
<POSTDATE> 2007-09-13T21:00:00 </POSTDATE>
Michael J. Mahon &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; It's not &quot;compatibility&quot; that makes a machine an Apple II--it's the
&gt; whole spirit of the thing--the way the case snaps open,
">

The IIgs's case snaps open just as easily as the IIe's.  Now, about that
IIc+ you won at KansasFest....  ;-)

<QUOTE PREVIOUSPOST="
&gt; the way it greets you with a &quot;program me&quot; prompt when you turn it on!
">

You don't boot into Choplifter much, do you?  :-)

I'd just like to point out that you can boot into Applesoft -- and
Choplifter -- just as easily on a IIgs as you can a IIe.

<QUOTE PREVIOUSPOST="
&gt; (That's why I can't get excited about emulation of a II on a modern
&gt; structural behemoth.)
">

I hear you there.  If I can't plug a Disk II controller card into it, it's
not an Apple II.  Now, about that IIc+ you won at KansasFest...*  :-)

Mike

* a well-deserved victory I might add.  NadaPong rocks!
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T22:10:00 </POSTDATE>
Because Apple II is forever, but the hardware is not.

I still love my Apple IIGS but I have no way to use it anymore without
emulation.

On 9 14 ,   3 34 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; (That's why I can't get excited about emulation of a II on a modern
&gt; structural behemoth.)

&gt; -michael
">
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T22:14:00 </POSTDATE>
Now where can I get those essentially free Apple IIGS in Singapore...

On 9 14 ,   8 52 , Michael Kent &lt;mich ... @syndicomm.remove.this.com&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; Like I said before, I just don't understand the disdain the GS receives
&gt; from the 8-bit Apple II users.  I'd say it's envy, but come on!  Both
&gt; the 8-bits and the GS are the same price these days -- essentially free.

&gt; Mike
">
</POST>
<POST>
<POSTER> &quot;Charlie&quot; &lt;charlieD...@verEYEzon.net&gt; </POSTER>
<POSTDATE> 2007-09-13T22:25:00 </POSTDATE>
&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
news:0LedncJ3lLlxEnTbnZ2dneKdnZydnZ2d@comcast.com ...

[ snip ]

<QUOTE PREVIOUSPOST="
&gt;&gt; The IIgs was supposed to be what it is:  A natural progression of the
&gt;&gt; Apple II line.  It gave you more memory, a 16 bit processor that was
&gt;&gt; fully compatible with the 6502 and the toolbox is nothing more than a
&gt;&gt; bunch of routines much like the system monitor is a collection of
&gt;&gt; routines.  Use them if you want or write your own.
&gt;&gt; I do believe that the IIgs was not all it could have been but to suggest
&gt;&gt; that it isn't an Apple II makes no sense to me.  Is a car not a car if it
&gt;&gt; has air conditioning?

&gt; More like a car is not a &quot;car to learn about cars on&quot; if the air
&gt; conditioner keeps you from getting at the engine.  ;-)
">

Ah, but learning how to get to the engine, air conditioner or not, is part
of learning about a car, but I agree with your point for someone starting
out.  My point is that the air conditioner (GUI, etc) doesn't keep you from
getting to the engine on an Apple IIgs.

<QUOTE PREVIOUSPOST="
&gt; The Apple II wasn't just a collection of chips--it was the embodiment
&gt; of the hacker ideal of minimal, efficient logical design with great
&gt; malleability for simple adaptation to any task.

&gt; &quot;Beauty = Function / Complexity&quot;, and by that measure, the Apple II
&gt; was at least a &quot;10&quot;.  ;-)  The II line continued to hold the record
&gt; until the IIgs, at which point complexity increased much more than
&gt; functionality, causing a big dip in engineering beauty.
">

Beauty is in the eye of the beholder.  To me the Apple II was/is a tool for
learning.  I learned to program on the Apple II (an Apple II+) and that
didn't stop when I moved to an Apple IIgs.  I learned a little about the
inner workings of a computer from my II+ and I learned about new things on
the IIgs (mouse, interrupts, etc.).

<QUOTE PREVIOUSPOST="
&gt; The &quot;joking but serious&quot; measure I've used in the past is &quot;total weight
&gt; of system&quot; divided by &quot;total weight of documentation required to fully
&gt; exploit the system&quot;--another way to compute engineering beauty.  ;-)
">

As new things are added to any system (while retaining the old) the amount
of documentation to explain the system is bound to go up.  The Apple IIgs
documentation sure does weigh a lot but most of it is wasted paper.  The
toolbox references are bloated beyond belief and not particularly well
written.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;The II had a purpose and focus.  It was the computer Woz wanted for
&gt;&gt;&gt;himself to explore what it meant to be a microcomputer.  It came out of
&gt;&gt;&gt;the box ready to explore.  There was no right or wrong way to program it.
&gt;&gt;&gt;No GUI that forced you to use the widgets handed to you in a library or
&gt;&gt;&gt;toolbox.  No Managers.

&gt;&gt; Come on, no one was forced to use the GUI on an Apple IIgs or the toolbox
&gt;&gt; or managers either.

&gt; Indeed--the &quot;French connection&quot; proved that--but it wasn't easy, like
&gt; Applesoft!

&gt; And that's because of the innate complexity of the underlying hardware
&gt; of the IIgs (admittedly further complicated by a requirement to remain
&gt; compatible with earlier II's).

&gt; The 65816 is a horrible kludge of a processor architecture, particularly
&gt; in contrast to the clean, spare 6502.  The Ensoniq chip is a universe
&gt; unto itself, completely &quot;tacked on&quot; to the IIgs design.  The SHR modes
&gt; are distinctly non &quot;Apple II&quot;, even having a different pixel clock!

&gt; No, the IIgs is not a &quot;natural progression&quot; of the Apple II--it is a
&gt; Frankenstein by comparison with the &quot;organic&quot; hardware of the II.
">

Frankenstein! That hurts.

I'm not competent to argue processor architecture but from a programming
point of view the learning curve to move from a 6502 to a 65816 is trivial.
This was the main jist of my statement about &quot;natural progression&quot;.  The
Ensoniq chip is certainly a big step from toggling the speaker but I saw it
more as something more to play with if I wanted to and the SHR modes are non
Apple II only in hardware sense.  From a programming sense its just plugging
bytes into memory and throwing softswitches.  Actually, due to the linear
memory usage SHR is quite a bit easier than HGR.
I learned a lot on an Apple II+ and I learned more on the Apple IIgs so for
me anyway they both served the purpose I intended.  The great thing about
the IIgs is that nearly everything that I learned on the II+ still exists on
the IIgs.  So from my point of view the potential to learn is greater on the
IIgs than on any of the other IIs.  As for the GUI environment, I realize
that there is a 'hate it' attitude among a lot of hobbyists.  I however
thought of it as great chance to learn.  I learned the concept of event
driven programming on the IIgs, the user interface guidelines, standard
methods for calling tools, relocatable object module files and much more.
All of which made moving into modern GUI programming a snap.

<QUOTE PREVIOUSPOST="
&gt; I realize that its design was pushed by many forces, not the least of
&gt; which was the absence of Woz's disciplined hand.  And the disdain of
&gt; Jobs must have cost the project dearly.  But I judge it not for how it
&gt; came to be as much as for what it actually is and is not.
">

Agreed.

<QUOTE PREVIOUSPOST="
&gt; It, like the Mac, symbolizes the shift of Apple away from the hobbyist
&gt; machine toward a consumer machine.
">

I won't argue about symbols, but the shift started long before the IIgs came
out, even before the Mac.  I saw signs of it with the marketing of the Apple
III when I bought my II+ in 1980.  By the time the //e came out their
emphasis was definately away from the hobbyist.

<QUOTE PREVIOUSPOST="
&gt; A shift that was inevitable if the
&gt; company was to survive and prosper, but one deserving of a lament from
&gt; hobbyists, at least.
">

True.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; When your attempts to solve a problem with a machine become dominated
&gt; by trying to understand and control the machine rather than trying to
&gt; understand and solve the problem, the balance is off.  This is a
&gt; function of system complexity, system documentation, and the provided
&gt; programming tools.

&gt;&gt;&gt;Why, when I was a youngster I learned to program by typing hex code into
&gt;&gt;&gt;the monitor!  Harumph!  ( I know somebody is going to reply with: I had
&gt;&gt;&gt;toggle switches! or: I had to program core memory with tweezers!)

&gt;&gt; Toggle switches!  You youngsters had it easy.  I had to build a new
&gt;&gt; computer for each problem. (analog computer, not digital).  Couldn't
&gt;&gt; resist :-)

&gt; Yep--been there, done that!  In fact, the sweetness of digital computers
&gt; for me was their universal (and even easy) programmability to solve
&gt; whatever problem came to mind.  ;-)  In fact, it's the precipitous
&gt; decrease in &quot;casual&quot; programmability that I most lament in computers
&gt; since the //e.

&gt; Ah, well--I don't expect to change anyone's mind, after all &quot;there's
&gt; no disputing tastes&quot;--so I'll let it go.  It's just my opinion.
">

And I respect your opinion.  I just wanted to balance what you've said with
another opinion.

Charlie
</POST>
<POST>
<POSTER> &quot;Charlie&quot; &lt;charlieD...@verEYEzon.net&gt; </POSTER>
<POSTDATE> 2007-09-13T22:49:00 </POSTDATE>
&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
news:iP-dnQMT_7ppDXTbnZ2dnUVZ_vGinZ2d@comcast.com ...

<QUOTE PREVIOUSPOST="
&gt; Charlie wrote:
&gt;&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt; news:lP6dnWNZgL35DnXbnZ2dnUVZ_hisnZ2d@comcast.com ...

&gt;&gt; *** much snipped ***

&gt;&gt;&gt;The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt;&gt;were accessible out-of-the box to anyone who was patient and could
&gt;&gt;&gt;read--a true &quot;bicycle for the mind.&quot;

&gt;&gt;&gt;By contrast, the Apple IIgs (like the III before it) had even greater
&gt;&gt;&gt;capabilities, but access to them was wrapped in prodigious complexity
&gt;&gt;&gt;and locked up by the absence of out of the box documentation and tools.

&gt;&gt; Ah..., now you've hit on what I believe are the true reasons that the
&gt;&gt; Apple IIgs was different.  No toolbox documentation out of the box and no
&gt;&gt; built in GS specific BASIC.

&gt;&gt;&gt;I still say that the IIgs, like the III, departed radically from the
&gt;&gt;&gt;original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt;&gt;signature on the case of the first 50,000 or so was irony.

&gt;&gt; Well, departed yes, radically no, I can't see that.  After all the IIgs
&gt;&gt; still has nearly all the capabilities of the other Apple IIs (more than
&gt;&gt; the Apple IIc in my opinion) and the bundled documentation deteriorated
&gt;&gt; with all the later Apple IIs.

&gt; It's not &quot;compatibility&quot; that makes a machine an Apple II--it's the
&gt; whole spirit of the thing--the way the case snaps open, the way it
&gt; greets you with a &quot;program me&quot; prompt when you turn it on!
">

I believe compatibility of both hardware and software trumps any other way
of determining what makes an Apple created computer an Apple II.
And by the way, the case snapping part eliminates the IIc more than the IIgs
and the IIgs greets you with the same prompt as any other Apple II.

<QUOTE PREVIOUSPOST="
&gt; (That's why I can't get excited about emulation of a II on a modern
&gt; structural behemoth.)
">

Yes, emulators don't have the &quot;feel&quot; of a real Apple II (any model).  That
however doesn't stop them from being a good tool for learning programming
from scratch.

Charlie
</POST>
<POST>
<POSTER> magnusfalkirk &lt;dean.pha...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T22:56:00 </POSTDATE>
Thye Chean,

I take it you can't find a reasonably priced GS on Ebay or is it that
shipping from anywhere out Singapore would be cost prohibitive?

Dean

On Sep 13, 9:14 pm, limtc &lt;thyech ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Now where can I get those essentially free Apple IIGS in Singapore...
">
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-13T23:10:00 </POSTDATE>
Think so. Never saw a GS or Apple II in Singapore for the past 10
years. And I never bought anything on eBay or shipped it from overseas
(the thing about &quot;what happened if the machine does not work&quot; come to
mind).

On 9 14 ,   10 56 , magnusfalkirk &lt;dean.pha ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; Thye Chean,

&gt; I take it you can't find a reasonably priced GS on Ebay or is it that
&gt; shipping from anywhere out Singapore would be cost prohibitive?

&gt; Dean

&gt; On Sep 13, 9:14 pm, limtc &lt;thyech ... @gmail.com&gt; wrote:

&gt; &gt; Now where can I get those essentially free Apple IIGS in Singapore...
">
</POST>
<POST>
<POSTER> &quot;sfahey&quot; &lt;sfa...@a2central.com.remove-v8k-this&gt; </POSTER>
<POSTDATE> 2007-09-13T23:32:00 </POSTDATE>
To: limtc
Re: Re: Complete Basic?
By: limtc to comp.sys.apple2 on Thu Sep 13 2007 07:14 pm

&gt; Now where can I get those essentially free Apple IIGS in Singapore...

Thats ironic, considering so much Apple gear from that era was manufactered and
assembled there.

--- Synchronet 3.14a-Win32 NewsLink 1.85
A2Central.com - Your total source for Apple II computing.
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-14T00:18:00 </POSTDATE>
But local people don't buy them - they used to sell like S$5000 per
machine where a typical PC is about S$2000. Considering the living
standard here is lower than US, you will be surprise how many GS
actually sold here. I have been dreaming about winning a lottery or
save some young princess and get some rewards to get my first GS (and
finally get one 2nd hand with a 2 years loan!).

On 9 14 ,   11 32 , &quot;sfahey&quot; &lt;sfa ... @a2central.com.remove-v8k-this&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; Thats ironic, considering so much Apple gear from that era was manufactered and
&gt; assembled there.

&gt; --- Synchronet 3.14a-Win32 NewsLink 1.85
&gt; A2Central.com - Your total source for Apple II computing.
">
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T02:45:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Michael Kent wrote:
&gt; Michael J. Mahon &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;Charlie wrote:

&gt;&gt;&gt;&quot;David Schmenk&quot; &lt;dschm ... @sbcglobal.net&gt; wrote in message
&gt;&gt;&gt; news:bC2Gi.33748$RX.21877@newssvr11.news.prodigy.net ...

&gt;&gt;&gt;&gt;Michael J. Mahon wrote:

&gt;&gt;&gt;&gt;&gt;Charlie wrote:

&gt;&gt;&gt;&gt;&gt;&gt;&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt;&gt;&gt;&gt;&gt; news:5PqdnVXUWsYfRnvbnZ2dnUVZ_rDinZ2d@comcast.com ...

&gt;&gt;&gt;&gt;&gt;&gt;&gt;As I've observed before, a GUI means that almost any program you want
&gt;&gt;&gt;&gt;&gt;&gt;&gt;to write will be 10% your functionality and 90% GUI wrangling.  That's
&gt;&gt;&gt;&gt;&gt;&gt;&gt;a heck of a tax!

&gt; Your numbers seem to be off.  With GSoft BASIC (and apparently Complete
&gt; Pascal from what I read of Chye Thean's site) you can write a desktop
&gt; program in just a few dozen lines of code.  That's the magic of the
&gt; toolbox.
">

Actually, what you are writing is a full-screen graphics app, with
no pull-down menus or widgets.  A GUI app would be one that conforms
to Apples human interface guidelines.  They are always event loop
driven.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;&gt;Certainly true (and I'm someone who likes GUI programming).  There are
&gt;&gt;&gt;&gt;&gt;&gt;non-GUI tools in the IIgs toolbox but text based programs were pretty
&gt;&gt;&gt;&gt;&gt;&gt;rare on the IIgs.  Merlin 16+ is one I used (and liked) a lot and it is
&gt;&gt;&gt;&gt;&gt;&gt;GSOS/text.  The Orca text shell is another.

&gt; By far the most powerful, IMO, is GNO/ME -- a text-based multi-tasking
&gt; shell for GS/OS that provides access to GS/OS's drivers, filesystems,
&gt; and desktop applications.  It was a decent attempt at 16-bit Unix for
&gt; the IIgs.
">

That would also get my vote for the most versatile text-based
IIgs shell.  Of course, GNO was nowhere near a user's out-of-the-box
IIgs experience, nor did Apple intend it to be.

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;True, but only developers used text-based apps on the IIgs.

&gt; Not true.  Many non-developers used AppleWorks, ProTERM, Applesoft,
&gt; ProSel, Davex, GNO/ME etc. on the GS.  AppleWorks and ProTERM appealed
&gt; to non-programming users for obvious reasons, while power users liked
&gt; more powerful tools like GNO/ME.  Those power users -- mostly college
&gt; kids and hacker types -- were the same type of people writing AppleSoft
&gt; and machine language programs on the IIe just a few years before.  The
&gt; IIgs allowed them to expand into a modern environment.
">

Appleworks was certainly popular.  But all of those uses were not
actually IIgs experiences--they were //e experiences!

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt;&gt;&gt;&gt;were accessible out-of-the box to anyone who was patient and could
&gt;&gt;&gt;&gt;&gt;read--a true &quot;bicycle for the mind.&quot;

&gt; And that idea is carried much further on the GS than the classic Apple II.
">

I disagree.  The Apple IIgs, as supplied by Apple, doesn't allow the
*casual programmer* to do any more than could be done with a //e and
ProDOS.

Of course, the user can run canned applications, but that is certainly
not a &quot;bicycle for the mind&quot;, since the user cannot easily adapt any
of them with his own code.

As you can see, I put *user programmability* high on the list of what
makes an Apple II an Apple II--in fact, the adaptability even extends
to creating one's own hardware extensions--that can even have &quot;drivers&quot;
written in BASIC!

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;I still say that the IIgs, like the III, departed radically from the
&gt;&gt;&gt;&gt;&gt;original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt;&gt;&gt;&gt;signature on the case of the first 50,000 or so was irony.

&gt; The IIgs is every bit as accessible as the other slot-based II's.  Even
&gt; more so.  (And much more so than the IIc and IIc+.)
">

From a hardware point of view, there's no argument regarding the
&quot;closed systems&quot; of the //c series.

But the primary component of accessibility is easy programmability--
even with PEEKs and POKEs from BASIC--that can put the machine through
all its paces, without layers of overlaying complexity.

Having just looked over the softswitch architecture of the //c and //c+,
I'd say that they took on a very high complexity burden for relatively
little additional functionality.  That's a very non-Woz tradeoff.

The GS has the same

<QUOTE PREVIOUSPOST="
&gt; slots as the classic II's, which accept nearly all the same cards (Disk
&gt; II controller cards, Super Serial cards, slinky RAM cards, etc.).  It has
&gt; Monitor, AppleSoft, and most of the II firmware built in.  It can switch
&gt; video modes using the same soft switches as the classic II's, read the
&gt; keyboard at the same address, and be programmed in the same AppleSoft as
&gt; the others using the same peeks and pokes.  It can even load Integer
&gt; into the langauge card just like older Apple II's.
">

Of course the IIgs is &quot;almost completely&quot; compatible with earlier
Apple II's, for marketing if not for idealistic reasons, but saying
that a subset of the IIgs is simple is no justification for its
complexity--which is its inaccessibility.  I'm talking about
*conceptual* accessibility.

Tens of thousands of Apple II users understood their machines down
to the gnats eyebrow, but I would guess than only a few hundred ever
acquired the same level of understanding of the much more complex IIgs.

<QUOTE PREVIOUSPOST="
&gt; What's more, the GS can be accessed at the bare metal of the system in
&gt; ways 8-bit Apple II's can't.  Nearly any program on the GS -- 8-bit or
&gt; 16-bit -- can be stopped at anytime with a command-ctrl-esc, and the
&gt; user can instantly access the Monitor with said program frozen in place.
&gt; Any byte in RAM, ROM, or on any card in any slot can be read, and any
&gt; byte in RAM can be written -- total God-like accessibility -- and the
&gt; program then continued by just exiting the CDA menu.  &quot;Visit Monitor&quot;
&gt; is built-in to every Apple IIgs.
">

True.  Of course, to synchronize entry into the CDA to make a meaningful
observation or change is still difficult, and best done with a BRK, just
like on an Apple II.

It's nice to have at least part of a built-in debugger, but the monitor
also provides a quite useful debug environment for machine code.

<QUOTE PREVIOUSPOST="
&gt; To say the IIgs is not accessible like an Apple II is just plain wrong.
&gt; It *is* an Apple II -- at the CPU level, at the bus level, at the slot
&gt; level, at the Monitor level, at the firmware level, and at the AppleSoft
&gt; level.  It then adds more functionality and more accessibility on top
&gt; of that.
">

I don't want to belabor the point, but what it adds most of is
complexity--and that is the antithesis of accessiblity.  It presents
a would-be programmer with a shear cliff and practically no documents
or tools to master it.  Those will cost another couple hundred bucks,
and will probably have to be mail-ordered.

Whatever simplicity it presents to the would-be programmer is a legacy
from the Apple II, not a contribution of the IIgs designers.  The IIgs
is the first step in the direction of the &quot;appliance computer&quot; which is
intended to run prepackaged applications and not to be programmed by its
user.

<QUOTE PREVIOUSPOST="
&gt; Oh, and the Apple IIgs was designed by Woz -- or rather the design was
&gt; started by Woz -- himself back when it was known as the Apple IIx.  That's
&gt; probably why the machine remained so open at the time all of the other
&gt; computers put out by Apple (starting with the Lisa and including the
&gt; IIc and IIc+) were closed boxes.
">

I'd like to know more about Woz's interactions with the design of
the IIgs.  I think that most of its openness can be explained as
compatibility with the existing Apple II add-ons, but it would be
nice to know that Woz made that happen specifically.

I do think that the IIgs was intended to replace the //e, which the
//c could never do.  And, ironically, the IIgs failed to replace the
//e as well, and the //e was produced long after the discontinuance
of the IIgs.

The Apple /// was also intended to replace the II and II+, and failed
to do so, for a number of reasons (first and foremost being lack of
reliability).  One major reason that the /// could never have replaced
the II is that it was not an open system that anyone could develop for,
let alone being friendly toward user-programmers.

<QUOTE PREVIOUSPOST="
&gt;&gt;The Apple II wasn't just a collection of chips--it was the embodiment
&gt;&gt;of the hacker ideal of minimal, efficient logical design with great
&gt;&gt;malleability for simple adaptation to any task.

&gt; Proving that the Apple IIgs is a true Apple II.
">

Not considering the &quot;simple&quot; part.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt;&gt;&quot;Beauty = Function / Complexity&quot;, and by that measure, the Apple II
&gt;&gt;was at least a &quot;10&quot;.  ;-)  The II line continued to hold the record
&gt;&gt;until the IIgs, at which point complexity increased much more than
&gt;&gt;functionality, causing a big dip in engineering beauty.

&gt; Functionality increased way more than complexity.  With the IIgs near-
&gt; photographic quality graphics was possible, as was near CD-quality
&gt; music (the Ensoniq can duplicate nearly any sound except human-quality
&gt; voice through wave-table synthesis).  A usable desktop-based graphical
&gt; user interface was available -- in color -- as was a pre-emtive multi-
&gt; tasking shell.  Multi-gigabyte storage, modern computer languages,
&gt; multiple filesystems (such as HFS, High Sierra, ISO-9660, and MS-DOS),
&gt; AppleTalk networking, laser and inkjet printers, Apple Desktop Bus,
&gt; TCP/IP-based networking, true-type fonts, and much more all became
&gt; available to the user at whatever level -- from novice to expert -- he
&gt; chose to use that particular functionality at.

&gt; At what price did all this functionality cost?  None if you didn't use
&gt; it.  The IIgs is at its core an Apple II.  Or you could start using the
&gt; 16-bit opcodes they added to the 6502, or speed your bus up to 2.8 MHz,
&gt; or start using the firmware instead of the softswitches, or the ADB
&gt; instead of the keyboard bytes, or the Ensoniq instead of toggling the
&gt; speaker directly, etc.

&gt; Unless you define &quot;complexity&quot; as &quot;functionality&quot;, the IIgs wins this
&gt; comparison hands-down compared to its 8-bit brothers (and even its
&gt; 32-bit cousins).

&gt;&gt;&gt;Come on, no one was forced to use the GUI on an Apple IIgs or the toolbox or
&gt;&gt;&gt;managers either.
">

...
read more »
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T02:56:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Charlie wrote:
&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt; news:0LedncJ3lLlxEnTbnZ2dneKdnZydnZ2d@comcast.com ...

&gt; [ snip ]

&gt;&gt;&gt;The IIgs was supposed to be what it is:  A natural progression of the
&gt;&gt;&gt;Apple II line.  It gave you more memory, a 16 bit processor that was
&gt;&gt;&gt;fully compatible with the 6502 and the toolbox is nothing more than a
&gt;&gt;&gt;bunch of routines much like the system monitor is a collection of
&gt;&gt;&gt;routines.  Use them if you want or write your own.
&gt;&gt;&gt;I do believe that the IIgs was not all it could have been but to suggest
&gt;&gt;&gt;that it isn't an Apple II makes no sense to me.  Is a car not a car if it
&gt;&gt;&gt;has air conditioning?

&gt;&gt;More like a car is not a &quot;car to learn about cars on&quot; if the air
&gt;&gt;conditioner keeps you from getting at the engine.  ;-)

&gt; Ah, but learning how to get to the engine, air conditioner or not, is part
&gt; of learning about a car, but I agree with your point for someone starting
&gt; out.  My point is that the air conditioner (GUI, etc) doesn't keep you from
&gt; getting to the engine on an Apple IIgs.

&gt;&gt;The Apple II wasn't just a collection of chips--it was the embodiment
&gt;&gt;of the hacker ideal of minimal, efficient logical design with great
&gt;&gt;malleability for simple adaptation to any task.

&gt;&gt;&quot;Beauty = Function / Complexity&quot;, and by that measure, the Apple II
&gt;&gt;was at least a &quot;10&quot;.  ;-)  The II line continued to hold the record
&gt;&gt;until the IIgs, at which point complexity increased much more than
&gt;&gt;functionality, causing a big dip in engineering beauty.

&gt; Beauty is in the eye of the beholder.  To me the Apple II was/is a tool for
&gt; learning.  I learned to program on the Apple II (an Apple II+) and that
&gt; didn't stop when I moved to an Apple IIgs.  I learned a little about the
&gt; inner workings of a computer from my II+ and I learned about new things on
&gt; the IIgs (mouse, interrupts, etc.).
">

I had to learn about those on a //e.  ;-)

<QUOTE PREVIOUSPOST="
&gt;&gt;The &quot;joking but serious&quot; measure I've used in the past is &quot;total weight
&gt;&gt;of system&quot; divided by &quot;total weight of documentation required to fully
&gt;&gt;exploit the system&quot;--another way to compute engineering beauty.  ;-)

&gt; As new things are added to any system (while retaining the old) the amount
&gt; of documentation to explain the system is bound to go up.  The Apple IIgs
&gt; documentation sure does weigh a lot but most of it is wasted paper.  The
&gt; toolbox references are bloated beyond belief and not particularly well
&gt; written.
">

They are certainly a far cry from the Applesoft BASIC manual!

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;The II had a purpose and focus.  It was the computer Woz wanted for
&gt;&gt;&gt;&gt;himself to explore what it meant to be a microcomputer.  It came out of
&gt;&gt;&gt;&gt;the box ready to explore.  There was no right or wrong way to program it.
&gt;&gt;&gt;&gt;No GUI that forced you to use the widgets handed to you in a library or
&gt;&gt;&gt;&gt;toolbox.  No Managers.

&gt;&gt;&gt;Come on, no one was forced to use the GUI on an Apple IIgs or the toolbox
&gt;&gt;&gt;or managers either.

&gt;&gt;Indeed--the &quot;French connection&quot; proved that--but it wasn't easy, like
&gt;&gt;Applesoft!

&gt;&gt;And that's because of the innate complexity of the underlying hardware
&gt;&gt;of the IIgs (admittedly further complicated by a requirement to remain
&gt;&gt;compatible with earlier II's).

&gt;&gt;The 65816 is a horrible kludge of a processor architecture, particularly
&gt;&gt;in contrast to the clean, spare 6502.  The Ensoniq chip is a universe
&gt;&gt;unto itself, completely &quot;tacked on&quot; to the IIgs design.  The SHR modes
&gt;&gt;are distinctly non &quot;Apple II&quot;, even having a different pixel clock!

&gt;&gt;No, the IIgs is not a &quot;natural progression&quot; of the Apple II--it is a
&gt;&gt;Frankenstein by comparison with the &quot;organic&quot; hardware of the II.

&gt; Frankenstein! That hurts.
">

;-)

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; I'm not competent to argue processor architecture but from a programming
&gt; point of view the learning curve to move from a 6502 to a 65816 is trivial.
&gt; This was the main jist of my statement about &quot;natural progression&quot;.  The
&gt; Ensoniq chip is certainly a big step from toggling the speaker but I saw it
&gt; more as something more to play with if I wanted to and the SHR modes are non
&gt; Apple II only in hardware sense.  From a programming sense its just plugging
&gt; bytes into memory and throwing softswitches.  Actually, due to the linear
&gt; memory usage SHR is quite a bit easier than HGR.
&gt; I learned a lot on an Apple II+ and I learned more on the Apple IIgs so for
&gt; me anyway they both served the purpose I intended.  The great thing about
&gt; the IIgs is that nearly everything that I learned on the II+ still exists on
&gt; the IIgs.  So from my point of view the potential to learn is greater on the
&gt; IIgs than on any of the other IIs.  As for the GUI environment, I realize
&gt; that there is a 'hate it' attitude among a lot of hobbyists.  I however
&gt; thought of it as great chance to learn.  I learned the concept of event
&gt; driven programming on the IIgs, the user interface guidelines, standard
&gt; methods for calling tools, relocatable object module files and much more.
&gt; All of which made moving into modern GUI programming a snap.
">

I see what you mean.  I've never aspired to learn the nuts and bolts
of GUIs, though many of my programs operate in an event polling loop.

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt;&gt;I realize that its design was pushed by many forces, not the least of
&gt;&gt;which was the absence of Woz's disciplined hand.  And the disdain of
&gt;&gt;Jobs must have cost the project dearly.  But I judge it not for how it
&gt;&gt;came to be as much as for what it actually is and is not.

&gt; Agreed.

&gt;&gt;It, like the Mac, symbolizes the shift of Apple away from the hobbyist
&gt;&gt;machine toward a consumer machine.

&gt; I won't argue about symbols, but the shift started long before the IIgs came
&gt; out, even before the Mac.  I saw signs of it with the marketing of the Apple
&gt; III when I bought my II+ in 1980.  By the time the //e came out their
&gt; emphasis was definately away from the hobbyist.
">

I agree--the III was influenced a great deal by the perception that
a &quot;hobbyist machine&quot; was antithetical to a &quot;business machine&quot;, as was
the IIgs and the Mac...

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt;&gt;A shift that was inevitable if the
&gt;&gt;company was to survive and prosper, but one deserving of a lament from
&gt;&gt;hobbyists, at least.

&gt; True.

&gt;&gt;When your attempts to solve a problem with a machine become dominated
&gt;&gt;by trying to understand and control the machine rather than trying to
&gt;&gt;understand and solve the problem, the balance is off.  This is a
&gt;&gt;function of system complexity, system documentation, and the provided
&gt;&gt;programming tools.

&gt;&gt;&gt;&gt;Why, when I was a youngster I learned to program by typing hex code into
&gt;&gt;&gt;&gt;the monitor!  Harumph!  ( I know somebody is going to reply with: I had
&gt;&gt;&gt;&gt;toggle switches! or: I had to program core memory with tweezers!)

&gt;&gt;&gt;Toggle switches!  You youngsters had it easy.  I had to build a new
&gt;&gt;&gt;computer for each problem. (analog computer, not digital).  Couldn't
&gt;&gt;&gt;resist :-)

&gt;&gt;Yep--been there, done that!  In fact, the sweetness of digital computers
&gt;&gt;for me was their universal (and even easy) programmability to solve
&gt;&gt;whatever problem came to mind.  ;-)  In fact, it's the precipitous
&gt;&gt;decrease in &quot;casual&quot; programmability that I most lament in computers
&gt;&gt;since the //e.

&gt;&gt;Ah, well--I don't expect to change anyone's mind, after all &quot;there's
&gt;&gt;no disputing tastes&quot;--so I'll let it go.  It's just my opinion.

&gt; And I respect your opinion.  I just wanted to balance what you've said with
&gt; another opinion.
">

Very nicely put, Charlie--there's not a thing you said that
I'd dispute (and that's saying something!  ;-).

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T02:59:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Michael Kent wrote:
&gt; Michael J. Mahon &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;It's not &quot;compatibility&quot; that makes a machine an Apple II--it's the
&gt;&gt;whole spirit of the thing--the way the case snaps open,

&gt; The IIgs's case snaps open just as easily as the IIe's.  Now, about that
&gt; IIc+ you won at KansasFest....  ;-)
">

Yes, although I was delighted to see that it no longer snaps
together--just a few screws.

And I find that I've never gotten proficient at popping a IIgs open--
maybe it's because I only do it a couple of times a year.  My //e, on
the other hand, has its top semi-permanently off.  ;-)

<QUOTE PREVIOUSPOST="
&gt;&gt;the way it greets you with a &quot;program me&quot; prompt when you turn it on!

&gt; You don't boot into Choplifter much, do you?  :-)
">

Nope.  ;-)

<QUOTE PREVIOUSPOST="
&gt; I'd just like to point out that you can boot into Applesoft -- and
&gt; Choplifter -- just as easily on a IIgs as you can a IIe.

&gt;&gt;(That's why I can't get excited about emulation of a II on a modern
&gt;&gt;structural behemoth.)

&gt; I hear you there.  If I can't plug a Disk II controller card into it, it's
&gt; not an Apple II.  Now, about that IIc+ you won at KansasFest...*  :-)

&gt; Mike

&gt; * a well-deserved victory I might add.  NadaPong rocks!
">

Thanks!  Ironically, it won't run on the IIc+, because it &quot;repurposed&quot;
the annunciators.  ;-(

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T03:01:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; Because Apple II is forever, but the hardware is not.

&gt; I still love my Apple IIGS but I have no way to use it anymore without
&gt; emulation.
">

I'd be willing to bet that almost any IIgs you had would be working
long after the machine you're emulating it on dies.  (Of course, I
realize that you'll then be emulating it on another...  ;-)

<QUOTE PREVIOUSPOST="
&gt; On 9 14 ,   3 34 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;(That's why I can't get excited about emulation of a II on a modern
&gt;&gt;structural behemoth.)

&gt;&gt;-michael
">

--

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T03:07:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Charlie wrote:
&gt; &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt; news:iP-dnQMT_7ppDXTbnZ2dnUVZ_vGinZ2d@comcast.com ...

&gt;&gt;Charlie wrote:

&gt;&gt;&gt;&quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote in message
&gt;&gt;&gt; news:lP6dnWNZgL35DnXbnZ2dnUVZ_hisnZ2d@comcast.com ...

&gt;&gt;&gt;*** much snipped ***
">

&lt;not much more snipped ;-)&gt;

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;The original Apple II &quot;idea&quot; was that its considerable capabilities
&gt;&gt;&gt;&gt;were accessible out-of-the box to anyone who was patient and could
&gt;&gt;&gt;&gt;read--a true &quot;bicycle for the mind.&quot;

&gt;&gt;&gt;&gt;By contrast, the Apple IIgs (like the III before it) had even greater
&gt;&gt;&gt;&gt;capabilities, but access to them was wrapped in prodigious complexity
&gt;&gt;&gt;&gt;and locked up by the absence of out of the box documentation and tools.

&gt;&gt;&gt;Ah..., now you've hit on what I believe are the true reasons that the
&gt;&gt;&gt;Apple IIgs was different.  No toolbox documentation out of the box and no
&gt;&gt;&gt;built in GS specific BASIC.

&gt;&gt;&gt;&gt;I still say that the IIgs, like the III, departed radically from the
&gt;&gt;&gt;&gt;original Apple II idea of *accessible computer power*, and having Woz's
&gt;&gt;&gt;&gt;signature on the case of the first 50,000 or so was irony.

&gt;&gt;&gt;Well, departed yes, radically no, I can't see that.  After all the IIgs
&gt;&gt;&gt;still has nearly all the capabilities of the other Apple IIs (more than
&gt;&gt;&gt;the Apple IIc in my opinion) and the bundled documentation deteriorated
&gt;&gt;&gt;with all the later Apple IIs.

&gt;&gt;It's not &quot;compatibility&quot; that makes a machine an Apple II--it's the
&gt;&gt;whole spirit of the thing--the way the case snaps open, the way it
&gt;&gt;greets you with a &quot;program me&quot; prompt when you turn it on!

&gt; I believe compatibility of both hardware and software trumps any other way
&gt; of determining what makes an Apple created computer an Apple II.
">

I understand, and can even defend that &quot;platform-based&quot; argument.
But the Apple II was much more than a platform--it was the
embodiment of an engineering esthetic.  It was &quot;Wozland&quot;.  ;-)

<QUOTE PREVIOUSPOST="
&gt; And by the way, the case snapping part eliminates the IIc more than the IIgs
&gt; and the IIgs greets you with the same prompt as any other Apple II.
">

I agree about the &quot;closed&quot; IIc.

But the IIgs &quot;greeting&quot; is asking you to program in //e compatibility
mode--it has no &quot;program my fancy new IIgs features&quot; prompt.  ;-)

<QUOTE PREVIOUSPOST="
&gt;&gt;(That's why I can't get excited about emulation of a II on a modern
&gt;&gt;structural behemoth.)

&gt; Yes, emulators don't have the &quot;feel&quot; of a real Apple II (any model).  That
&gt; however doesn't stop them from being a good tool for learning programming
&gt; from scratch.
">

Emulation/simulation has always been a good tool for one willing to
abstract from the hardware implementation.

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-14T03:20:00 </POSTDATE>
Huh? My GS is dead long ago. Without emulation, I won't be able to
program for the GS anymore. Emulation has run from Bernie days to my
new iMac running Sweet16.

On 9 14 ,   3 01 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I'd be willing to bet that almost any IIgs you had would be working
&gt; long after the machine you're emulating it on dies.  (Of course, I
&gt; realize that you'll then be emulating it on another...  ;-)
">
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T03:33:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; Huh? My GS is dead long ago. Without emulation, I won't be able to
&gt; program for the GS anymore. Emulation has run from Bernie days to my
&gt; new iMac running Sweet16.
">

I guess I don't consider replacing a power supply to be
anything major--though I don't know what happened to your machine.

In my experience, older, simpler, cooler hardware is still
running fine.

<QUOTE PREVIOUSPOST="
&gt; On 9 14 ,   3 01 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;I'd be willing to bet that almost any IIgs you had would be working
&gt;&gt;long after the machine you're emulating it on dies.  (Of course, I
&gt;&gt;realize that you'll then be emulating it on another...  ;-)
">

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-14T03:40:00 </POSTDATE>
The power supply probably dies 10 years ago. I don't even know whether
the SCSI card, the harddisk, the clock and even the System Saver still
work, probably not.

But the same GS harddisk, live in a 32MB disk image, lives on till
today, on my iMac.

On 9 14 ,   3 33 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I guess I don't consider replacing a power supply to be
&gt; anything major--though I don't know what happened to your machine.
">
</POST>
<POST>
<POSTER> &quot;sfahey&quot; &lt;sfa...@a2central.com.remove-rf9-this&gt; </POSTER>
<POSTDATE> 2007-09-14T09:47:00 </POSTDATE>
To: limtc
Re: Re: Complete Basic?
By: limtc to comp.sys.apple2 on Thu Sep 13 2007 09:18 pm

&gt; But local people don't buy them - they used to sell like S$5000 per
&gt; machine where a typical PC is about S$2000. Considering the living
&gt; &gt; Thats ironic, considering so much Apple gear from that era was manufactere
&gt; &gt; assembled there.

Yah, thats part of the irony.

I'm sure we could ship you something, if you're willing.

--- Synchronet 3.14a-Win32 NewsLink 1.85
A2Central.com - Your total source for Apple II computing.
</POST>
<POST>
<POSTER> limtc &lt;thyech...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-09-14T11:15:00 </POSTDATE>
Thanks and definitely appreciated.

Looking at this forum, I am probably the odd one out - I am just a
programmer who does not know anything about hardware and don't know
what to do once the case is open. I am not sure what can be done
without a harddisk, or even a Ethernet card to copy files over, etc. I
will definitely develop and test more software on it, and there will
be one more Apple IIGS programmer programming on the real GS (my son),
but the machine needed for development might be very expensive.

I will pay the shipment fee and pass the machine to my son and grow
him up to be the next Apple IIGS programmer. :)

On 9 14 ,   9 47 , &quot;sfahey&quot; &lt;sfa ... @a2central.com.remove-rf9-this&gt;
wrote:

<QUOTE PREVIOUSPOST="
&gt; I'm sure we could ship you something, if you're willing.

&gt; --- Synchronet 3.14a-Win32 NewsLink 1.85
&gt; A2Central.com - Your total source for Apple II computing.
">
</POST>
<POST>
<POSTER> &quot;Michael J. Mahon&quot; &lt;mjma...@aol.com&gt; </POSTER>
<POSTDATE> 2007-09-14T12:47:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
limtc wrote:
&gt; The power supply probably dies 10 years ago. I don't even know whether
&gt; the SCSI card, the harddisk, the clock and even the System Saver still
&gt; work, probably not.

&gt; But the same GS harddisk, live in a 32MB disk image, lives on till
&gt; today, on my iMac.
">

With the exception of the battery for the clock, I'd be willing to
bet that your machine and all its electronics would power up and
run today.

For all practical purposes (meaning human lifetimes) solid state
electronics (that don't run too hot) last forever.  The occasional
&quot;random&quot; failure occurs, but they are quite rare.

&quot;Wearout&quot; is almost never an issue for low- to medium-density chips.

<QUOTE PREVIOUSPOST="
&gt; On 9 14 ,   3 33 , &quot;Michael J. Mahon&quot; &lt;mjma ... @aol.com&gt; wrote:

&gt;&gt;I guess I don't consider replacing a power supply to be
&gt;&gt;anything major--though I don't know what happened to your machine.
">

-michael

NadaPong: Network game demo for Apple II computers!
Home page: http://members.aol.com/MJMahon/

&quot;The wastebasket is our most important design
tool--and it's seriously underused.&quot;
</POST>
</TEXT>
</BODY>
</DOC>
