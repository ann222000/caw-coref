<DOC>
<DOCID> eng-NG-31-135518-9742960 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-10-29T13:56:00 </DATETIME>
<BODY>
<HEADLINE>
couple of questions
</HEADLINE>
<TEXT>
<POST>
<POSTER> &quot;William Stein&quot; &lt;wst...@gmail.com&gt; </POSTER>
<POSTDATE> 2007-10-29T13:56:00 </POSTDATE>
On 10/29/07, Valeriy Bulitko  wrote:

<QUOTE PREVIOUSPOST="
&gt; Dear William,

&gt; I support the idea about open documented source codes
&gt; for math researches. But I'm not a specialist in software.
&gt; Since you write that SAGE  works in Windows, could you
&gt; please answer does it work with Vista.
">

I think so. It works as a &quot;VMware virtual appliance&quot;, which
you download here:

http://sagemath.org/SAGEbin/microsoft_windows/

I believe vmware works fine in Vista, XP, 2000, and many
other flavors of Windows.

<QUOTE PREVIOUSPOST="
&gt; Or it is better to use some Linux OS like Ubuntu or so.
">

Actually, the SAGE &quot;vmware appliance&quot; mentioned above is
just a minimal install of Ubuntu into a pre-made vmware
machine, along with an install of Sage.

<QUOTE PREVIOUSPOST="
&gt; Is there an opportunity to use in SAGE modules written in
&gt; FORTRAN?
">

Yes, definitely.   Using FORTRAN from Sage is well supported.
I'm not saying it is trivial to learn how to do it, but the
technology is very much there.   You can even use FORTRAN
directly in the Sage GUI.  There are some examples here:
http://sage.math.washington.edu/tmp/sage-2.8.9.rc1/devel/doc/overview...

<QUOTE PREVIOUSPOST="
&gt; A more concrete point: does SAGE have some special
&gt; routines to check isomorphisms of graphs?
">

Yes, Sage does.  We have our own new -- completely open source and
optimized -- graph isomorphism tester, which is an implementation of
the same algorithm as the one in Nauty.   It can also compute
automorphism groups of graphs.  The implementation is due
to Robert Miller (a graduate student at University of Washington).

Best regards,

William
</POST>
<POST>
<POSTER> gani &lt;bganapa...@earthlink.net&gt; </POSTER>
<POSTDATE> 2007-10-29T15:15:00 </POSTDATE>
Actually, the Fortran support is amazingly good. The implementation of
f2py is very well done that very little is needed to be done by the
user. It just works. However, there are some gotchas one has to be
careful with older code - need to have !f90 for example in the first
line. Also you need to make sure inputs and outputs are clearly
identified with cf2py intent(in) var1,..varn and cf2py intent(out)
var2....

Good luck!

gani --

On Oct 29, 10:56 am, &quot;William Stein&quot; &lt;wst ... @gmail.com&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; On 10/29/07, Valeriy Bulitko  wrote:

&gt; &gt; Dear William,

&gt; &gt; I support the idea about open documented source codes
&gt; &gt; for math researches. But I'm not a specialist in software.
&gt; &gt; Since you write that SAGE  works in Windows, could you
&gt; &gt; please answer does it work with Vista.

&gt; I think so. It works as a &quot;VMware virtual appliance&quot;, which
&gt; you download here:

&gt; http://sagemath.org/SAGEbin/microsoft_windows/

&gt; I believe vmware works fine in Vista, XP, 2000, and many
&gt; other flavors of Windows.

&gt; &gt; Or it is better to use some Linux OS like Ubuntu or so.

&gt; Actually, the SAGE &quot;vmware appliance&quot; mentioned above is
&gt; just a minimal install of Ubuntu into a pre-made vmware
&gt; machine, along with an install of Sage.

&gt; &gt; Is there an opportunity to use in SAGE modules written in
&gt; &gt; FORTRAN?

&gt; Yes, definitely.   Using FORTRAN from Sage is well supported.
&gt; I'm not saying it is trivial to learn how to do it, but the
&gt; technology is very much there.   You can even use FORTRAN
&gt; directly in the Sage GUI.  There are some examples here: http://sage.math.washington.edu/tmp/sage-2.8.9.rc1/devel/doc/overview ...

&gt; &gt; A more concrete point: does SAGE have some special
&gt; &gt; routines to check isomorphisms of graphs?

&gt; Yes, Sage does.  We have our own new -- completely open source and
&gt; optimized -- graph isomorphism tester, which is an implementation of
&gt; the same algorithm as the one in Nauty.   It can also compute
&gt; automorphism groups of graphs.  The implementation is due
&gt; to Robert Miller (a graduate student at University of Washington).

&gt; Best regards,

&gt; William
">
</POST>
</TEXT>
</BODY>
</DOC>
