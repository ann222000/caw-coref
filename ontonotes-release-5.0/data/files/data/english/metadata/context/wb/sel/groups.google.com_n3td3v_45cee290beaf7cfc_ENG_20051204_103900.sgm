<DOC>
<DOCID> groups.google.com_n3td3v_45cee290beaf7cfc_ENG_20051204_103900 </DOCID>
<DOCTYPE SOURCE="usenet">USENET TEXT</DOCTYPE>
<DATETIME>2005-12-04T10:39:00</DATETIME>
<BODY>
<HEADLINE>
Clueless anti-virus products/vendors (was Re: Sober)
</HEADLINE>
<TEXT>

<POST>
<POSTER> Church, Chuck </POSTER>
<POSTDATE> 2005-12-04T10:39:00 </POSTDATE>
Email: &quot;Church, Chuck&quot;&lt;cchu ... @netcogov.com&gt;


What about all the viruses out there that don't forge addresses?
Sending a warning message makes sense for these. Unless someone has
done the research to determine the majority of viruses forge addresses,
you really can't complain about the fact that the default is to warn.
Calling vendors 'clueless' because a default doesn't match your needs is
a little extreme, don't you think? The ideal solution would be for the
scanning software to send a warning only if the virus detected is known
to use real addresses, otherwise it won't warn.

Chuck

<QUOTE PREVIOUSPOST="
-----Original Message-----
From: owner-na ... @merit.edu [mailto:owner-na ... @merit.edu] On Behalf Of

Todd Vierling
Sent: Sunday, December 04, 2005 4:53 PM
To: W.D.McKinney
Cc: n ... @merit.edu
Subject: RE: Clueless anti-virus products/vendors (was Re: Sober)


&gt;&gt; (Virus &quot;warnings&quot; to forged addresses are UBE, plain and simple.)

&gt; Since when? I disagree.

UBE = &quot;unsolicited bulk e-mail&quot;.

Which of those three words do[es] not apply to virus &quot;warning&quot;
backscatter
to forged envelope/From: addresses? Think carefully before answering.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

"/>
</POST>



<POST>
<POSTER> Geo. </POSTER>
<POSTDATE> 2005-12-04T10:44:00 </POSTDATE>
Email: &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;What about all the viruses out there that don't forge addresses?

"/> What virus in the past 2 years doesn't forge the from address?

George Roettger

</POST>



<POST>
<POSTER> Christian Kuhtz </POSTER>
<POSTDATE> 2005-12-04T10:45:00 </POSTDATE>
Email: Christian Kuhtz &lt;kuht ... @corp.earthlink.net&gt;


Better safe than sorry. Unless you can determine that it isn't
forged, you shouldn't be sending anything because there is so much
out there forging From: addresses (or To: for that matter, with Bcc:).

So, this isn't about ideal vs ok-close-enough. Don't send me crap
unless you have a reasonable level of confidence. I don't believe
that you can pass a straight face test with virus scanning responses
on that one.

If you can, I think you need your head examined ;-)


<QUOTE PREVIOUSPOST="
On Dec 4, 2005, at 10:27 PM, Church, Chuck wrote:

&gt; What about all the viruses out there that don't forge addresses?
&gt; Sending a warning message makes sense for these. Unless someone has
&gt; done the research to determine the majority of viruses forge
&gt; addresses,
&gt; you really can't complain about the fact that the default is to warn.
&gt; Calling vendors 'clueless' because a default doesn't match your
&gt; needs is
&gt; a little extreme, don't you think? The ideal solution would be for
&gt; the
&gt; scanning software to send a warning only if the virus detected is
&gt; known
&gt; to use real addresses, otherwise it won't warn.

&gt; Chuck

&gt; -----Original Message-----
&gt; From: owner-na ... @merit.edu [mailto:owner-na ... @merit.edu] On
&gt; Behalf Of
&gt; Todd Vierling
&gt; Sent: Sunday, December 04, 2005 4:53 PM
&gt; To: W.D.McKinney
&gt; Cc: n ... @merit.edu
&gt; Subject: RE: Clueless anti-virus products/vendors (was Re: Sober)

&gt; On Sun, 4 Dec 2005, W.D.McKinney wrote:

&gt;&gt;&gt; (Virus &quot;warnings&quot; to forged addresses are UBE, plain and simple.)

&gt;&gt; Since when? I disagree.

&gt; UBE = &quot;unsolicited bulk e-mail&quot;.

&gt; Which of those three words do[es] not apply to virus &quot;warning&quot;
&gt; backscatter
&gt; to forged envelope/From: addresses? Think carefully before answering.

&gt; --
&gt; -- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

"/>
</POST>



<POST>
<POSTER> Larry Smith </POSTER>
<POSTDATE> 2005-12-04T10:56:00 </POSTDATE>
Email: Larry Smith &lt;lesm ... @ecsis.net&gt;



<QUOTE PREVIOUSPOST="
On Sunday 04 December 2005 21:27, Church, Chuck wrote:
&gt; What about all the viruses out there that don't forge addresses?
&gt; Sending a warning message makes sense for these. Unless someone has
&gt; done the research to determine the majority of viruses forge addresses,
&gt; you really can't complain about the fact that the default is to warn.
&gt; Calling vendors 'clueless' because a default doesn't match your needs is
&gt; a little extreme, don't you think? The ideal solution would be for the
&gt; scanning software to send a warning only if the virus detected is known
&gt; to use real addresses, otherwise it won't warn.

"/> True, but the &quot;capability&quot; has been in most AV software for quite a long time
now to know which ones &quot;forge&quot; and which do not. Clamav has a &quot;list&quot; of
which virii are &quot;forging&quot; and which are not - I am reasonably certain that
most other AV products have the same information at hand (a quick search of
Symantec confirms that they know [ref sober worm, para 23, From:
(spoofed)). So while I agree with your basic concept of notifying someone
that they are infected - when you can notify the &quot;right&quot; person - blanket
notifications are more trouble than the virus itself in many cases. And yes,
as of yesterday I have more &quot;blowback&quot; from sober than from the worm
itself....

--
Larry Smith
SysAd ECSIS.NET
s ... @ecsis.net

</POST>



<POST>
<POSTER> Steven M. Bellovin </POSTER>
<POSTDATE> 2005-12-04T11:16:00 </POSTDATE>
Email: &quot;Steven M. Bellovin&quot;&lt;s ... @cs.columbia.edu&gt;


In message &lt;B6621ED4D0AD394BBA73CA657DFD8976869 ... @MSPEXBE01.wamnet.inc&gt;, &quot;Chur

<QUOTE PREVIOUSPOST="
ch, Chuck&quot; writes:

&gt;What about all the viruses out there that don't forge addresses?
&gt;Sending a warning message makes sense for these. Unless someone has
&gt;done the research to determine the majority of viruses forge addresses,
&gt;you really can't complain about the fact that the default is to warn.
&gt;Calling vendors 'clueless' because a default doesn't match your needs is
&gt;a little extreme, don't you think? The ideal solution would be for the
&gt;scanning software to send a warning only if the virus detected is known
&gt;to use real addresses, otherwise it won't warn.

"/> A-V companies are in the business of analyzing viruses. They should
*know* how a particular virus behaves.

--Steven M. Bellovin,  http://www.cs.columbia.edu/~smb

</POST>



<POST>
<POSTER> Edward B. Dreger </POSTER>
<POSTDATE> 2005-12-04T11:30:00 </POSTDATE>
Email: &quot;Edward B. Dreger&quot;&lt;eddy+public+s ... @noc.everquick.net&gt;


SMB&gt; Date: Sun, 04 Dec 2005 23:04:52 -0500
SMB&gt; From: Steven M. Bellovin

SMB&gt; A-V companies are in the business of analyzing viruses. They should
SMB&gt; *know* how a particular virus behaves.

The cynical would say they _do_ know, and &quot;accidental&quot; backscatter is a
way to advertise their products. ;-)

Eddy
--
Everquick Internet -  http://www.everquick.net/
A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
Bandwidth, consulting, e-commerce, hosting, and network building
Phone: +1 785 865 5885 Lawrence and [inter]national
Phone: +1 316 794 8922 Wichita
________________________________________________________________________
DO NOT send mail to the following addresses:
dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
Sending mail to spambait addresses is a great way to get blocked.
Ditto for broken OOO autoresponders and foolish AV software backscatter.

</POST>



<POST>
<POSTER> Jamie C. Pole </POSTER>
<POSTDATE> 2005-12-04T11:37:00 </POSTDATE>
Email: &quot;Jamie C. Pole&quot;&lt;j ... @jcpa.com&gt;


An even more cynical way would be to say that most antivirus
companies aren't in the business of analyzing viruses - they are in
the business of selling antivirus software.

I believe that is the fundamental problem.

Jamie

--
Jamie C. Pole
j ... @jcpa.com
http://www.jcpa.com

InfoSec / InfoWar / Forensics


<QUOTE PREVIOUSPOST="
On Dec 4, 2005, at 11:18 PM, Edward B. Dreger wrote:

&gt; SMB&gt; Date: Sun, 04 Dec 2005 23:04:52 -0500
&gt; SMB&gt; From: Steven M. Bellovin

&gt; SMB&gt; A-V companies are in the business of analyzing viruses. They
&gt; should
&gt; SMB&gt; *know* how a particular virus behaves.

&gt; The cynical would say they _do_ know, and &quot;accidental&quot; backscatter
&gt; is a
&gt; way to advertise their products. ;-)

&gt; Eddy
&gt; --
&gt; Everquick Internet -  http://www.everquick.net/
&gt; A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
&gt; Bandwidth, consulting, e-commerce, hosting, and network building
&gt; Phone: +1 785 865 5885 Lawrence and [inter]national
&gt; Phone: +1 316 794 8922 Wichita
&gt; ______________________________________________________________________
&gt; __
&gt; DO NOT send mail to the following addresses:
&gt; dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
&gt; Sending mail to spambait addresses is a great way to get blocked.
&gt; Ditto for broken OOO autoresponders and foolish AV software
&gt; backscatter.

"/>
</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-04T11:41:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; What about all the viruses out there that don't forge addresses?

"/> Not that there are nearly as many -- the main scourge is sender-forging
worms by a better than 90%/10% margin -- but I very specifically mentioned:

<QUOTE PREVIOUSPOST="
On Sun, 4 Dec 2005, Church, Chuck wrote:
&gt;&gt;&gt; (Virus &quot;warnings&quot; to forged addresses are UBE, plain and simple.)

"/> I think that was pretty clear.

<QUOTE PREVIOUSPOST="
&gt; Sending a warning message makes sense for these. Unless someone has
&gt; done the research to determine the majority of viruses forge addresses,

"/> Are you living on Earth in 2005? Unless your filters are VERY strict, no
research should be necessary; look at your own mailbox[es]. If you don't
know that most worm-viruses forge senders these days, you haven't been using
Internet e-mail long enough. 8-)

That said, it takes only a cursory glance through the worms listed on
Symantec's or F-Secure's or Sophos's web sites in reverse chronological
order to see, very clearly, that *nearly every* worm in recent history
forges sender addresses. Finding three or more worms in the past two years
that don't forge is a challenge for the bored reader.

Some do it for a very good reason -- in the eyes of the worm's writer, mind
you. A worm is more likely to get through if the user in envelope-FROM has
some sort of relationship with the recipient, because so many sites use
weighted scoring that includes auto-whitelist bias. To a worm writer, just
using the address in the luser's settings isn't enough, as folks are
starting to understand &quot;don't click on any random attachment.&quot; So, gambling
on the luser having a circle of friends close enough to know each other, the
worm forges many different combinations. (If you want more details on this
reasoning, take it off-list.)

<QUOTE PREVIOUSPOST="
&gt; Calling vendors 'clueless' because a default doesn't match your needs is
&gt; a little extreme, don't you think?

"/> The vendors sending worm-virus &quot;warning&quot; UBE are indeed clueless now,
because they aren't paying attention to (often their own!) virus statistics
showing that the majority of worm-viruses forge sender addresses today.

Let me repeat myself:

<QUOTE PREVIOUSPOST="
&gt;&gt;&gt; (Virus &quot;warnings&quot; to forged addresses are UBE, plain and simple.)

"/> Not sending UBE is not just &quot;my needs&quot;; I think we can both agree on that.

To extend that concept, virus &quot;warnings&quot; triggered by worm-viruses for which
the forgery status is unknown is either UBE or very close to it.

With the massive amount if spew that is forged, any warning option that is
not absolutely confined to trigger on problem mail *known* not to be forged
is a part of the problem, not part of the solution. The option for warning
on forged senders shouldn't just be off -- it should not exist.

<QUOTE PREVIOUSPOST="
&gt; The ideal solution would be for the scanning software to send a warning
&gt; only if the virus detected is known to use real addresses, otherwise it
&gt; won't warn.

"/> Symantec reportedly did this at long last in one of their products recently
(see SPA ... @PEACH.EASE.LSOFT.COM archives for details). I truly hope others
follow suit. However, unless the option to warn forged senders is removed
entirely from their products, anti-malware vendors still have a large amount
of fault on their shoulders.

Things like clamav have had the option properly separated for some time, but
I'm mainly counting the slow-moving, commercial anti-malware products in the
prior pragraph.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Christopher L. Morrow </POSTER>
<POSTDATE> 2005-12-04T11:42:00 </POSTDATE>
Email: &quot;Christopher L. Morrow&quot;&lt;christopher.mor ... @mci.com&gt;


<QUOTE PREVIOUSPOST="
&gt; In message &lt;B6621ED4D0AD394BBA73CA657DFD8976869 ... @MSPEXBE01.wamnet.inc&gt;, &quot;Chur
&gt; ch, Chuck&quot; writes:

&gt;&gt;What about all the viruses out there that don't forge addresses?
&gt;&gt;Sending a warning message makes sense for these. Unless someone has

&gt; A-V companies are in the business of analyzing viruses. They should
&gt; *know* how a particular virus behaves.

"/> This has also been said before, but... they are also in the business of
SELLING their product. It seems that the 'default' (note I don't either:
use av, nor scan emails for virii so I'm not sure what defaults to what...
just use something other than outlook and you can care less about it) is
possibly there for advertising effect more than anything else :(

Hey, bob's company stopped this virus with $PRODUCT_12, why aren't we
using that product $VP_O_IT ??

</POST>



<POST>
<POSTER> Robert Bonomi </POSTER>
<POSTDATE> 2005-12-05T12:12:00 </POSTDATE>
Email: Robert Bonomi &lt;bon ... @mail.r-bonomi.com&gt;


<QUOTE PREVIOUSPOST="
&gt; From owner-na ... @merit.edu Sun Dec 4 22:34:54 2005
&gt; Date: Mon, 05 Dec 2005 04:30:26 +0000 (GMT)
&gt; From: &quot;Christopher L. Morrow&quot;&lt;christopher.mor ... @mci.com&gt;
&gt; Subject: Re: Clueless anti-virus products/vendors (was Re: Sober)
&gt; To: &quot;Steven M. Bellovin&quot;&lt;s ... @cs.columbia.edu&gt;
&gt; Cc: &quot;Church, Chuck&quot;&lt;cchu ... @netcogov.com&gt;, n ... @merit.edu

&gt; On Sun, 4 Dec 2005, Steven M. Bellovin wrote:

&gt;&gt; In message &lt;B6621ED4D0AD394BBA73CA657DFD8976869 ... @MSPEXBE01.wamnet.inc&gt;, &quot;Chur
&gt;&gt; ch, Chuck&quot; writes:

&gt;&gt;&gt;What about all the viruses out there that don't forge addresses?
&gt;&gt;&gt;Sending a warning message makes sense for these. Unless someone has

&gt;&gt; A-V companies are in the business of analyzing viruses. They should
&gt;&gt; *know* how a particular virus behaves.

&gt; This has also been said before, but... they are also in the business of
&gt; SELLING their product. It seems that the 'default' (note I don't either:
&gt; use av, nor scan emails for virii so I'm not sure what defaults to what...
&gt; just use something other than outlook and you can care less about it) is
&gt; possibly there for advertising effect more than anything else :(

&gt; Hey, bob's company stopped this virus with $PRODUCT_12, why aren't we
&gt; using that product $VP_O_IT ??

"/>&quot;Because they 'very thoughtfully' fowarded the entire message, INCLUDING
THE VIRUS ITSELF, to us. _Even_though_ the original message did not
originate here.

&quot;Do you _really_ think we should start forwarding viruses to our customers,
'just because' their address was forged into a message sent us? Just how
do you think our customers would respond to _that_?&quot;

There _is_ an art-form to backing management into an untennable corner, when
they are bound and determined to do something 'wrong'. It's simply a matter
of finding the &quot;right&quot; consequences of the action, to illustrate _why_ the
proposed thing is 'wrong'. 'Revenues', and 'customer satisfaction' are
almost _universal_ &quot;hot buttons&quot; that can frequently be used to advantage.

</POST>



<POST>
<POSTER> Daniel Senie </POSTER>
<POSTDATE> 2005-12-05T01:24:00 </POSTDATE>
Email: Daniel Senie &lt;d ... @senie.com&gt;


At 10:27 PM 12/4/2005, Church, Chuck wrote:

<QUOTE PREVIOUSPOST="
&gt;What about all the viruses out there that don't forge addresses?

"/> As others have noted, these are so far lost in the noise as to not be a factor.

<QUOTE PREVIOUSPOST="
&gt;Sending a warning message makes sense for these.

"/> Why? Because you need to be the one to tell the sender they are
infected? Let sites patrol their own users.

Furthermore, if you did your virus scanning during the SMTP
transaction, you'd be able to send back a 5xx error response during
the transaction, thereby avoiding any concern about spamming an
innocent third party.

<QUOTE PREVIOUSPOST="
&gt; Unless someone has
&gt;done the research to determine the majority of viruses forge addresses,
&gt;you really can't complain about the fact that the default is to warn.

"/> As others have noted, the vendors can and should know.

<QUOTE PREVIOUSPOST="
&gt;Calling vendors 'clueless' because a default doesn't match your needs

"/> Excuse me, I think you may notice that a LOT of folks have piped up
on this issue. The simple fact is as configured many vendors spam
third parties adding to the noise floor. While backbone operators
might in fact make a bit extra as a result, those of us who actually
pay for bandwidth do not appreciate it. We certainly can and do
blacklist sites that hammer us with bogus bounces, just the same as
we'd block any company knowingly sending us undesired email.

<QUOTE PREVIOUSPOST="
&gt; is
&gt;a little extreme, don't you think? The ideal solution would be for the
&gt;scanning software to send a warning only if the virus detected is known
&gt;to use real addresses, otherwise it won't warn.

"/> See question above, re: why do you think it's your systems' place to
police the rest of the Internet, sending warnings out? Either reject
virus-laden email during the SMTP session, or quietly own it (and
dispose of it).

<QUOTE PREVIOUSPOST="
&gt;Chuck

&gt;-----Original Message-----
&gt;From: owner-na ... @merit.edu [mailto:owner-na ... @merit.edu] On Behalf Of
&gt;Todd Vierling
&gt;Sent: Sunday, December 04, 2005 4:53 PM
&gt;To: W.D.McKinney
&gt;Cc: n ... @merit.edu
&gt;Subject: RE: Clueless anti-virus products/vendors (was Re: Sober)

&gt;On Sun, 4 Dec 2005, W.D.McKinney wrote:

&gt;&gt;&gt; (Virus &quot;warnings&quot; to forged addresses are UBE, plain and simple.)

&gt;&gt; Since when? I disagree.

&gt;UBE = &quot;unsolicited bulk e-mail&quot;.

&gt;Which of those three words do[es] not apply to virus &quot;warning&quot;
&gt;backscatter
&gt;to forged envelope/From: addresses? Think carefully before answering.

&gt;--
&gt;-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

"/>
</POST>



<POST>
<POSTER> Rich Kulawiec </POSTER>
<POSTDATE> 2005-12-05T08:40:00 </POSTDATE>
Email: Rich Kulawiec &lt;r ... @gsp.org&gt;


<QUOTE PREVIOUSPOST="
&gt; What about all the viruses out there that don't forge addresses?

"/> Three responses.

First, these are pretty much a minority nowadays: so unless someone
wants to code AV responses on a case-by-case basis, the best default
is &quot;don't respond, ever&quot;.

Second, rejecting virus-contaminated traffic during the SMTP phase
completely alleviates the need to address this question, since no
outbound mail is generated.

Third, put the first two points aside. Let's suppose, for a moment,
that there existed a completely reliable mechanism for figuring out
the real sender (in the sense of &quot;the owner of the infected system&quot;)
for a particular virus-contaminated message.

Think about what would happen if the 100 or 1000 or 10000 or 100000
people getting outbound viruses from that user all generated responses.

The first effect would be to double the quantity of useless mail
messages traversing the Internet.

The second effect would be to hammer the user's mailbox and whatever
mail server it happened to be residing on. (Consider how this effect
would be multiplied if many users of X all had infected systems sending
SMTP traffic directly, but of course were all receiving inbound mail via
X's mail server(s).)

The third effect would really be a non-effect, as the user's most
likely response (thanks to years of conditioning imposed by the
problem we're discussing here) would be to do nothing: experience
has taught users that such warnings are bogus and can safely be ignored.
The user's second-most-likely response would be indignant denial (despite
logs showing positive identification). The user's third-most-likely
response would be report the responses as spam and/or block the senders.

Bottom line: nothing good can come of generating outbound mail in
response to rejected inbound mail; the best course of action is to
issue the appropriate 5XX response and be done with it.

---Rsk

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-05T08:50:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 4, 2005, at 8:04 PM, Steven M. Bellovin wrote:
&gt;&quot;Church, Chuck&quot; writes:

&gt;&gt; The ideal solution would be for the scanning software to send a
&gt;&gt; warning only if the virus detected is known to use real addresses,
&gt;&gt; otherwise it won't warn.

&gt; A-V companies are in the business of analyzing viruses. They
&gt; should *know* how a particular virus behaves.

"/> It is common to find detailed descriptions offered by the company
that indicates the behavior of the detected virus, which often
includes spoofing the bounce-address. A less than elegant solution
as an alternative to deleting the message, is to hold the data phase
pending the scan. Another solution would be not returning message
content within a DSN. This would mitigate the distribution of
viruses, as well as forged bounce-addresses sent to a backup MTAs as
a method for bypassing black-hole lists. Would changing what is
returned within a DSN in all cases be a solution?

-Doug

</POST>



<POST>
<POSTER> Valdis.Kletni ... @vt.edu </POSTER>
<POSTDATE> 2005-12-05T09:52:00 </POSTDATE>
Email: Valdis.Kletni ... @vt.edu


On Mon, 05 Dec 2005 17:38:00 PST, Douglas Otis said:

<QUOTE PREVIOUSPOST="
&gt; pending the scan. Another solution would be not returning message
&gt; content within a DSN. This would mitigate the distribution of
&gt; viruses, as well as forged bounce-addresses sent to a backup MTAs as
&gt; a method for bypassing black-hole lists. Would changing what is
&gt; returned within a DSN in all cases be a solution?

"/> No. You're still sending a DSN to a destination that you know beforehand
is incorrect.

application_pgp-signature_part
1K  Download
</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-06T11:19:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; A less than elegant solution as an alternative to deleting the message, is
&gt; to hold the data phase pending the scan.

"/> Contrary to your vision of this option, it is not only elegant; it happens
to be the *correct* thing to do.

Dropping the message on the floor is arguably stretching the bounds of
RFC2821. If a message is going to be dropped because of a policy (such as a
worm/virus flag), you really should be rejecting after DATA with a RFC1893
5.7.x extended result code.

<QUOTE PREVIOUSPOST="
On Mon, 5 Dec 2005, Douglas Otis wrote:
&gt; Another solution would be not returning message content within a DSN.

"/> If you're still sending to a forged address, how is this not still UBE...?

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-06T04:61:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 6, 2005, at 8:19 AM, Todd Vierling wrote:

&gt; On Mon, 5 Dec 2005, Douglas Otis wrote:

&gt;&gt; A less than elegant solution as an alternative to deleting the
&gt;&gt; message, is
&gt;&gt; to hold the data phase pending the scan.

&gt; Contrary to your vision of this option, it is not only elegant; it
&gt; happens
&gt; to be the *correct* thing to do.

"/> Holding at the data phase does usually avoid the need for a DSN, but
this technique may require some added (less than elegant) operations
depending upon where the scan engine exists within the email stream.
Waiting for the scan to complete adds stack overhead (assuming a good
black-hole list is being used). Albeit small, there is never 0%
false detections of malware. It would seem that when a DSN is
required, as a general practice, the DSN should not include message
content. This should at least thwart this vector being used to
spread malware and spam. Preventing the spread of a virus seems
key. There is always BATV to clean-up spoofed bounce-addresses in
the meantime.

-Doug

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-06T05:27:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;&gt; A less than elegant solution as an alternative to deleting the message, is
&gt;&gt;&gt; to hold the data phase pending the scan.

&gt;&gt; Contrary to your vision of this option, it is not only elegant; it happens
&gt;&gt; to be the *correct* thing to do.

&gt; Holding at the data phase does usually avoid the need for a DSN, but this
&gt; technique may require some added (less than elegant) operations depending upon
&gt; where the scan engine exists within the email stream.

"/> Not my problem. I don't need or want, and should not be hammered with,
virus &quot;warnings&quot; sent to forged addresses -- ever. They are unsolicited (I
didn't request it, and definitely don't want it), bulk (automated upon
receipt of viruses by the offending server), e-mail... thus UBE.

It's up to the server operator to choose how to handle virus protection in
the mail system, without generating any mail whatsoever to forged or
unknown-if-it-is-forged senders.

<QUOTE PREVIOUSPOST="
On Tue, 6 Dec 2005, Douglas Otis wrote:
&gt; It would seem that when a DSN is required, as a
&gt; general practice, the DSN should not include message content.
&gt; This should at least thwart this vector being used to spread
&gt; malware and spam. Preventing the spread of a virus seems key.

"/> I, frankly, don't care about the issue of whether or not a &quot;warning&quot; message
includes the virus that triggered it; you've missed the point.

I care about the fact that these &quot;warnings&quot; are UBE, at levels that have
been peaking above those of direct spam from what I can see.

Generated virus &quot;warnings&quot; must not go to a known forged sender, or to a
sender for which the forgery status is unknown. If you cannot *guarantee*
that the address in MAIL FROM:&lt;&gt; is correct, and cannot reject at SMTP time,
your only options are to quarantine, discard, or allow delivery. Do not
send a DSN; do not pass Go; do not collect US$200.

<QUOTE PREVIOUSPOST="
&gt; There is always BATV to clean-up spoofed bounce-addresses in the meantime.

"/> And other methods (DK, SPF, SID, choose your poison). However, if the
server cannot verify that the MAIL FROM:&lt;&gt; is not forged with reasonable
certainty, the server should not send a DSN, period. Otherwise, it's a
direct contributor to the UBE problem.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-06T07:38:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 6, 2005, at 2:15 PM, Todd Vierling wrote:

&gt; On Tue, 6 Dec 2005, Douglas Otis wrote:

&gt;&gt; Holding at the data phase does usually avoid the need for a DSN,
&gt;&gt; but this
&gt;&gt; technique may require some added (less than elegant) operations
&gt;&gt; depending upon
&gt;&gt; where the scan engine exists within the email stream.

&gt; Not my problem. I don't need or want, and should not be hammered
&gt; with, virus &quot;warnings&quot; sent to forged addresses -- ever. They are
&gt; unsolicited (I didn't request it, and definitely don't want it),
&gt; bulk (automated upon receipt of viruses by the offending server), e-
&gt; mail... thus UBE.

"/> I know of no cases where a malware related DSN would be generated by
our products, nevertheless, DSNs are not Unsolicited Bulk Email.

<QUOTE PREVIOUSPOST="
&gt; Generated virus &quot;warnings&quot; must not go to a known forged sender, or
&gt; to a sender for which the forgery status is unknown. If you cannot
&gt; *guarantee* that the address in MAIL FROM:&lt;&gt; is correct, and cannot
&gt; reject at SMTP time, your only options are to quarantine, discard,
&gt; or allow delivery. Do not send a DSN; do not pass Go; do not
&gt; collect US$200.

"/> Not all email is rejected within the SMTP session. You are changing
requirements for recipients that scan incoming messages for malware.
Fault them for returning content or not including a null bounce-
address. No one can guarantee an email-address within the bounce-
address is valid, furthermore a DSN could be desired even for cases
where an authorization scheme fails. Why create corner cases?

<QUOTE PREVIOUSPOST="
&gt;&gt; There is always BATV to clean-up spoofed bounce-addresses in the
&gt;&gt; meantime.

&gt; And other methods (DK, SPF, SID, choose your poison). However, if
&gt; the server cannot verify that the MAIL FROM:&lt;&gt; is not forged with
&gt; reasonable certainty, the server should not send a DSN, period.
&gt; Otherwise, it's a direct contributor to the UBE problem.

"/> DomainKeys and Sender-ID can not validate the bounce-address or the
DSN. Even with an SPF failure, a DSN should still be sent, as SPF
fails in several scenarios, and false positives are never 0%. BATV
offers a unilateral option that can effectively discard spoofed
bounce-addresses. When the AV software provides the DSN with a null
bounce-address, BATV works as advertised.

-Doug

</POST>



<POST>
<POSTER> Florian Weimer </POSTER>
<POSTDATE> 2005-12-07T07:56:00 </POSTDATE>
Email: Florian Weimer &lt;f ... @deneb.enyo.de&gt;


* Steven M. Bellovin:

<QUOTE PREVIOUSPOST="
&gt; A-V companies are in the business of analyzing viruses.

"/> Many offer analysis services, but this is done upon special request,
and only if you pay extra.

<QUOTE PREVIOUSPOST="
&gt; They should *know* how a particular virus behaves.

"/> You don't need to know what the virus does in order to detect it with
a file-based signature. Analysis stops as soon as detection is
possible with sufficient accuracy. Timebombs and other hidden
functionality go unnoticed (unless the malware is form a well-known
strain which has such features).

</POST>



<POST>
<POSTER> Steven J. Sobol </POSTER>
<POSTDATE> 2005-12-07T08:54:00 </POSTDATE>
Email: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; Not my problem. I don't need or want, and should not be hammered
&gt;&gt; with, virus &quot;warnings&quot; sent to forged addresses -- ever. They are
&gt;&gt; unsolicited (I didn't request it, and definitely don't want it),
&gt;&gt; bulk (automated upon receipt of viruses by the offending server), e-
&gt;&gt; mail... thus UBE.

&gt; I know of no cases where a malware related DSN would be generated by
&gt; our products, nevertheless, DSNs are not Unsolicited Bulk Email.

"/> Riiiight.

Virus notifications aren't DSNs.

99% of the time, they're ads for the publisher of whatever anti-virus
filter is being used on the recipient's side.

--
Steve Sobol, Professional Geek 888-480-4638 PGP: 0xE3AE35ED
Company website:  http://JustThe.net/
Personal blog, resume, portfolio:  http://SteveSobol.com/
E: sjso ... @JustThe.net Snail: 22674 Motnocab Road, Apple Valley, CA 92307

</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-07T11:43:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;
To: &quot;Todd Vierling&quot;&lt;t ... @duh.org&gt;

Cc: &quot;Steven M. Bellovin&quot;&lt;s ... @cs.columbia.edu&gt;; &quot;Church, Chuck&quot;
&lt;cchu ... @netcogov.com&gt;; &lt;n ... @merit.edu&gt;
Sent: Tuesday, December 06, 2005 6:26 PM
Subject: Re: Clueless anti-virus products/vendors (was Re: Sober)

&gt; On Dec 6, 2005, at 2:15 PM, Todd Vierling wrote:

&gt;&gt; On Tue, 6 Dec 2005, Douglas Otis wrote:

&gt;&gt;&gt; Holding at the data phase does usually avoid the need for a DSN, but
&gt;&gt;&gt; this
&gt;&gt;&gt; technique may require some added (less than elegant) operations
&gt;&gt;&gt; depending upon
&gt;&gt;&gt; where the scan engine exists within the email stream.

&gt;&gt; Not my problem. I don't need or want, and should not be hammered with,
&gt;&gt; virus &quot;warnings&quot; sent to forged addresses -- ever. They are unsolicited
&gt;&gt; (I didn't request it, and definitely don't want it), bulk (automated
&gt;&gt; upon receipt of viruses by the offending server), e- mail... thus UBE.

&gt; I know of no cases where a malware related DSN would be generated by our
&gt; products, nevertheless, DSNs are not Unsolicited Bulk Email.

That's good Doug, and IMHO, your products should never generate them.
However, I will disagree with you concerning the DSN being UBE. As a general
rule, you are correct, DSN's != UBE. However, in the case of av systems
(scanning engine and mta configurations) they can be. While I agree with you
that the scanning engine(s) used by most of us, do not actually send reject
notifications, the mechanisms that employ them, both commercial and open
source, usually can, and do, unless configured not to. Some may see it as a
violation of RFC to not return a DSN on failed delivery. Others, like myself
see the need to not return a failure notice on virus / trojan infected email
as it has become the norm that the sender information is forged. Especially
those systems that contain the infected data along with the message. To many
trojans / viri as of late, the DSN's that include the message (with
infection) are being used as a repeater to further propogate the infection.
Those that release these things are starting to depend on our mechanisms to
help them spread. I, like others, prefer not to help them break the net from
my little piece of it.

--

Mike P.

"/>
</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-07T02:71:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; Not my problem. I don't need or want, and should not be hammered with,
&gt;&gt; virus &quot;warnings&quot; sent to forged addresses -- ever. They are unsolicited (I
&gt;&gt; didn't request it, and definitely don't want it), bulk (automated upon
&gt;&gt; receipt of viruses by the offending server), e-mail... thus UBE.

&gt; I know of no cases where a malware related DSN would be generated by our
&gt; products,

"/> That's good. Unfortunately it is not the case for most commercial
anti-malware products.

<QUOTE PREVIOUSPOST="
On Tue, 6 Dec 2005, Douglas Otis wrote:
&gt; nevertheless, DSNs are not Unsolicited Bulk Email.

"/> I don't see how this is relevant to my paragraph above. I was not equating
DSNs to UBE -- I specifically mentioned virus &quot;warnings&quot;. Whether those
warnings are look like DSNs, smell like DSNs, or taste like DSNs is wholly
irrelevant; they are still UBE if sent to forged virus sender addresses.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Edward B. Dreger </POSTER>
<POSTDATE> 2005-12-07T04:47:00 </POSTDATE>
Email: &quot;Edward B. Dreger&quot;&lt;eddy+public+s ... @noc.everquick.net&gt;


DO&gt; Date: Tue, 6 Dec 2005 16:26:16 -0800
DO&gt; From: Douglas Otis

DO&gt; I know of no cases where a malware related DSN would be generated by our

Good.

DO&gt; products, nevertheless, DSNs are not Unsolicited Bulk Email.

Huh? I get NDRs for mail that &quot;I&quot; sent. I do not want those NDRs. I
did not request those NDRs. Those NDRs are not in response to a message
I sent.

I do not want backscatter NDR notices. I frankly don't care that
WhizBangAV caught WormOfTheWeek on Susie Smith's corporate mail in
Argentina from Billy Boo's PC in China... just because my address
happened to be the subject of a joe jobbing worm.

Really. Even reading and posting to NANOG is more important. ;-)

DO&gt; Not all email is rejected within the SMTP session. You are changing
DO&gt; requirements for recipients that scan incoming messages for malware. Fault
DO&gt; them for returning content or not including a null bounce-address. No one
DO&gt; can guarantee an email-address within the bounce-address is valid,

Perhaps DSNs should be sent to the original recipient, not the purported
sender. RFC-compliant? No. Ridiculous? Less so than pestering a
random third party. Let the intended recipient communicate OOB or
manually if needed.

DO&gt; furthermore a DSN could be desired even for cases where an authorization

When auth fails, one knows *right then* c/o an SMTP reject. No bounce
is necessary.

DO&gt; scheme fails. Why create corner cases?

The corner case is that a virus _might_ actually have a realistic &quot;From&quot;
address. :-)

DO&gt; DomainKeys and Sender-ID can not validate the bounce-address or the DSN.
DO&gt; Even with an SPF failure, a DSN should still be sent, as SPF fails in

If you receive mail with

From: &lt;e ... @everquick.net&gt;

coming from 10.10.10.10, and everquick.net SPF records indicate that IP
address is bogus, how can you possibly justify &quot;that mail may indeed
have come from how it's apparently addressed&quot;? Doubly so when a virus
is known to spoof &quot;from&quot; addresses!

Saying a DSN should be sent is just untenable.

DO&gt; several scenarios, and false positives are never 0%. BATV offers a
DO&gt; unilateral option that can effectively discard spoofed bounce-addresses.
DO&gt; When the AV software provides the DSN with a null bounce-address, BATV works
DO&gt; as advertised.

Eddy
--
Everquick Internet -  http://www.everquick.net/
A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
Bandwidth, consulting, e-commerce, hosting, and network building
Phone: +1 785 865 5885 Lawrence and [inter]national
Phone: +1 316 794 8922 Wichita
________________________________________________________________________
DO NOT send mail to the following addresses:
dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
Sending mail to spambait addresses is a great way to get blocked.
Ditto for broken OOO autoresponders and foolish AV software backscatter.

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-07T05:27:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 7, 2005, at 1:35 PM, Edward B. Dreger wrote:
&gt; DO&gt; Not all email is rejected within the SMTP session. You are
&gt; changing
&gt; DO&gt; requirements for recipients that scan incoming messages for
&gt; malware. Fault
&gt; DO&gt; them for returning content or not including a null bounce-
&gt; address. No one
&gt; DO&gt; can guarantee an email-address within the bounce-address is valid,

&gt; Perhaps DSNs should be sent to the original recipient, not the
&gt; purported
&gt; sender. RFC-compliant? No. Ridiculous? Less so than pestering a
&gt; random third party. Let the intended recipient communicate OOB or
&gt; manually if needed.

"/> Being refused by the intended recipient would be the cause for the DSN.

<QUOTE PREVIOUSPOST="
&gt; DO&gt; furthermore a DSN could be desired even for cases where an
&gt; authorization

&gt; When auth fails, one knows *right then* c/o an SMTP reject. No bounce
&gt; is necessary.

"/> This assumes all messages are rejected within the SMTP session.

<QUOTE PREVIOUSPOST="
&gt; DO&gt; scheme fails. Why create corner cases?

&gt; The corner case is that a virus _might_ actually have a realistic
&gt;&quot;From&quot;
&gt; address. :-)

"/> You mean bounce-address? A From address often has nothing to do with
where a message originated.

<QUOTE PREVIOUSPOST="
&gt; DO&gt; DomainKeys and Sender-ID can not validate the bounce-address or
&gt; the DSN.
&gt; DO&gt; Even with an SPF failure, a DSN should still be sent, as SPF
&gt; fails in

&gt; If you receive mail with

&gt; From: &lt;e ... @everquick.net&gt;

&gt; coming from 10.10.10.10, and everquick.net SPF records indicate
&gt; that IP
&gt; address is bogus, how can you possibly justify &quot;that mail may indeed
&gt; have come from how it's apparently addressed&quot;? Doubly so when a virus
&gt; is known to spoof &quot;from&quot; addresses!

"/> SPF has _nothing_ to do with the From address.

Once again, not _all_ messages are rejected within the SMTP session.
False positives are not 0%. To ensure the integrity of email
delivery, not including message content and using a null bounce-
address should be the recommended practice at the initial recipient.
If you do not want to see DSNs with spoofed bounce-addresses, employ
BATV at _your_ end should be the recommended practice. You would not
need to insist that anything special be done at millions of other
locations.

-Doug

</POST>



<POST>
<POSTER> Edward B. Dreger </POSTER>
<POSTDATE> 2005-12-07T07:18:00 </POSTDATE>
Email: &quot;Edward B. Dreger&quot;&lt;eddy+public+s ... @noc.everquick.net&gt;


DO&gt; Date: Wed, 7 Dec 2005 14:15:00 -0800
DO&gt; From: Douglas Otis

DO&gt;&gt; Perhaps DSNs should be sent to the original recipient, not the purported
DO&gt;&gt; sender. RFC-compliant? No. Ridiculous? Less so than pestering a
DO&gt;&gt; random third party. Let the intended recipient communicate OOB or
DO&gt;&gt; manually if needed.
DO&gt;
DO&gt; Being refused by the intended recipient would be the cause for the DSN.

Fine. But where to send it? Certainly not to a random address.

DO&gt;&gt; DO&gt; furthermore a DSN could be desired even for cases where an
DO&gt;&gt; authorization
DO&gt;&gt;
DO&gt;&gt; When auth fails, one knows *right then* c/o an SMTP reject. No bounce
DO&gt;&gt; is necessary.
DO&gt;
DO&gt; This assumes all messages are rejected within the SMTP session.

Perhaps we're examining different &quot;authorization&quot; cases. Maybe my
mindset of &quot;SMTP auth&quot; is too narrow for your intended scope.

DO&gt;&gt; DO&gt; scheme fails. Why create corner cases?
DO&gt;&gt;
DO&gt;&gt; The corner case is that a virus _might_ actually have a realistic &quot;From&quot;
DO&gt;&gt; address. :-)
DO&gt;
DO&gt; You mean bounce-address? A From address often has nothing to do with where
DO&gt; a message originated.
DO&gt;
DO&gt; SPF has _nothing_ to do with the From address.

Errrr, &quot;return-path&quot;. Freudian slip dealing with some site local
experiments... &quot;from&quot; is not as accurate as &quot;return-path&quot;, but it's far
from (no pun intended) useless.

DO&gt; Once again, not _all_ messages are rejected within the SMTP session. False

Of course not.

DO&gt; positives are not 0%. To ensure the integrity of email delivery, not
DO&gt; including message content and using a null bounce-address should be the
DO&gt; recommended practice at the initial recipient. If you do not want to see
DO&gt; DSNs with spoofed bounce-addresses, employ BATV at _your_ end should be the
DO&gt; recommended practice. You would not need to insist that anything special be
DO&gt; done at millions of other locations.

Oh well. I guess I've pretty much given up on pre-body filtering... so
I suppose it would be too idyllic to expect anything different with
DSNs.

Hmmmm. BATV-triggered bounces. Virus triggers forged bounce which in
turn triggers &quot;your DSN was misguided&quot; bounce. Perhaps the bandwidth
growth of the '90s will continue. ;-)

Eddy
--
Everquick Internet -  http://www.everquick.net/
A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
Bandwidth, consulting, e-commerce, hosting, and network building
Phone: +1 785 865 5885 Lawrence and [inter]national
Phone: +1 316 794 8922 Wichita
________________________________________________________________________
DO NOT send mail to the following addresses:
dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
Sending mail to spambait addresses is a great way to get blocked.
Ditto for broken OOO autoresponders and foolish AV software backscatter.

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-07T08:14:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 7, 2005, at 4:06 PM, Edward B. Dreger wrote:

&gt; Hmmmm. BATV-triggered bounces. Virus triggers forged bounce which in
&gt; turn triggers &quot;your DSN was misguided&quot; bounce. Perhaps the bandwidth
&gt; growth of the '90s will continue. ;-)

"/> BATV should not trigger any bounce as this only changes the local-
part of the bounce-address (a.k.a return-path). BATV allows quick
rejection of the session when a spoof is detected before any message
is exchanged. This should alleviate your concerns about bandwidth.
It would also depreciate this tactic and further reduce related
traffic. Being sensitive about spoofed DSNs, one would expect to
hear accolades for BATV rather than berating.

-Doug

</POST>



<POST>
<POSTER> Edward B. Dreger </POSTER>
<POSTDATE> 2005-12-07T09:18:00 </POSTDATE>
Email: &quot;Edward B. Dreger&quot;&lt;eddy+public+s ... @noc.everquick.net&gt;


DO&gt; Date: Wed, 7 Dec 2005 17:02:51 -0800
DO&gt; From: Douglas Otis

DO&gt;&gt; Hmmmm. BATV-triggered bounces. Virus triggers forged bounce which in
DO&gt;&gt; turn triggers &quot;your DSN was misguided&quot; bounce. Perhaps the bandwidth
DO&gt;&gt; growth of the '90s will continue. ;-)
DO&gt;
DO&gt; BATV should not trigger any bounce as this only changes the local-part of
DO&gt; the bounce-address (a.k.a return-path). BATV allows quick rejection of the
DO&gt; session when a spoof is detected before any message is exchanged. This

I've read the spec.

DO&gt; should alleviate your concerns about bandwidth. It would also depreciate

I usually don't use humor-related smileys when I'm worried.

DO&gt; this tactic and further reduce related traffic. Being sensitive about
DO&gt; spoofed DSNs, one would expect to hear accolades for BATV rather than
DO&gt; berating.

Wouldn't it be nice to let people know their DSNs are misplaced? Or
does that only apply to viruses and worms? ;-)

So much for &quot;be conservative in what you send and liberal in what you
accept&quot;. Yes, BATV helps block the errant DSNs. It's just a shame that
we seem to be shifting responsibility to the recipient, treating the
symptom instead of the disease.

Eddy
--
Everquick Internet -  http://www.everquick.net/
A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
Bandwidth, consulting, e-commerce, hosting, and network building
Phone: +1 785 865 5885 Lawrence and [inter]national
Phone: +1 316 794 8922 Wichita
________________________________________________________________________
DO NOT send mail to the following addresses:
dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
Sending mail to spambait addresses is a great way to get blocked.
Ditto for broken OOO autoresponders and foolish AV software backscatter.

</POST>



<POST>
<POSTER> Michael.Dil ... @btradianz.com </POSTER>
<POSTDATE> 2005-12-08T05:18:00 </POSTDATE>
Email: Michael.Dil ... @btradianz.com


<QUOTE PREVIOUSPOST="
&gt; Some may see it as a
&gt; violation of RFC to not return a DSN on failed delivery.

"/> It seems reasonable to design a mail system so that
notifications are sent back to the originator of the
message when there is a problem somewhere along
the delivery chain.

<QUOTE PREVIOUSPOST="
&gt; Others, like myself
&gt; see the need to not return a failure notice on virus / trojan infected
email
&gt; as it has become the norm that the sender information is forged.

"/> It seems very UNreasonable to send notifications to
random destinations that have nothing to do with
originating the message in question.

The crux of the matter is that if you don't KNOW the
true source of the message, then you cannot return
a DSN. You can go through the motions, but then you
are originating SPAM (UBE), not returning DSNs.

Should you be accepting any mail at all from SMTP
servers that you do not know and trust because of
prior contact, i.e. negotiating an email peering agreement?

--Michael Dillon

</POST>



<POST>
<POSTER> Michael.Dil ... @btradianz.com </POSTER>
<POSTDATE> 2005-12-08T05:22:00 </POSTDATE>
Email: Michael.Dil ... @btradianz.com


<QUOTE PREVIOUSPOST="
&gt; Perhaps DSNs should be sent to the original recipient, not the purported
&gt; sender. RFC-compliant? No.

"/> The RFC process itself is broken when clueless vendors
treat RFCs as inviolable specs and implement according to
the RFC even when they find flaws in it. If they want to
remain true to the RFC process, they should not implement
dumb things found in an RFC, instead they should write and
submit a new RFC correcting the error and explaining the
right way to do things.

--Michael Dillon

</POST>



<POST>
<POSTER> Niels Bakker </POSTER>
<POSTDATE> 2005-12-08T06:16:00 </POSTDATE>
Email: Niels Bakker &lt;niels=na ... @bakker.net&gt;


* Michael.Dil ... @btradianz.com (Michael.Dil ... @btradianz.com) [Thu 08 Dec 2005, 12:11 CET]:

<QUOTE PREVIOUSPOST="
&gt;The RFC process itself is broken when clueless vendors treat RFCs as
&gt;inviolable specs and implement according to the RFC even when they find
&gt;flaws in it. If they want to remain true to the RFC process, they should
&gt;not implement dumb things found in an RFC, instead they should write and
&gt;submit a new RFC correcting the error and explaining the right way to do
&gt;things.

"/> Exactly. The nice thing about standards is that there are so many to
choose from! Why not add a few more?

-- Niels.

--
&quot;Calling religion a drug is an insult to drugs everywhere.
Religion is more like the placebo of the masses.&quot;
-- MeFi user boaz

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-08T01:20:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 8, 2005, at 2:18 AM, Michael.Dil ... @btradianz.com wrote:

&gt; It seems reasonable to design a mail system so that notifications
&gt; are sent back to the originator of the message when there is a
&gt; problem somewhere along the delivery chain.

"/> Agreed. The alternative would be more like instant messaging.

<QUOTE PREVIOUSPOST="
&gt; It seems very UNreasonable to send notifications to random
&gt; destinations that have nothing to do with originating the message
&gt; in question.

"/> It is also unreasonable to assume the return-path can always be
associated with the sending MTA.

<QUOTE PREVIOUSPOST="
&gt; The crux of the matter is that if you don't KNOW the true source of
&gt; the message, then you cannot return a DSN. You can go through the
&gt; motions, but then you are originating SPAM (UBE), not returning DSNs.

"/> When accepting messages from anonymous sources, seldom does one know
the source.

<QUOTE PREVIOUSPOST="
&gt; Should you be accepting any mail at all from SMTP servers that you
&gt; do not know and trust because of prior contact, i.e. negotiating an
&gt; email peering agreement?

"/> Making email a closed system would dramatically change who can send
messages and how email would work. The safest place to decide
whether a DSN is legitimate is by the MTA located by the return-
path. Use of BATV allows the return-path MTA to immediately refuse
DSNs determined to be illegitimate. Immediately, the back-scatter
problem would be substantially resolved and no RFC need to be
changed, and the integrity of email delivery would not suffer. This
would also close the &quot;back-door&quot; used to evade black-hole lists.

-Doug

</POST>



<POST>
<POSTER> Simon Waters </POSTER>
<POSTDATE> 2005-12-09T04:25:00 </POSTDATE>
Email: Simon Waters &lt;sim ... @zynet.net&gt;



<QUOTE PREVIOUSPOST="
On Thursday 08 Dec 2005 18:08, Douglas Otis wrote:

&gt; When accepting messages from anonymous sources, seldom does one know
&gt; the source.

"/> On the contrary, short of the tricks played on AOL to defeat their original
antispam system, TCP means you always know the source.

We manage to filter out ~98% of the unwanted email here with very nearly 100%
accuracy at the SMTP transaction stage with low processor overhead on our new
email servers. At which point any backscatter from what gets through is
trivial, although alas there still is a little due to evil practices of the
past in then forwarding email elsewhere.

But the point of this discussion is that SMTP will have to evolve to be a
point to point system (or functional equivalent). The days of store and
forward in intermediate MTAs should die as quickly as possible (which as our
forwarding demonstrates may be quite slowly alas). The problem is that many
of the antivirus gateways behave like new intermediate MTAs, especially when
for many of the organisations involved it could easily be done during SMTP
transactions.

The remaining issue is how much resource it costs to do your spam/malware
detection, but I believe trying to do anything beyond policy enforcement (&quot;no
EXE/PIF/SCR here please&quot;) in terms of malware detection in the MTA is a
mistake, especially when you only really need to protect the thick(!)
clients, and they still need to be protected when the content is
zipped/encrypted/novel/zipped+encrypted+novel etc.

This thread on the other hand should move to Spam-L.

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T10:35:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;


<QUOTE PREVIOUSPOST="
&gt; But the point of this discussion is that SMTP will have to evolve to be a
&gt; point to point system (or functional equivalent). The days of store and
&gt; forward in intermediate MTAs should die as quickly as possible (which as our
&gt; forwarding demonstrates may be quite slowly alas). The problem is that many
&gt; of the antivirus gateways behave like new intermediate MTAs, especially when
&gt; for many of the organisations involved it could easily be done during SMTP
&gt; transactions.

"/> While AV scanning may be done during the session, it would also require
additional steps to also contain _all_ upstream activity within the same
session as well, when attempting to achieve an apparent point-to-point
operation. If SMTP were point-to-point, this would be evolving into the
IM model where the message queue or storage would always be at the
sender. Such mode of operation will increase the average transaction
time needed for email.

As SMTP may pass messages through multiple administratively separate
MTAs where acceptance criteria may differ, unless all connections needed
to complete the transaction are active simultaneously, refusal at any
point will require use of a DSN or delivery integrity is lost.

A common exploit used by abusers is to find where acceptance criteria
differs between MTAs. Abusers depend upon this to generate DSNs that
act as a delivery vehicle of abusive messages masquerading as DSNs with
spoofed return-paths. While simulating point-to-point operation would
be one (expensive) approach at solving this problem, some have suggested
the use of SPF records to qualify the return-path before accepting the
message.

The qualified return-path approach has several problems. It may require
more than 100 sequential lookups to fully resolve a complete address
list, which is often open-ended. These address lists remain open-ended,
as there are many legitimate cases where this qualification still fails.
As of yesterday, there is no record in use with a scope specifically
defined to qualify the return-path.

BATV on the other hand solves the DSN exploit without waiting for anyone
else to adopt some practice. Although there is a small window where the
BATV return-path could be replayed, such illegal activity can be traced.
Neither Sender-ID nor DKIM will solve this serious exploit either.

While many AV products are a nuisance as they enable this DSN exploit
which actually spreads viruses (#$%&amp;*), solving this problem does not
require changing the nature of SMTP and dramatically affecting every
email system, or even hoping everyone qualifies the return-path prior to
acceptance. BATV is really a simple and effective solution that should
be put in place now.

-Doug

</POST>



<POST>
<POSTER> Geo. </POSTER>
<POSTDATE> 2005-12-09T10:57:00 </POSTDATE>
Email: &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;While AV scanning may be done during the session, it would also require

"/> additional steps to also contain _all_ upstream activity within the same
session as well, when attempting to achieve an apparent point-to-point
operation. If SMTP were point-to-point, this would be evolving into the
IM model where the message queue or storage would always be at the
sender. Such mode of operation will increase the average transaction
time needed for email.&lt;&lt;

You know, the problem we are trying to solve is virus notification blowback,
etc. So instead of changing the system why not work with it.

If everyone would just standardize on at least the first part of every virus
notification being the same thing, say:

XXX VIRUS NOTIFICATION: blah blah blah

where XXX is some error number, we could all easily control virus
notifications at the receiving end, allowing or blocking, as the recipients
choice. A simple standard message format and all the problems and complaints
go away.

George Roettger
Netlink Services

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-09T11:16:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; If everyone would just standardize on at least the first part of every virus
&gt; notification being the same thing, say:

&gt; XXX VIRUS NOTIFICATION: blah blah blah

&gt; where XXX is some error number, we could all easily control virus
&gt; notifications at the receiving end, allowing or blocking, as the recipients
&gt; choice.

"/> Have you not even read the rest of the prior thread?

It doesn't matter what the notifications look like. There is no reason that
my SMTP server should be subject to more than TEN THOUSAND of these damned
things every day, which I must receive all the way through the DATA phase in
order to block. That's the problem: just like other forms of UBE,
virus-worm warnings (to forged addresses) *do not scale*.

I don't care what kind of duck the UBE looks like. Content is irrelevant.
It still looks, walks, and quacks like a UBE duck.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Geo. </POSTER>
<POSTDATE> 2005-12-09T11:59:00 </POSTDATE>
Email: &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;It doesn't matter what the notifications look like. There is no reason

"/> that
my SMTP server should be subject to more than TEN THOUSAND of these damned
things every day, &lt;&lt;

I hear you but you and I both know AV companies are not going to give up the
automated spamming feature that easily. A standard message beginning they
might be willing to impliment in a relatively short time and AV software is
constantly updated so this could make a difference and happen relatively
quickly.

As for the quantity you receive, its nothing compared to the amount of spam
those infected machines are soon going to be generating.

George Roettger
Netlink Services

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T12:15:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;


<QUOTE PREVIOUSPOST="
&gt; On Fri, 9 Dec 2005, Geo. wrote:

&gt;&gt; If everyone would just standardize on at least the first part of every virus
&gt;&gt; notification being the same thing, say:

&gt;&gt; XXX VIRUS NOTIFICATION: blah blah blah

&gt;&gt; where XXX is some error number, we could all easily control virus
&gt;&gt; notifications at the receiving end, allowing or blocking, as the recipients
&gt;&gt; choice.

&gt; Have you not even read the rest of the prior thread?

&gt; It doesn't matter what the notifications look like. There is no reason that
&gt; my SMTP server should be subject to more than TEN THOUSAND of these damned
&gt; things every day, which I must receive all the way through the DATA phase in
&gt; order to block. That's the problem: just like other forms of UBE,
&gt; virus-worm warnings (to forged addresses) *do not scale*.

&gt; I don't care what kind of duck the UBE looks like. Content is irrelevant.
&gt; It still looks, walks, and quacks like a UBE duck.

"/> There is a solution you can implement now that gets rid of these tens of
thousands of virus and abuse laden DSNs you see every day before the
data phase. It could be seen as less than altruistic to bounce content
of suspected malware, so perhaps one should not expect standardization
of DSN content either. There are many languages to deal with as well.

With BATV, the slogan could be a quote from Socrates &quot;Know thyself.&quot;
With BATV, you should stop blaming others for _your_ inability to deal
with a DSN problem. Calling DSNs UBE is not a solution, although
traffic from AV applications seems to be approaching that definition.
If it has a null return-path, that is all you should need.

-Doug

</POST>



<POST>
<POSTER> Steven J. Sobol </POSTER>
<POSTDATE> 2005-12-09T12:17:00 </POSTDATE>
Email: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;


<QUOTE PREVIOUSPOST="
&gt; I hear you but you and I both know AV companies are not going to give up the
&gt; automated spamming feature that easily.

"/> Then maybe we should bring market pressure to bear on them. Personally, I
run Exim and ClamAV and don't have that problem. If they're going to spam
- and I'm sorry, we're not talking about DSNs here, we're talking about
obnoxious AV vendors telling us how great their product is - then either
we should try to convince people to stop using those vendors or at least
beat up on the vendors to fix their brokenness. Is anyone here a customer
of any of the vendors that play this game?

--
Steve Sobol, Professional Geek 888-480-4638 PGP: 0xE3AE35ED
Company website:  http://JustThe.net/
Personal blog, resume, portfolio:  http://SteveSobol.com/
E: sjso ... @JustThe.net Snail: 22674 Motnocab Road, Apple Valley, CA 92307

</POST>



<POST>
<POSTER> Steven J. Sobol </POSTER>
<POSTDATE> 2005-12-09T12:18:00 </POSTDATE>
Email: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;


<QUOTE PREVIOUSPOST="
&gt; There is a solution you can implement now that gets rid of these tens of
&gt; thousands of virus and abuse laden DSNs you see every day before the
&gt; data phase.

"/> Why should the burden/cost/hassle be placed on me to do this? In many
cases, it isn't even one of my users sending the stuff!

--
Steve Sobol, Professional Geek 888-480-4638 PGP: 0xE3AE35ED
Company website:  http://JustThe.net/
Personal blog, resume, portfolio:  http://SteveSobol.com/
E: sjso ... @JustThe.net Snail: 22674 Motnocab Road, Apple Valley, CA 92307

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-09T12:30:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; There is a solution you can implement now that gets rid of these tens of
&gt; thousands of virus and abuse laden DSNs you see every day before the
&gt; data phase.

"/> And it is *my* responsibility to reject UBE that shouldn't have been
generated in the first place, because...?

Blocking the UBE is not the solution; it is a bandage over a bleeding
artery. The solution is not to generate the UBE in the first place.

You'll note that, again, I am very explicitly not equating these to DSNs.
As I said before in N forms, I don't care what color of shirt the virus
&quot;warning&quot; wears; if sent to a forged address, it is UBE and deserved to be
treated as such.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-09T12:34:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; I hear you but you and I both know AV companies are not going to give up the
&gt; automated spamming feature that easily.

"/> I don't doubt that. Their generated UBE is often commercial in nature, too,
because they usually carry an advertising link along with the spew.

<QUOTE PREVIOUSPOST="
On Fri, 9 Dec 2005, Geo. wrote:
&gt; A standard message beginning they might be willing to impliment

"/> I have enough regex filters, thank you. I don't plan to encourage yet more
UBE by standardizing it -- think [YOU-]CAN-SPAM for antivirus apps. I
should not have to waste the bandwidth cost at DATA for yet more UBE.

<QUOTE PREVIOUSPOST="
&gt; As for the quantity you receive, its nothing compared to the amount of spam
&gt; those infected machines are soon going to be generating.

"/> Actually, I get about ten to twenty times as much virus blowback as I get
spam from trojan-zombie boxes.

That's because the virus blowback comes from otherwise &quot;reputable&quot; MTAs,
whereas the spam comes form zombies that are often already blacklisted, or
are in known dynamic pools that are blocked here. Thus the zombies get
blocked long before DATA, but the &quot;reputable&quot; MTAs sending the backscatter
don't get caught so early.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Steven J. Sobol </POSTER>
<POSTDATE> 2005-12-09T12:71:00 </POSTDATE>
Email: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;


<QUOTE PREVIOUSPOST="

&gt; On Fri, 9 Dec 2005, Douglas Otis wrote:

&gt;&gt; There is a solution you can implement now that gets rid of these tens of
&gt;&gt; thousands of virus and abuse laden DSNs you see every day before the
&gt;&gt; data phase.

&gt; And it is *my* responsibility to reject UBE that shouldn't have been
&gt; generated in the first place, because...?

"/> If I mentioned this yesterday, forgive me:

A MAPS employee should know better than to suggest that. However, Maps was
bought by Dave Rand and I believe Dave Rand sold out to Trend Micro. If
this is correct, then perhaps Doug Otis should bow out of this
conversation, seeing as how he works for one of the big AV vendors.

I'd like someone UNBIASED to take up his side of the discussion, please.
I'm really not inclined to listen to an AV employee explain why they
should be spamming us.

--
Steve Sobol, Professional Geek 888-480-4638 PGP: 0xE3AE35ED
Company website:  http://JustThe.net/
Personal blog, resume, portfolio:  http://SteveSobol.com/
E: sjso ... @JustThe.net Snail: 22674 Motnocab Road, Apple Valley, CA 92307

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T12:71:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 9, 2005, at 9:22 AM, Todd Vierling wrote:
&gt; Actually, I get about ten to twenty times as much virus blowback as
&gt; I get spam from trojan-zombie boxes.

&gt; That's because the virus blowback comes from otherwise &quot;reputable&quot;
&gt; MTAs, whereas the spam comes form zombies that are often already
&gt; blacklisted, or are in known dynamic pools that are blocked here.
&gt; Thus the zombies get blocked long before DATA, but the &quot;reputable&quot;
&gt; MTAs sending the backscatter don't get caught so early.

"/> I am having difficulty understanding why a one time investment in
Bounce-Address Tag Validation which can be in operation immediately
and offer 100% &quot;blowback&quot; protection from _all_ sources using trivial
resources is not being considered? The more who lock their back
door, the fewer times you will find miscreants checking to see that
it is locked.

-Doug

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T01:21:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 9, 2005, at 9:59 AM, Steven J. Sobol wrote:
&gt; On Fri, 9 Dec 2005, Todd Vierling wrote:

&gt; I'd like someone UNBIASED to take up his side of the discussion,
&gt; please. I'm really not inclined to listen to an AV employee explain
&gt; why they should be spamming us.

"/> I am not aware of any of our products that exhibits the behavior
touted as offensive. Nevertheless, there is a solution that does not
require any services or products from yet another vender. This is a
DSN exploit problem that has a BATV solution, independent of third-
party behavior. : )

-Doug

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-09T01:27:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; Actually, I get about ten to twenty times as much virus blowback as I get
&gt;&gt; spam from trojan-zombie boxes.
&gt; I am having difficulty understanding why a one time investment in
&gt; Bounce-Address Tag Validation which can be in operation immediately and offer
&gt; 100% &quot;blowback&quot; protection from _all_ sources using trivial resources is not
&gt; being considered?

"/> I may be considering it. I may be implementing it right now. I may have
already implemented it. Who's to know?

It doesn't matter, because the use of recipient-side filtering or rejection
of blowback is irrelevant to my point.

<QUOTE PREVIOUSPOST="
On Fri, 9 Dec 2005, Douglas Otis wrote:
&gt; The more who lock their back door, the fewer times you will
&gt; find miscreants checking to see that it is locked.

"/> That doesn't mean that I should have thousands of people coming up to my
back door 24 hours a day, nor should I have to watch my back door to shoo
them away all day long. (Read: &quot;That analogy doesn't fly.&quot;)

I can police my network in any way I choose. I can have dozens of locks on
my virtual doors -- and I do. That still doesn't take away culpability from
the UBE sender, and thus has no relevance to the discussion at hand.

Let me state this again in exactly two sentences so that you may understand
my point, provided there is enough thin skull available for it to penetrate:

1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.
2. It is the responsibility of the *SENDER* not to send UBE.

If this is still not clear, you're working in the wrong industry.

===

<QUOTE PREVIOUSPOST="
&gt; I'd like someone UNBIASED to take up his side of the discussion, please.
&gt; I'm really not inclined to listen to an AV employee explain why they
&gt; should be spamming us.

"/>&quot;What he said.&quot;

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T01:38:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;
To: &lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 9:57 AM
Subject: RE: SMTP store and forward requires DSN for integrity (was

Re:Clueless anti-virus )

&gt;&gt;&gt;While AV scanning may be done during the session, it would also require
&gt; additional steps to also contain _all_ upstream activity within the same
&gt; session as well, when attempting to achieve an apparent point-to-point
&gt; operation. If SMTP were point-to-point, this would be evolving into the
&gt; IM model where the message queue or storage would always be at the
&gt; sender. Such mode of operation will increase the average transaction
&gt; time needed for email.&lt;&lt;

&gt; You know, the problem we are trying to solve is virus notification
&gt; blowback,
&gt; etc. So instead of changing the system why not work with it.

&gt; If everyone would just standardize on at least the first part of every
&gt; virus
&gt; notification being the same thing, say:

&gt; XXX VIRUS NOTIFICATION: blah blah blah

&gt; where XXX is some error number, we could all easily control virus
&gt; notifications at the receiving end, allowing or blocking, as the
&gt; recipients
&gt; choice. A simple standard message format and all the problems and
&gt; complaints
&gt; go away.

&gt; George Roettger
&gt; Netlink Services

Standardizing the DSN is an exercise in futility. Mainly because it still
requires the message to pass through your outbound pipe and into my inbound
pipe, hit my server port where my server starts processing that traffic.
What has been accomplished here? Providing me a mechanism to block the
notification if it's for a virus? For systems that are sending out
notifications with forged addresses, this becomes UBE and provisions are
already in place in the mta via access or in worst cases, the border
firewall or even the border router for dealing with the originating network
itself.

If a system is incapable of determining the validity of the sender address,
then that address should not be getting a DSN from any system regarding a
virus, trojan or other malware. One can say, well *this* system is going
into place or *that* system is in place at these locations, but it's simply
not good enough. It's not standardized. There is currently no 100% tried and
true method of dealing with this that is *standard* through out the net. So,
the next best thing is to simply not send the DSN for viri / trojan
infection at all.

What was the quote from Wargames? Oh yes, &quot;The only winning move is not to
play&quot;.

Mike P.

"/>
</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T01:41:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;
To: &lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 10:59 AM
Subject: RE: SMTP store and forward requires DSN for integrity (was

Re:Clueless anti-virus )

&gt;&gt;&gt;It doesn't matter what the notifications look like. There is no reason
&gt; that
&gt; my SMTP server should be subject to more than TEN THOUSAND of these damned
&gt; things every day, &lt;&lt;

&gt; I hear you but you and I both know AV companies are not going to give up
&gt; the
&gt; automated spamming feature that easily. A standard message beginning they
&gt; might be willing to impliment in a relatively short time and AV software
&gt; is
&gt; constantly updated so this could make a difference and happen relatively
&gt; quickly.

&gt; As for the quantity you receive, its nothing compared to the amount of
&gt; spam
&gt; those infected machines are soon going to be generating.

&gt; George Roettger
&gt; Netlink Services

They may not a choice if those that are being hammered with their
auto-generated DSN's deem it unusually high traffic rate and simply black
list the domains using these devices. AOL.com comes to mind and a few others
in the recent weeks that are hammering me with notifications that weren't
sent by anyone within my network.

That's the problem that I'm looking at George, the amount of traffic that
those systems will be generating in the future. Including the bogus DSN's
that are a direct result of that initial burst traffic.

Mike P.

"/>
</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T02:33:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;
To: &quot;Todd Vierling&quot;&lt;t ... @duh.org&gt;

Cc: &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;; &lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 11:03 AM
Subject: RE: SMTP store and forward requires DSN for integrity
(wasRe:Clueless anti-virus )

&gt; On Fri, 2005-12-09 at 11:16 -0500, Todd Vierling wrote:
&gt;&gt; On Fri, 9 Dec 2005, Geo. wrote:

&gt;&gt;&gt; If everyone would just standardize on at least the first part of every
&gt;&gt;&gt; virus
&gt;&gt;&gt; notification being the same thing, say:

&gt;&gt;&gt; XXX VIRUS NOTIFICATION: blah blah blah

&gt;&gt;&gt; where XXX is some error number, we could all easily control virus
&gt;&gt;&gt; notifications at the receiving end, allowing or blocking, as the
&gt;&gt;&gt; recipients
&gt;&gt;&gt; choice.

&gt;&gt; Have you not even read the rest of the prior thread?

&gt;&gt; It doesn't matter what the notifications look like. There is no reason
&gt;&gt; that
&gt;&gt; my SMTP server should be subject to more than TEN THOUSAND of these
&gt;&gt; damned
&gt;&gt; things every day, which I must receive all the way through the DATA phase
&gt;&gt; in
&gt;&gt; order to block. That's the problem: just like other forms of UBE,
&gt;&gt; virus-worm warnings (to forged addresses) *do not scale*.

&gt;&gt; I don't care what kind of duck the UBE looks like. Content is
&gt;&gt; irrelevant.
&gt;&gt; It still looks, walks, and quacks like a UBE duck.

&gt; There is a solution you can implement now that gets rid of these tens of
&gt; thousands of virus and abuse laden DSNs you see every day before the
&gt; data phase. It could be seen as less than altruistic to bounce content
&gt; of suspected malware, so perhaps one should not expect standardization
&gt; of DSN content either. There are many languages to deal with as well.

It's only a solution if it's available for all accepted MTA's that currently
exist. According to MIPA, the only currently available BATV &quot;equipped&quot;
mta's are Exim and NetQmail. I'll admit that I'm not up to par on the BATV
project but damn, if you can't find information on it through a google
search, or you find very limited information on it, then how can you say
that it's ready for implementation now? Also, regardless of it's status, why
should I have to redo my entire mail system to deploy BATV because others
can't play nice on the net?

&gt; With BATV, the slogan could be a quote from Socrates &quot;Know thyself.&quot;
&gt; With BATV, you should stop blaming others for _your_ inability to deal
&gt; with a DSN problem. Calling DSNs UBE is not a solution, although
&gt; traffic from AV applications seems to be approaching that definition.
&gt; If it has a null return-path, that is all you should need.

&gt; -Doug

When DSN's become autogenerated by systems that are not MTA's then those
messages should no longer be considered DSNs should they.

My &quot;inability&quot; to deal with a DSN problem? Please allow me to assure you
that I have various methods of dealing with bogus DSN's within my network
infrastructure. Regardless of that, why should I have to accept traffic not
destined for my network? That is, afterall, what is happening when a DSN is
sent to a forged originating address is it not? Truth of the matter is that
I don't have to accept it at all. Your belief that I have the inability to
deal with the problem is a misconception on your part. One has various
methods in place already to deal with the problem at a very basic level. One
can merely filter traffic at their upstream provider, place restrictions on
their local MTA, firewall appliance or router. Those of us that see that
DSN's are becoming UBE are trying to get the issue resolved before it comes
to that. It will either happen or filters will go live. It's just that
simple.

Mike P.

"/>
</POST>



<POST>
<POSTER> Matt Ghali </POSTER>
<POSTDATE> 2005-12-09T02:61:00 </POSTDATE>
Email: Matt Ghali &lt;m ... @snark.net&gt;


<QUOTE PREVIOUSPOST="

"/>  They may not a choice if those that are being hammered with their
auto-generated DSN's deem it unusually high traffic rate and
simply black list the domains using these devices. AOL.com comes
to mind and a few others in the recent weeks that are hammering me
with notifications that weren't sent by anyone within my network.

I especially appreciate the ones from Yahoo!, who apparently do not
bother checking domainkeys at all before generating bounces. gg.

matto

--m ... @snark.net------------------------------------------&lt;darwin&gt;&lt;
The only thing necessary for the triumph
of evil is for good men to do nothing. - Edmund Burke

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T02:70:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 9, 2005, at 10:15 AM, Todd Vierling wrote:

&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

"/> This definition would be making at least two of the following
assumptions:

1) Malware detection has a 0% false positive.
2) Lack of DSN for email falsely detected containing malware is okay.
3) Purported malware should be assumed to use a forged return-path.
4) The return-path can be validated prior to accepting a message.
5) SMTP should appear to be point-to-point.
6) MTAs with AV filters are the only problem.

While there could be best practices created for AV filtering, it
seems unlikely to be effective. Simplistic filters for DSNs also
seem counter to ensuring the integrity of email delivery. Defending
against DSN exploits with BATV will remove this vector, which in turn
will end DSN exploits attempts over the long term. Why expect others
to fix this problem, when there is a solution that one could make the
investment in to deploy. This will reduce this problem over the long
term. The BATV alternative would not cause otherwise valuable DSNs
to be lost, nor make assumptions about the quality of malware detection.

If you can't trust AV handling of DSNs, why trust their detections?

Would you rather see emails simply disappear?

<QUOTE PREVIOUSPOST="
&gt; 2. It is the responsibility of the *SENDER* not to send UBE.

"/> When the recipient is a legitimate email provider, it could seriously
lower the integrity of email delivery for these providers to toss
DSNs because many fall into a category you want to define as UBE.
While I agree whole heartily this malware notification problem
stinks, there is a much safer and surer solution.

-Doug

</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T03:13:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Matt Ghali&quot;&lt;m ... @snark.net&gt;
To: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;

Cc: &lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 1:49 PM
Subject: Re: SMTP store and forward requires DSN for integrity (was
Re:Clueless anti-virus )

&gt; On Fri, 9 Dec 2005, Micheal Patterson wrote:

&gt; They may not a choice if those that are being hammered with their
&gt; auto-generated DSN's deem it unusually high traffic rate and
&gt; simply black list the domains using these devices. AOL.com comes
&gt; to mind and a few others in the recent weeks that are hammering me
&gt; with notifications that weren't sent by anyone within my network.

&gt; I especially appreciate the ones from Yahoo!, who apparently do not
&gt; bother checking domainkeys at all before generating bounces. gg.

&gt; matto

&gt; --m ... @snark.net------------------------------------------&lt;darwin&gt;&lt;

I like the ones from aol.com that also include all of the other addresses
that the initial hit was sent to within their domain. Some of them are
upwards of 10 pages of nothing but email addresses.

Mike P.

"/>
</POST>



<POST>
<POSTER> Joe Maimon </POSTER>
<POSTDATE> 2005-12-09T03:36:00 </POSTDATE>
Email: Joe Maimon &lt;jmai ... @ttec.com&gt;


<QUOTE PREVIOUSPOST="
Douglas Otis wrote:

&gt; On Dec 9, 2005, at 10:15 AM, Todd Vierling wrote:

&gt;&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

&gt; This definition would be making at least two of the following assumptions:

&gt; 1) Malware detection has a 0% false positive.

"/> Near enough so that reject at SMTP data phase will cover all legitimate
cases that may exist.

<QUOTE PREVIOUSPOST="
&gt; 2) Lack of DSN for email falsely detected containing malware is okay.

"/> 1 dropped email is NOT worth thousands of to-forged addresses DSN's

The admins that care will design their systems to reject by smtp DATA pohase

<QUOTE PREVIOUSPOST="
&gt; 3) Purported malware should be assumed to use a forged return-path.

"/> Yup, thats true of everything in the wild today.

<QUOTE PREVIOUSPOST="
&gt; 4) The return-path can be validated prior to accepting a message.

"/> Exactly, only then is DSN's acceptable to otherwise near guaranteed
incorrect destinations.

<QUOTE PREVIOUSPOST="
&gt; 5) SMTP should appear to be point-to-point.

"/> Obeying the SMTP standard should not generate crap unneedlessly.

That means reject virus at data phase, discard them afterwards since the
DSN violated the much more important rule not spewing crap at innocent
3rd parties.

<QUOTE PREVIOUSPOST="
&gt; 6) MTAs with AV filters are the only problem.

"/> To generalize it:

Systems which generate DSN's to known incorrect destinations are the
EXACT problem discussed here. Currently that fits all &quot;scan after
receipt of messafe&quot; av systems that send DSN's

<QUOTE PREVIOUSPOST="

&gt; While there could be best practices created for AV filtering, it seems
&gt; unlikely to be effective. Simplistic filters for DSNs also seem
&gt; counter to ensuring the integrity of email delivery. Defending against
&gt; DSN exploits with BATV will remove this vector, which in turn will end
&gt; DSN exploits attempts over the long term. Why expect others to fix
&gt; this problem, when there is a solution that one could make the
&gt; investment in to deploy. This will reduce this problem over the long
&gt; term. The BATV alternative would not cause otherwise valuable DSNs to
&gt; be lost, nor make assumptions about the quality of malware detection.

"/> I havent been keeping on top of the sender/return path verification scene.

But blacklisting abusive systems to create pressure on admins to turn
the spewage off is the current time honored mechanism.

<QUOTE PREVIOUSPOST="

&gt; If you can't trust AV handling of DSNs, why trust their detections?

"/> One is fairly easy to measure. The other SHOULD be fairly easy to turn off.

<QUOTE PREVIOUSPOST="

&gt; Would you rather see emails simply disappear?

"/> I would rather my MTA return the DSN it generates when it receives your
MTA's smtp rejection to the data command contents.

<QUOTE PREVIOUSPOST="

&gt;&gt; 2. It is the responsibility of the *SENDER* not to send UBE.

&gt; When the recipient is a legitimate email provider, it could seriously
&gt; lower the integrity of email delivery for these providers to toss DSNs
&gt; because many fall into a category you want to define as UBE. While I
&gt; agree whole heartily this malware notification problem stinks, there is
&gt; a much safer and surer solution.

"/> Blocklisting them should even things out eventually.

<QUOTE PREVIOUSPOST="

&gt; -Doug

"/>
</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-09T04:24:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

&gt; This definition would be making at least two of the following assumptions:

&gt; 1) Malware detection has a 0% false positive.
&gt; 2) Lack of DSN for email falsely detected containing malware is okay.
&gt; 3) Purported malware should be assumed to use a forged return-path.
&gt; 4) The return-path can be validated prior to accepting a message.

"/> None of these are my problem. I am a non-involved third party to the
malware detection software, so I should not be a party to its outgoing spew.

I have not requested the virus &quot;warnings&quot; (unsolicited), they are being sent
via an automated trigger (bulk, by extension of the viruses also being
bulk), and they are e-mail -- UBE by definition. Whether they are also
formatted as DSNs or delivered like DSNs doesn't take away their UBE status.

If you want to notify someone about a filtered malware instance, notify the
intended *recipient*, and provide that user with the email address of the
alleged sender. If it's a false positive, the intended recipient of the
filtered mail can contact the other party to fix the situation.

Oh, but I know the response already: &quot;But our users don't want to see those
notices, they're not much better than the viruses getting through, all that
spam to delete.&quot; And an otherwise non-involved third party should be
burdened with this crap because...? (Do you know what &quot;cost shifting&quot;
means, and why it's considered bad, and why it is illegal in some forms?)

The more important part is that the afflicted products usually DO know the
forgery status of the malware it is detecting -- so there should be nearly
no question as to when &quot;warnings&quot; would be UBE. That notwithstanding, the
probability of a forgery case is better than 99%, so the assuption for
anti-malware products should now be &quot;forged unless proven otherwise&quot;.
Hell, I'd give that forgery probability a Five Nines these days.

<QUOTE PREVIOUSPOST="
On Fri, 9 Dec 2005, Douglas Otis wrote:
&gt; 5) SMTP should appear to be point-to-point.

"/> There are ways to limit the scope of this problem as it applies to
non-virus-warning bounces, without going to direct point to point delivery.
There are schemes by which a 5xx reject can propagate up a delivery path
without requiring a bounce to be generated. *This* is the direction SMTP
should be headed, and it need not be forcibly point to point.

This too is irrelevant when considering the Five Nines probability above.

<QUOTE PREVIOUSPOST="
&gt; 6) MTAs with AV filters are the only problem.

"/> Not the only problem, but they are currently taking up the vast majority of
the problem space of blowback UBE instances. They aren't always constant,
but when a worm surge starts, the blowback floods.

<QUOTE PREVIOUSPOST="
&gt; Defending against DSN exploits with BATV will remove this vector, which in
&gt; turn will end DSN exploits attempts over the long term.

"/> Besides this being another rewording of the classic &quot;victim must fend for
him/herself&quot; mantra, and a complete misrepresentation of the problem of
scale in implementing BATV the way you describe, you're calling these &quot;DSN
exploits&quot; -- not &quot;DSNs&quot; -- here. Maybe the clue is finally sinking in?

Naaaah:

<QUOTE PREVIOUSPOST="
&gt; If you can't trust AV handling of DSNs, why trust their detections?

"/> You can claim that these virus &quot;warnings&quot; are DSNs all you want. Just like
politicians' talking points, just saying it a lot doesn't automatically make
it true. Prove it, to wit:

Since I never sent the original virus-worms that triggered the UBE in
question, exactly how is one of these virus &quot;warnings&quot; is a *valid* DSN, and
not UBE...? (Here's a hint for the boys and girls at home: DSNs are
supposed to go to the real, original sender.)

If the general case for e-mail borne viruses weere non-forged senders, I
could buy the DSN argument. But that's not the general case at all.

<QUOTE PREVIOUSPOST="
&gt; While I agree whole heartily this malware notification problem stinks,
&gt; there is a much safer and surer solution.

"/> Yes, there is: Notify the intended recipient of the virus, not the (almost
surely forged) sender. Don't cost shift the burden onto third parties, and
don't try to rebrand spew that *never* hits the real original sender as some
kind of &quot;DSN&quot;.

&quot;Paging a T. Roll to the white courtesy clue-phone....&quot;

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T04:47:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;
To: &quot;Todd Vierling&quot;&lt;t ... @duh.org&gt;

Cc: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;; &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;;
&lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 1:58 PM
Subject: Re: SMTP store and forward requires DSN for integrity (was
Re:Clueless anti-virus )

&gt; On Dec 9, 2005, at 10:15 AM, Todd Vierling wrote:

&gt;&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

&gt; This definition would be making at least two of the following
&gt; assumptions:

&gt; 1) Malware detection has a 0% false positive.
&gt; 2) Lack of DSN for email falsely detected containing malware is okay.
&gt; 3) Purported malware should be assumed to use a forged return-path.
&gt; 4) The return-path can be validated prior to accepting a message.
&gt; 5) SMTP should appear to be point-to-point.
&gt; 6) MTAs with AV filters are the only problem.

&gt; While there could be best practices created for AV filtering, it seems
&gt; unlikely to be effective. Simplistic filters for DSNs also seem counter
&gt; to ensuring the integrity of email delivery. Defending against DSN
&gt; exploits with BATV will remove this vector, which in turn will end DSN
&gt; exploits attempts over the long term. Why expect others to fix this
&gt; problem, when there is a solution that one could make the investment in
&gt; to deploy. This will reduce this problem over the long term. The BATV
&gt; alternative would not cause otherwise valuable DSNs to be lost, nor make
&gt; assumptions about the quality of malware detection.

&gt; If you can't trust AV handling of DSNs, why trust their detections?

&gt; Would you rather see emails simply disappear?

I would rather see the problem stop at the source instead of the current
issue being used as a crutch to attempt to get people to go to BATV or
Mass-Rep (as described in your draft). There's an old military comm saying
that fits perfectly here. &quot;Clean House&quot;. For those of you ex comm folks,
you'll probably recognize it. For those of you who don't, it simply means,
fix your stuff before you point blame at the distant end for the problem.

&gt;&gt; 2. It is the responsibility of the *SENDER* not to send UBE.

&gt; When the recipient is a legitimate email provider, it could seriously
&gt; lower the integrity of email delivery for these providers to toss DSNs
&gt; because many fall into a category you want to define as UBE. While I
&gt; agree whole heartily this malware notification problem stinks, there is a
&gt; much safer and surer solution.

&gt; -Doug

Do you not comprehend what's really being said here Doug? Yes, blocking /
rejecting of a DSN is a BAD thing and should never be done. Rejecting of a
notification of malware != the same thing. If the reciever of &quot;your&quot; DSN
didn't sent the message, then it's no longer a DSN.. It's now officially, by
definition, UBE from YOU to the incorrect originator now isn't it. This is
the case in the majority of malware notifications by anyone / anything that
generates them. More than likely, the viri / trojan writer is &quot;depending&quot; on
them to help propogate their ilk because they too can be network admins and
are aware that DSN's don't get tossed. What better method to get them out to
the masses but to have our main feeds, and huge pipes help them along? I
mean, really, who's better to help them? Mom and dat with the 56k dialup or
us with the DS3's - OC12's to help them along? Look at the big picture Doug
instead of 45 degrees to the left and right. You hate spam, I hate spam, I
don't send DSN's to senders because I know that roughly 90% of them are
bogus. You feel that's bad. You have the right to disagree. I have the
right to deny traffic that is in response to traffic that didn't originate
from my network(s) regardless of your belief.

Mike P.

"/>
</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T05:13:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;
To: &quot;Todd Vierling&quot;&lt;t ... @duh.org&gt;

Cc: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;; &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;;
&lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 1:58 PM
Subject: Re: SMTP store and forward requires DSN for integrity (was
Re:Clueless anti-virus )

&gt; On Dec 9, 2005, at 10:15 AM, Todd Vierling wrote:

&gt;&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

&gt; This definition would be making at least two of the following
&gt; assumptions:

&gt; 1) Malware detection has a 0% false positive.
&gt; 2) Lack of DSN for email falsely detected containing malware is okay.
&gt; 3) Purported malware should be assumed to use a forged return-path.
&gt; 4) The return-path can be validated prior to accepting a message.
&gt; 5) SMTP should appear to be point-to-point.
&gt; 6) MTAs with AV filters are the only problem.

Case in point Doug.. Current versions of Sober.U are sending mail from:
? ... @c-24-19-xx-xx.hsd1.wa.comcast.net (xx's to hide the actual host).
I have a slew of these in my detected malware folder. I suppose that you'd
prefer, by your reasoning, that I be sending DSN's to these addresses,
knowing full well that it won't make it and just clutter up comcast's smtp
gateway with DSN's. I'm sure that they'd like that very much.

Mike P.

"/>
</POST>



<POST>
<POSTER> JC Dill </POSTER>
<POSTDATE> 2005-12-09T05:16:00 </POSTDATE>
Email: JC Dill &lt;list ... @equinephotoart.com&gt;


Leaving aside from the question of if virus-infected DSNs are UBE and
thus &quot;spam&quot; or not...

<QUOTE PREVIOUSPOST="
Todd Vierling wrote:
&gt; If you want to notify someone about a filtered malware instance, notify the
&gt; intended *recipient*, and provide that user with the email address of the
&gt; alleged sender. If it's a false positive, the intended recipient of the
&gt; filtered mail can contact the other party to fix the situation.

&gt; Oh, but I know the response already: &quot;But our users don't want to see those
&gt; notices, they're not much better than the viruses getting through, all that
&gt; spam to delete.&quot; And an otherwise non-involved third party should be
&gt; burdened with this crap because...?

"/> this is the crux of the matter. When your filtering system determines
that the message contains a virus, the filter KNOWS (or should know, and
with a high degree of certainty) the message is unwanted and the
&quot;sender&quot; is forged.

Your recipient/customer doesn't want to see the message OR the DSN. So
why send either on to someone else?!

It is a reprehensible practice to send the notice off to the &quot;sender&quot; by
claiming that an RFC says this is what you should do with a generic DSN.
It is NOT a good practice, it IS network abuse. It is reprehensible
to knowingly or &quot;innocently&quot; design software to do this, or to use
software that does this by default unless you make very certain that you
have disabled this &quot;feature&quot; and that it STAYS disabled whenever you
upgrade or otherwise change the software configuration.

All of this is crystal clear without needlessly arguing or trying to
determine if DSNs of virus infected email are &quot;spam&quot; or not. It was
sent to your recipient/customer and if they don't want it then treat it
the same way you treat all other email they don't want (spam filtering).

jc

</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-09T05:66:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;
To: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;; &quot;Todd Vierling&quot;&lt;t ... @duh.org&gt;

Cc: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;; &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;;
&lt;n ... @merit.edu&gt;
Sent: Friday, December 09, 2005 4:01 PM
Subject: Re: SMTP store and forward requires DSN for integrity (was
Re:Clueless anti-virus )

&gt; ----- Original Message -----
&gt; From: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;
&gt; To: &quot;Todd Vierling&quot;&lt;t ... @duh.org&gt;
&gt; Cc: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;; &quot;Geo.&quot;
&gt;&lt;geoincide ... @nls.net&gt;; &lt;n ... @merit.edu&gt;
&gt; Sent: Friday, December 09, 2005 1:58 PM
&gt; Subject: Re: SMTP store and forward requires DSN for integrity (was
&gt; Re:Clueless anti-virus )

&gt;&gt; On Dec 9, 2005, at 10:15 AM, Todd Vierling wrote:

&gt;&gt;&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

&gt;&gt; This definition would be making at least two of the following
&gt;&gt; assumptions:

&gt;&gt; 1) Malware detection has a 0% false positive.
&gt;&gt; 2) Lack of DSN for email falsely detected containing malware is okay.
&gt;&gt; 3) Purported malware should be assumed to use a forged return-path.
&gt;&gt; 4) The return-path can be validated prior to accepting a message.
&gt;&gt; 5) SMTP should appear to be point-to-point.
&gt;&gt; 6) MTAs with AV filters are the only problem.

&gt; Case in point Doug.. Current versions of Sober.U are sending mail from:
&gt; ? ... @c-24-19-xx-xx.hsd1.wa.comcast.net (xx's to hide the actual host).
&gt; I have a slew of these in my detected malware folder. I suppose that you'd
&gt; prefer, by your reasoning, that I be sending DSN's to these addresses,
&gt; knowing full well that it won't make it and just clutter up comcast's smtp
&gt; gateway with DSN's. I'm sure that they'd like that very much.

&gt; Mike P.

And before anyone points out that the mx for comcast would not see that
message, I know that on this particular host, they would not. I also realize
the the DSN would sit in my outbound queue until it was purged after 5 days
due to non-delivery. The point remains the same for this example as if it
were addresses from hostmast ... @comcast.net or ? ... @comcast.net. The originator
is forged and the DSN is unable to get to the originating sender.

Mike P.

"/>
</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T06:20:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 9, 2005, at 1:12 PM, Todd Vierling wrote:

&gt; None of these are my problem. I am a non-involved third party to
&gt; the malware detection software, so I should not be a party to its
&gt; outgoing spew.

&gt; I have not requested the virus &quot;warnings&quot; (unsolicited), they are
&gt; being sent via an automated trigger (bulk, by extension of the
&gt; viruses also being bulk), and they are e-mail -- UBE by
&gt; definition. Whether they are also formatted as DSNs or delivered
&gt; like DSNs doesn't take away their UBE status.

"/> This is a third-party acting in good faith, albeit performing a check
better done within the session. In your view, there is less concern
about delivery integrity, and so related DSNs should be tossed.
Being done within the session would be ideal, of course. When their
architecture does not support this approach, you want them to toss
the DSNs, because you _think_ the number of otherwise valid DSNs to
be inconsequential (whether or not malware is actually detected).

Where do you draw the line, as AV filtering is not the only source of
a spoofed DSN problem?

How would the third-party acting in good faith know who really sent
the message?

<QUOTE PREVIOUSPOST="
&gt; (Do you know what &quot;cost shifting&quot; means, and why it's considered
&gt; bad, and why it is illegal in some forms?)

"/> In this case however, it is in keeping with a general expectation
that a DSNs will be sent when a message can not be delivered. If
this party wanted to save costs, they would toss the DSN.

How can this entity know whether the DSN is going to the correct party?

How can this be called cost shifting?

<QUOTE PREVIOUSPOST="
&gt;&gt; Defending against DSN exploits with BATV will remove this vector,
&gt;&gt; which in turn will end DSN exploits attempts over the long term.

&gt; Besides this being another rewording of the classic &quot;victim must
&gt; fend for him/herself&quot; mantra, and a complete misrepresentation of
&gt; the problem of scale in implementing BATV the way you describe,
&gt; you're calling these &quot;DSN exploits&quot; -- not &quot;DSNs&quot; -- here.

"/> This is a remarkable argument. DSNs with spoofed return-paths will
not go away even after getting all the AV filters performed within
the session sometime in the few years. In fact, in session filtering
will likely increase costs related to email by making all exchanges
take longer to complete. BATV can refuse invalid DSNs before the
data phase, after expending a few microseconds to make and check
tags. The cost savings provided by a BATV approach can be rather
large which will only increase the scalability of email.

-Doug

</POST>



<POST>
<POSTER> Steven J. Sobol </POSTER>
<POSTDATE> 2005-12-09T06:55:00 </POSTDATE>
Email: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;


<QUOTE PREVIOUSPOST="
&gt; [AV notifications are] a third-party acting in good faith

"/> Perhaps in your world. Definitely not in mine.

--
Steve Sobol, Professional Geek 888-480-4638 PGP: 0xE3AE35ED
Company website:  http://JustThe.net/
Personal blog, resume, portfolio:  http://SteveSobol.com/
E: sjso ... @JustThe.net Snail: 22674 Motnocab Road, Apple Valley, CA 92307

</POST>



<POST>
<POSTER> Robert Bonomi </POSTER>
<POSTDATE> 2005-12-09T07:21:00 </POSTDATE>
Email: Robert Bonomi &lt;bon ... @mail.r-bonomi.com&gt;


<QUOTE PREVIOUSPOST="
&gt; From owner-na ... @merit.edu Fri Dec 9 13:59:30 2005
&gt; n ... @merit.edu
&gt; From: Douglas Otis &lt;d ... @mail-abuse.org&gt;
&gt; Subject: Re: SMTP store and forward requires DSN for integrity (was Re:Clueless anti-virus )
&gt; Date: Fri, 9 Dec 2005 11:58:15 -0800
&gt; To: Todd Vierling &lt;t ... @duh.org&gt;

&gt; On Dec 9, 2005, at 10:15 AM, Todd Vierling wrote:

&gt;&gt; 1. Virus &quot;warnings&quot; to forged addresses are UBE, by definition.

&gt; This definition would be making at least two of the following
&gt; assumptions:

"/> FALSE TO FACT. Notice the qualifier &quot;forged&quot;, regarding the address to
which the notification is being sent.

<QUOTE PREVIOUSPOST="

&gt; 1) Malware detection has a 0% false positive.

"/> If there is a 'false positive' decting malware, it is a near certainty
that the &quot;legitimage&quot; message so classified does *NOT* have a FORGED ADDRESS.

In addition, _IF_ a false positive occurs, the *sender* can do nothing about
the situation -- resending the message, for example, will *NOT* have any
better chance of getting through. The _right_ person to notify in such a
situation is the RECIPIENT. They have a chance of 'influencing' the people
who set the policies (that resulted in that false postive) in regard to
getting the policy _changed_.

Thus, this is an invalid straw-man argument. One down.

<QUOTE PREVIOUSPOST="
&gt; 2) Lack of DSN for email falsely detected containing malware is okay.

"/> *IF* the sender address _is_ forged (a _necessary_ pre-condition for Todd's
statement to be applicable, then the fact remains that that 'false positive'
indication is going to someone who DID NOT REQUEST such notification, either
explicitly (by signing up for it), nor implicitly (by actually _sending_ the
message in question).

Thus, this is an invalid straw-man argument. Two down.

<QUOTE PREVIOUSPOST="
&gt; 3) Purported malware should be assumed to use a forged return-path.

"/> I can't imagine why anyone could *possibly* think that that might be the case!
&lt;/sarcasm&gt;

Note: It does happen to be an assumption that does turn out to &quot;coincide with
the actual facts of the situation&quot; in a _very_large_ share of the cases.

In the last three years of rejecting (SMTP transaction-time) _anything_ that
contained anything that 'looked like' either an MS-executable format
attachment, or a ZIP file, I have not seen a *SINGLE* such message that did
have an accurate return path.

Available statistical data from other sources shows a &quot;not quite that extreme&quot;
proportion. The _lowest_ numbers I've seen put the proportion at well over
90% -- basis the numbers of messages encountered.

A trivial, surface-level, analysis of the goals of virus-writers shows that
virus writers, in general, have *every* reason to obsure the &quot;source&quot; of the
message, and _no_ reason for the message to &quot;clearly identify&quot; the actual
message source. That once the virus-writer &quot;community&quot; figured out how to
send messages with spoofed origin information, the _virtually_every_ virus
released after that point *does* use such spoofing -- for the express
purpose of making it 'as difficult as possible' to identify the true source
of the infection-carrying message.

It is also an &quot;obvious fact&quot; that people who are in the *business* of selling
malware detection systems, have a business interest in &quot;identifying&quot; and
&quot;classifying&quot; malware. &quot;What it does&quot;, and &quot;how it works&quot; ARE (or should be)
reasonable and expected parts of their identificaton/analysis/classificaiton
process. Thus, 'malware detection system' vendors -- of all people -- should
be expected to know _more_ about whether or not a particular 'detected'
malware (regardless of whether or not it was a 'false positive' detection)
is one that forges the 'pooint of origin' information that would be used
to route a DSN.

Thre is no need for the authors/sellers of 'malware detection systems' to
&quot;assume&quot; any specific behavior as a 'default' assumption. They *SHOULD*
*KNOW* the actual of every virus that they have an 'identification signature'
for. thus there is no need to assume anything, they can act case-by-case
on &quot;actual&quot;, factual data.

Thus, this is an invalid straw-man argument. Three down.

<QUOTE PREVIOUSPOST="
&gt; 4) The return-path can be validated prior to accepting a message.

"/>&quot;wHO CARES&quot; ABOUT the return-path? if you make the malware determination
*at*the*exterior*gateway** to your network, *during* the SMTP transaction,
you have a 'reliable' path back to the system that tried to deliver it _to_
you. If *they* don't know (reliably) who the actual sender of that message
is, that is _their_ problem.

If you _cannot_ make a real-time &quot;malware&quot; determination during the _gateway_
SMTP transaction, and the gateway has &quot;accepted for delivery&quot; the questionable
message, then when the 'malware' determination is made, the message should
be simply _delivered_, according to site policy -- directly to the bit-bucket.
As this _does_ meet the 'delivery' requirements of the relevant RFCs, thre
is no need to send a failure notification 'backwareds' to anywhere.

Thus, this is an invalid straw-man argument. four down.

<QUOTE PREVIOUSPOST="
&gt; 5) SMTP should appear to be point-to-point.

"/> An overly-broad statement, without any real meaning.

SMTP already _is_ point-to-point, relative to &quot;point-to-multipoint&quot; (broad-
casting), and/or 'multipoint-to-point&quot; (semders to the same destination over-
writing each other).

A message just goes through a series of point-to-point links en route to
the destination.

I suspect you meant &quot;point-to-point&quot; as a reference to a system where the
actual sender makes a direct connection to the reveiver's mailbox. This is
really described as a end-to-end snychronous connection. No 'store and
forward' capability, no 'asynchronous' transfers.

IF that is what you mean, it is a 'conclusion' not supported by the facts
so far in evidence. With &quot;minor&quot; changes to the current SMTP protocol,
and the various implementations, the issue of delivery failure notices
to a forged address can route the message back to the *actual* sender,
and _reliably_ so.

First, an MSA (to use the 'sendmail' terminology) must know how to 'reliably'
send a message back to the _user_ who submitted the message, *before* it
accepts that 'submitted' message.

Second there is a need to _retain_ that information on a _per_message_
basis, until the allowed 'message delivery failure&quot; interval has elapsed.

Third, when a message is passed on to another MTA, the remaining time
until the _original_ message delivry failure time-limit is reached. this
will be the 'original' time remaining less any time that it has spent
sitting _IN_ the queue on the server.

any server can have a 'maximum&quot; time-limit, and if the time-limit on an
incoming message is _greater_ than that maximum, it 'automatically gets
reduced to the 'site maximum&quot;.

Now, if a message is still &quot;undelivered&quot; when the delivery failure time-
limit is reached, the message is removed from the local outgoing queue,
And a status notification is sent *to*the*server* that delivered the message
to the system where it timed-out.

Each system going back 'up' the delivery path will then &quot;pass up the line&quot;
TO THE SERVER that sent to that systrem, of the delivery failure.

eventually, the 'failure' message gets back to the MSA that accepted the
message, and &quot;knows&quot; _reliably_ how to contact the actual sender. and
*that* machine mails the actual failure notice to the actual sender.

You've got asyncrhonous, store-and-forward, message passing in *both*
directions. It's _not_ &quot;point-to-point'. It takes some protocol
extensions, and supporting implementations, to make everything work.

OK, that was a lengthy debunking, but it is debunked. five down.

<QUOTE PREVIOUSPOST="
&gt; 6) MTAs with AV filters are the only problem.

"/> And _what_, pray tell, *OTHER* than an &quot;MTA with AV filters&quot; is going to
automatically generate a 'virus warning' to an address that was forged as
the sender of a virus-infected email?

Yes, there are other sources of UBE. That is utterly irrelevant to
whether or not &quot;systems that send *unsolicited* messages to persons
who have had _zero_ contact with that system&quot; are sending UBE.

A claim that &quot;X (a malware detecting system) is a member of set &quot;Y&quot; (UBE
emitters) *DOES*NOT*IMPLY* that &quot;X&quot; is the _only_ member of that set.

That the set has other members does _not_ invalidate X's membership
membership in set &quot;Y&quot;,

Thus, this is _also_ a false claim.

wups. that's 6 out ot 6. nothing left.

<QUOTE PREVIOUSPOST="

&gt; While there could be best practices created for AV filtering, it
&gt; seems unlikely to be effective. Simplistic filters for DSNs also
&gt; seem counter to ensuring the integrity of email delivery. Defending
&gt; against DSN exploits with BATV will remove this vector, which in turn
&gt; will end DSN exploits attempts over the long term. Why expect others
&gt; to fix this problem, when there is a solution that one could make the
&gt; investment in to deploy.

"/> Why should _everyone_ have to &quot;make the investment&quot;, when a much smaller
investment by a *much*smaller* population (the 'malware detection system
_vendors_) would utterly *eliminate* the _problem_as_stated_ -- to wit:

Virus &quot;warnings&quot; to forged addresses.

<QUOTE PREVIOUSPOST="
&gt; This will reduce this problem over the long
&gt; term. The BATV alternative would not cause otherwise valuable DSNs
&gt; to be lost, nor make assumptions about the quality of malware detection.
&gt; If you can't trust AV handling of DSNs, why trust their detections?

&gt; Would you rather see emails simply disappear?

"/> Quote: &quot;E-mail is *NOT* a _reliable_ communicaitons mechanism.&quot;

<QUOTE PREVIOUSPOST="

&gt;&gt; 2. It is the responsibility of the *SENDER* not to send UBE.

&gt; When the recipient is a legitimate email provider, it could seriously
&gt; lower the integrity of email delivery for these providers to toss
&gt; DSNs because many fall into a category you want to define as UBE.

"/> _I_ am *NOT* the sender of the message.

I DID NOT SOLICIT any notifications about messages sent by *OTHER*PEOPLE*.

Sending _me_ those messages does more to 'lower the integrity of email
delivery' than ...
read more &raquo;
</POST>



<POST>
<POSTER> Robert Bonomi </POSTER>
<POSTDATE> 2005-12-09T07:40:00 </POSTDATE>
Email: Robert Bonomi &lt;bon ... @mail.r-bonomi.com&gt;


<QUOTE PREVIOUSPOST="
&gt; From owner-na ... @merit.edu Fri Dec 9 17:10:00 2005
&gt; Cc: &quot;Steven J. Sobol&quot;&lt;sjso ... @JustThe.net&gt;, &quot;Geo.&quot;&lt;geoincide ... @nls.net&gt;,
&gt; n ... @merit.edu
&gt; From: Douglas Otis &lt;d ... @mail-abuse.org&gt;
&gt; Subject: Re: SMTP store and forward requires DSN for integrity (was Re:Clueless anti-virus )
&gt; Date: Fri, 9 Dec 2005 15:08:49 -0800
&gt; To: Todd Vierling &lt;t ... @duh.org&gt;

&gt; On Dec 9, 2005, at 1:12 PM, Todd Vierling wrote:

&gt;&gt; None of these are my problem. I am a non-involved third party to
&gt;&gt; the malware detection software, so I should not be a party to its
&gt;&gt; outgoing spew.

&gt;&gt; I have not requested the virus &quot;warnings&quot; (unsolicited), they are
&gt;&gt; being sent via an automated trigger (bulk, by extension of the
&gt;&gt; viruses also being bulk), and they are e-mail -- UBE by
&gt;&gt; definition. Whether they are also formatted as DSNs or delivered
&gt;&gt; like DSNs doesn't take away their UBE status.

&gt; This is a third-party acting in good faith,

"/>&quot;In good faith&quot; is _HIGHLY_ debatable.

&quot;On blind faith&quot; (that the sender address infor is accurate) is much
closer to an accurate description.

The aforementioned third parties, being experienced professionals, and even
'experts', in the field *SHOULD* KNOW BETTER than to act in that matter.
How can they claim to be experts in the field and _NOT_ be aware of the
_probability_ (not just the &quot;possibility) of the sender address being spoofed?
AND, *as*experts* in that area, it is incumbant on _them_ to 'act responsibily'
on behalf of their clients/customers who are &quot;not so knowledgable&quot; about
such matters.

<QUOTE PREVIOUSPOST="
&gt; How would the third-party acting in good faith know who really sent
&gt; the message?

"/>
</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-09T09:28:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; None of these are my problem. I am a non-involved third party to the
&gt;&gt; malware detection software, so I should not be a party to its outgoing spew.
&gt; This is a third-party acting in good faith,

"/> Wow, you're one twisted individual.

Can I have a hit of whatever you're smoking? I could use a fun
hallucination tonight. (I'll settle for reading your posts, because they're
becoming increasingly comical.)

<QUOTE PREVIOUSPOST="
On Fri, 9 Dec 2005, Douglas Otis wrote:
&gt; How would the third-party acting in good faith know who really sent the
&gt; message?

"/> If they don't know, they have no business telling a random third party.
And if they do drag in an innocent bystander, they are therefore *not*
acting in good faith.

<QUOTE PREVIOUSPOST="
&gt; In this case however, it is in keeping with a general expectation that a DSNs
&gt; will be sent when a message can not be delivered. If this party wanted to
&gt; save costs, they would toss the DSN.

&gt; How can this entity know whether the DSN is going to the correct party?

"/> In the case of malware, YOU KNOW IT IS FORGED in every case in recent
history. What more do you need?

<QUOTE PREVIOUSPOST="
&gt; How can this be called cost shifting?

"/> If I am overburdened with other people's crap that never should have hit me,
then I am bearing the *cost* of their abuse. And yes, spewing anything
(whether you think it's a DSN or not) at me in bulk, when it has nothing to
do with me, is abuse.

I can only deduce that you're clueless, you have an ulterior motive
(hmm...), or you haven't been using e-mail for very long. In any case, you
are reflecting a *really* bad image on your mail domain (and thus your
employer) by being so completely lost in your own world.

I stand by my T. Roll conclusion.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> JC Dill </POSTER>
<POSTDATE> 2005-12-09T09:45:00 </POSTDATE>
Email: JC Dill &lt;list ... @equinephotoart.com&gt;


<QUOTE PREVIOUSPOST="
Douglas Otis wrote:

&gt; On Dec 9, 2005, at 1:12 PM, Todd Vierling wrote:

&gt;&gt; None of these are my problem. I am a non-involved third party to
&gt;&gt; the malware detection software, so I should not be a party to its
&gt;&gt; outgoing spew.

&gt;&gt; I have not requested the virus &quot;warnings&quot; (unsolicited), they are
&gt;&gt; being sent via an automated trigger (bulk, by extension of the
&gt;&gt; viruses also being bulk), and they are e-mail -- UBE by
&gt;&gt; definition. Whether they are also formatted as DSNs or delivered
&gt;&gt; like DSNs doesn't take away their UBE status.

&gt; This is a third-party acting in good faith,

"/> No it isn't. This is a third-party acting in their own interest with
absolutely zero concern for how their actions affect others.

The third party WANTS to return the DSN so it can advertise its
filtering service. There is NO other possible reason or excuse for
this. The third-party obviously has a vested interest in justifying and
continuing this reprehensible behavior.

<QUOTE PREVIOUSPOST="
&gt; you want them to toss the DSNs, because you _think_ the number of
&gt; otherwise valid DSNs to be inconsequential (whether or not malware
&gt; is actually detected).

"/> We KNOW the percentage of valid DSNs tossed by this action will be 0, or
very very very close to 0. We know that if there were a significant
percentage of DSNs that were desired by the &quot;sender&quot; then it would be
just as easy for you to give those DSNs to the purported recipient so
that they can notify the &quot;sender&quot; themselves. If the purported
recipient doesn't want to see the DSNs because the false positive rate
is 0 or close to 0, then you can be quite sure that the &quot;senders&quot; (most
of whom never &quot;sent&quot; the message) certainly don't want to see them either.

<QUOTE PREVIOUSPOST="
&gt; Where do you draw the line, as AV filtering is not the only source of
&gt; a spoofed DSN problem?

"/> Because other systems aren't perfect is not an acceptable reason to let
your system continue to do bad things.

<QUOTE PREVIOUSPOST="
&gt; How would the third-party acting in good faith know who really sent
&gt; the message?

"/> If the filtering system has any knowledge (or *should* have such
knowledge) regarding the message received to indicate that the sender is
forged, then it should not send a DSN to the sender address. Period.
It should either discard the message and not generate a DSN or it should
give the DSN to the purported recipient. If the purported recipient
doesn't want to get a notice, then the system shouldn't inflict the
notice on anyone else either.

<QUOTE PREVIOUSPOST="
&gt;&gt; (Do you know what &quot;cost shifting&quot; means, and why it's considered
&gt;&gt; bad, and why it is illegal in some forms?)

&gt; In this case however, it is in keeping with a general expectation
&gt; that a DSNs will be sent when a message can not be delivered. If
&gt; this party wanted to save costs, they would toss the DSN.

"/> And lose the opportunity to market their product in the guise of sending
a &quot;desired DSN&quot; to someone whose address they are 99.999% certain was
forged by the virus? We all know that email marketing is very low cost
(low cost mostly due to cost shifting, as noted above) so they would
have to replace this low cost marketing technique with real marketing at
a much higher cost.

<QUOTE PREVIOUSPOST="
&gt; How can this entity know whether the DSN is going to the correct
&gt; party?

"/> See above.

<QUOTE PREVIOUSPOST="
&gt; How can this be called cost shifting?

"/> See above.

<QUOTE PREVIOUSPOST="
&gt; DSNs with spoofed return-paths will not go away even after getting
&gt; all the AV filters performed within the session sometime in the few
&gt; years.

"/> No, they will go away by dropping DSNs on the floor when there is a high
likelihood that the sender is forged.

jc

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-09T10:48:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;



<QUOTE PREVIOUSPOST="
On Dec 9, 2005, at 4:09 PM, Robert Bonomi wrote:

&gt;&gt; 1) Malware detection has a 0% false positive.

&gt; If there is a 'false positive' detecting malware, it is a near
&gt; certainty that the &quot;legitimate&quot; message so classified does *NOT*
&gt; have a FORGED ADDRESS.

"/> When there is some percentage of false-positive detection, there will
be a number of messages that will fall into the &quot;should not have been
rejected&quot; category, where indeed the return-path is not likely to
have been forged, and a DSN would be of value to the sender. When a
DSN is sent, the sender will be able to take corrective action.
There is also a percentage of messages where malware detection is
valid, but nonetheless the return-path is also valid. (Perhaps
overwritten by the provider.)

You are judging this situation based upon only the wrong choice as
having been made. AV filtering is not the only situation where a DSN
exploit is used, and there is no way to be sure about a choice of
discarding the DSN. Discarding DSNs _will_ degrade the integrity of
email delivery. As the recipient of the DSN is _always_ the best
judge whether the DSN was sent to a forged return-path, why not take
advantage of that superior knowledge? Automate the process so the
DSN recipient is able to immediate rejects _all_ invalid DSNs.
Overall, email transactions will be faster, and DSN exploits will
soon disappear.

-Doug

</POST>



<POST>
<POSTER> Brandon Butterworth </POSTER>
<POSTDATE> 2005-12-10T06:08:00 </POSTDATE>
Email: Brandon Butterworth &lt;bran ... @rd.bbc.co.uk&gt;


This is pointless argument, please stop

There are those who think they are right in spamming people with reports
of a virus they didn't send and the rest of the planet who think they
are mad and wish they'd get a clue.

<QUOTE PREVIOUSPOST="
&gt; As the recipient of the DSN is _always_ the best
&gt; judge whether the DSN was sent to a forged return-path, why not take
&gt; advantage of that superior knowledge?

"/> because that superior knowledge has already thrown them all away
without looking any slight chance of one being valid is wasted

If the AV systems that know they are dealing with forged senders, which
they do, just dropped them then the volume of potentially valid ones
may be low enough that we wouldn't just bin them all

If you make it hard we will ignore it.

brandon

</POST>



<POST>
<POSTER> Matthew Sullivan </POSTER>
<POSTDATE> 2005-12-10T06:54:00 </POSTDATE>
Email: Matthew Sullivan &lt;matt ... @sorbs.net&gt;


Robert, sorry I missed the full conversation, and don't have time to
read the whole thread, but based on your mail alone a few words of
agreement...

Please remember people..

RFC 2821 states explicitly that once the receiving server has issued a
250 Ok to the end-of-data command, the receiving server has accepted
responsibility for either delivering the message or notifying the sender
that it has been unable to deliver. RFC2821 also says that a message
MUST NOT be dropped for trivial reasons such as lack of storage space
for the message. To that end is a detected
virus/trajan/malware/phishing scam etc... a trivial reason to drop the
message?

Personally I believe that not trivial means not unless the entire server
crashes and disks fry etc... To that end I am a firm believer that
malware messages SHOULD BE rejected at the end of the data command
(which is why I have gone to great lengths to ensure this happens at
$employer, and at SORBS).. Failure to have the resources available to
perform the virus scanning will result in the messages being delivered
to the recipient as a broken message (attachment stripped).

There is certainly NO EXCUSE for ANYONE to bounce virus warning messages
to ANY user whether local or remote, particularly when the anti virus
software will identify the virus and the virus is KNOWN to forge the
sender address.

As such anyone bouncing large numbers virus warning messages are game
for having their servers blocked, and I will not apologise to anyone
getting caught by a SORBS automated spamtrap getting a virus warning
message (though I will remove them promptly when notified of such an entry).

Regards,

Mat

</POST>



<POST>
<POSTER> Stephen J. Wilcox </POSTER>
<POSTDATE> 2005-12-10T07:57:00 </POSTDATE>
Email: &quot;Stephen J. Wilcox&quot;&lt;s ... @telecomplete.co.uk&gt;


<QUOTE PREVIOUSPOST="
&gt; Please remember people..

&gt; RFC 2821 states explicitly that once the receiving server has issued a
&gt; 250 Ok to the end-of-data command, the receiving server has accepted
&gt; responsibility for either delivering the message or notifying the sender
&gt; that it has been unable to deliver. RFC2821 also says that a message
&gt; MUST NOT be dropped for trivial reasons such as lack of storage space
&gt; for the message. To that end is a detected
&gt; virus/trajan/malware/phishing scam etc... a trivial reason to drop the
&gt; message?

&gt; Personally I believe that not trivial means not unless the entire server
&gt; crashes and disks fry etc... To that end I am a firm believer that
&gt; malware messages SHOULD BE rejected at the end of the data command

"/> rfc2821 was written prior to this problem

we should also take the rfc in context and differentiate between email sent
between individuals for which the responsibility applies, and email generated by
systems (spam, virus bounces) in which we the providers carry some
responsibility to drop them (okay, it would be better if they didnt exist in the
first place, but thats not reality) if they can be identified in the best
interests of the user

to not do this is like saying we have a responsibility to ensure end to end
delivery of packets in a DoS attack just because the rules governing routing and
ip stacks dont explicitly cover the use of sinks and filters.

Steve

</POST>



<POST>
<POSTER> JP Velders </POSTER>
<POSTDATE> 2005-12-10T09:40:00 </POSTDATE>
Email: JP Velders &lt;j ... @veldersjes.net&gt;


<QUOTE PREVIOUSPOST="
&gt; Date: Fri, 9 Dec 2005 15:08:49 -0800
&gt; From: Douglas Otis &lt;d ... @mail-abuse.org&gt;
&gt; Subject: Re: SMTP store and forward requires DSN for integrity
&gt; On Dec 9, 2005, at 1:12 PM, Todd Vierling wrote:
&gt;&gt; [ ... ]
&gt;&gt; I have not requested the virus &quot;warnings&quot; (unsolicited), they are being sent
&gt;&gt; via an automated trigger (bulk, by extension of the viruses also being
&gt;&gt; bulk), and they are e-mail -- UBE by definition. Whether they are also
&gt;&gt; formatted as DSNs or delivered like DSNs doesn't take away their UBE status.
&gt; This is a third-party acting in good faith,

"/> It's amazing Mike, can you pass me that crack-pipe !

*any* anti-virus vendor has not only signatures of a specific virus
but also a good understanding of what the virus does and how it
spreads. If the vendor doesn't, well, they'd better retire from the AV
business, because as a vendor they should be able to tell me that.
(you know, me customer, you vendor, I give money for features I want)

If you want to send DSN's telling people they send out a virus, do so
only for viruses which are known *not* to forge or even better, which
don't have any SMTP engines of their own. Well, how many of those
still wander round ? And how many of those can be found by *outbound*
scanning on mailservers at the originating party ?

<QUOTE PREVIOUSPOST="
&gt; [ ... ]
&gt; Where do you draw the line, as AV filtering is not the only source of a
&gt; spoofed DSN problem?

"/> Right now dumb AV filtering is akin to a Smurf amplifier. Essentially
the AV vendors are DDoS'ing each and every mailserver out there.
Great, now a little question, why not inform the recipient of the
mails that the AV solution stopped another virus heading their way ?
Would be great advertising, see Mr CIO, you have 500 new mails in the
last hour, 490 are about how our mailserver stopped all them viruses !

Last month alone, my Spam folder (at work) counted over 80% AV mails.
Guess how large that folder has become because of that ? I've jumped
from around 1GB normally up to almost 3GB. That jump can be attributed
to AV filters everywhere. You'd almost think the AV vendors have a
rather large stock in bandwith and storage providers.

<QUOTE PREVIOUSPOST="
&gt; [ ... ]
&gt; In this case however, it is in keeping with a general expectation that a DSNs
&gt; will be sent when a message can not be delivered. If this party wanted to
&gt; save costs, they would toss the DSN.

"/> Save costs ?
Sure I wanna save costs.

And mind you the most expense isn't in the storage for e-mail for my
end users, it's in the cost of me making sure we don't get blacklisted
by every other selfrespecting mailserver in the world. Hence we drop
virus mails, we log them, and the *recipients* can get a mail telling
them a virus was stopped. However we put that into a seperate IMAP
folder and not in the INBOX. There's no need to Spam both sender and
recipient. The recipient on our end can check to see if a message
towards them was stopped if they were expecting something.

Now viruses aren't the only scourge, I know, but the AV vendors are
hard underway to destroy e-mail as a communications tool, where
previously this was the doing of Spammers. I don't think any AV vendor
would consider themselves more &quot;evil&quot; then Spammers, Phishers or
scriptkiddies, but they will be if they don't act more responsibly.

Regards,
JP Velders

</POST>



<POST>
<POSTER> Robert Bonomi </POSTER>
<POSTDATE> 2005-12-10T09:52:00 </POSTDATE>
Email: Robert Bonomi &lt;bon ... @mail.r-bonomi.com&gt;


<QUOTE PREVIOUSPOST="
&gt; From owner-na ... @merit.edu Sat Dec 10 06:58:38 2005
&gt; Date: Sat, 10 Dec 2005 12:57:34 +0000 (GMT)
&gt; From: &quot;Stephen J. Wilcox&quot;&lt;s ... @telecomplete.co.uk&gt;
&gt; Subject: Re: SMTP store and forward requires DSN for integrity (was Re:Clueless
&gt; anti-virus )

&gt; On Sat, 10 Dec 2005, Matthew Sullivan wrote:

&gt;&gt; Please remember people..

&gt;&gt; RFC 2821 states explicitly that once the receiving server has issued a
&gt;&gt; 250 Ok to the end-of-data command, the receiving server has accepted
&gt;&gt; responsibility for either delivering the message or notifying the sender
&gt;&gt; that it has been unable to deliver. RFC2821 also says that a message
&gt;&gt; MUST NOT be dropped for trivial reasons such as lack of storage space
&gt;&gt; for the message. To that end is a detected
&gt;&gt; virus/trajan/malware/phishing scam etc... a trivial reason to drop the
&gt;&gt; message?

&gt;&gt; Personally I believe that not trivial means not unless the entire server
&gt;&gt; crashes and disks fry etc... To that end I am a firm believer that
&gt;&gt; malware messages SHOULD BE rejected at the end of the data command

&gt; rfc2821 was written prior to this problem

"/> Systems which 'silently discard' virus-infected messages for &quot;policy&quot; reasons
are not in violation of RFC 2821, nor even the obseleted 821.

&quot;Delivery&quot; of a message does NOT require that the message hit a person's &quot;in
box&quot;. Trivial proof: mail to an 'autoresponder'.

'Delivery' of any message is handled in accordance with 'policy' established
at the receiving site. If policy dictates that that message be routed to the
bit-bucket, rather than to the user's mailbox, that message *IS* considered
'delivered', within the context of RFC 2821.

<QUOTE PREVIOUSPOST="
&gt; we should also take the rfc in context and differentiate between email sent
&gt; between individuals for which the responsibility applies, and email generated by
&gt; systems (spam, virus bounces) in which we the providers carry some
&gt; responsibility to drop them (okay, it would be better if they didnt exist in the
&gt; first place, but thats not reality) if they can be identified in the best
&gt; interests of the user

&gt; to not do this is like saying we have a responsibility to ensure end to end
&gt; delivery of packets in a DoS attack just because the rules governing routing and
&gt; ip stacks dont explicitly cover the use of sinks and filters.

&gt; Steve

"/>
</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-10T11:15:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; When there is some percentage of false-positive detection,

"/> I'm *loving* your crack-induced comedy. Troll it up, bay-bee!

Show me the false positive rate. If you can prove any site with more than
0.00001% FP on malware detection with any off the shelf product, I'll give
you a magic cookie.

Abusing the rest of the world does *not* justify saving the single,
incredibly improbable, FP in comparison. Abuse is abuse; it's not up to
millions of receiving hosts to put up with the abuse happily because of your
hallucinogenic &quot;false positive&quot;.

Put down the crackpipe and walk away from the keyboard before you say
something else your employer will regret. (These might be &quot;your opinions&quot;,
but it's telling if a company continues to employ someone who doesn't
understand said company's market at all, in spite of any disclaimers.)

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-10T11:23:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;


<QUOTE PREVIOUSPOST="
&gt; *any* anti-virus vendor has not only signatures of a specific virus
&gt; but also a good understanding of what the virus does and how it
&gt; spreads. If the vendor doesn't, well, they'd better retire from the AV
&gt; business, because as a vendor they should be able to tell me that.
&gt; (you know, me customer, you vendor, I give money for features I want)

"/> With the high prevalence of viruses having a forged return-path, the
concern is largely about _false_ detections. These are not actual
numbers, but perhaps more realistic than figures suggested previously.
Imagine the false positive error rate for an email AV filter runs about
1 in 1000 malwares. While indeed this may not be a tragedy having a few
valid emails lost without notice in an AV effort, this loss is not
required when &quot;valid&quot; DSN recognition is deployed.

The AV filter then bounce technique has been used for many years, where
DSNs must be filtered at the DSN recipient. Rather than seemingly
fruitless complaining, automate this process to refuse invalid DSNs
before the data phase, and prevent the DoS effects. This automation
will also recover the valid 1 in 1000 DSNs. This BATV automation would
also ensure no DSNs with forged return-paths, created at any point where
acceptance criteria differs between MTAs, will be accepted before the
data phase. BATV should be almost as effective as a DNS-BL. You can
even use automate BATV refusals by others to add to your own temp BL.

<QUOTE PREVIOUSPOST="
On Sat, 2005-12-10 at 15:40 +0100, JP Velders wrote:
&gt; Now viruses aren't the only scourge, I know, but the AV vendors are
&gt; hard underway to destroy e-mail as a communications tool, where
&gt; previously this was the doing of Spammers. I don't think any AV vendor
&gt; would consider themselves more &quot;evil&quot; then Spammers, Phishers or
&gt; scriptkiddies, but they will be if they don't act more responsibly.

"/> Consider forged DSN automated detection before data phase as an
opportunity to improve upon the integrity of email delivery, while also
preventing the DoS situation. BATV can be implemented where the
implementer sees the benefits immediately. When widely deployed, the
back-scatter problem dissolves, as forged DSNs will not serve as an
exploit, but rather acts as a trap. Once again valid DSNs regain their
rightful respectability as needed in any store and forward system.

-Doug

</POST>



<POST>
<POSTER> Jon Lewis </POSTER>
<POSTDATE> 2005-12-10T11:48:00 </POSTDATE>
Email: Jon Lewis &lt;jle ... @lewis.org&gt;


<QUOTE PREVIOUSPOST="
&gt; With the high prevalence of viruses having a forged return-path, the
&gt; concern is largely about _false_ detections. These are not actual
&gt; numbers, but perhaps more realistic than figures suggested previously.
&gt; Imagine the false positive error rate for an email AV filter runs about
&gt; 1 in 1000 malwares. While indeed this may not be a tragedy having a few
&gt; valid emails lost without notice in an AV effort, this loss is not
&gt; required when &quot;valid&quot; DSN recognition is deployed.

"/> The loss is also not required when virus/malware scanning is done during
the SMTP conversation. Google for QHPSI. Messages don't have to
disappear and bogus DSNs don't have to be sent. People just need to
modernize their MTAs.

<QUOTE PREVIOUSPOST="
On Sat, 10 Dec 2005, Douglas Otis wrote:
&gt; The AV filter then bounce technique has been used for many years, where
&gt; DSNs must be filtered at the DSN recipient. Rather than seemingly

"/> Like many other things on the internet, just because it's been in place
for many years doesn't mean its a good idea or still a viable system.

<QUOTE PREVIOUSPOST="
&gt; will also recover the valid 1 in 1000 DSNs. This BATV automation would
&gt; also ensure no DSNs with forged return-paths, created at any point where
&gt; acceptance criteria differs between MTAs, will be accepted before the
&gt; data phase. BATV should be almost as effective as a DNS-BL. You can
&gt; even use automate BATV refusals by others to add to your own temp BL.

"/> That still leaves &quot;our&quot; (the people not sending bogus DSNs) systems having
to do lots of work (validating signitures) to decide how to handle DSNs
that should never have been sent.

Interesting that you should mention DNSBLs. I've seen people asking for
DNSBLs of bogus DSN senders for years. I hope the integration of AV
filtering and MTAs will improve before we see widespread use of bogus DSN
sender DNSBLs. Unfortunately, for some people, experiencing pain is the
only way they can be convinced to clean up their problems.

----------------------------------------------------------------------
Jon Lewis | I route
Senior Network Engineer | therefore you are
Atlantic Net |
_________  http://www.lewis.org/~jlewis/pgp  for PGP public key_________

</POST>



<POST>
<POSTER> Rich Kulawiec </POSTER>
<POSTDATE> 2005-12-10T11:55:00 </POSTDATE>
Email: Rich Kulawiec &lt;r ... @gsp.org&gt;


<QUOTE PREVIOUSPOST="
&gt; There is a solution you can implement now that gets rid of these tens of
&gt; thousands of virus and abuse laden DSNs you see every day before the
&gt; data phase.

"/> BATV is not a solution.

It's a band-aid.

It fails to address the underlying problem and instead focuses on
merely trying to cope with one of the symptoms of that problem.

And it also places the burden on the people who are NOT PART OF
THE PROBLEM, and who therefore should not be the ones tasked with
solving it.

The solution isn't to try to figure out what to do with UBE generated
by broken mail systems, broken anti-spam systems, broken anti-virus
systems, and the like; the solution is to fix those systems so that
they don't generate it. &quot;The best place to stop spam is as near its
source as possible&quot; goes the maxim, and THE best place IS its source.

This is not hard. It's been discussed at extraordinary length on spam-l,
and one of the outcomes of those discussions is that while there are
some edge cases that can be tough (depending on mail system architecture)
those are a tiny minority, and the overwhelming majority can be dealt
with quickly and easily. I would strongly suggest that anyone wishing
to continue this discussion (a) read the archived discussion thoroughly
and (b) take it up on spam-l, where it's probably more appropriate and
where huge amounts of relevant clue exist among participants.

---Rsk

</POST>



<POST>
<POSTER> Rich Kulawiec </POSTER>
<POSTDATE> 2005-12-10T11:57:00 </POSTDATE>
Email: Rich Kulawiec &lt;r ... @gsp.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;When auth fails, one knows *right then* c/o an SMTP reject. No bounce
&gt;&gt;is necessary.

&gt; This assumes all messages are rejected within the SMTP session.

"/> Yes, exactly and the point several of us have been making is that
this is (a) easy (well, provided you're using a quality MTA; if not,
then switch to one) (b) running a sane mail system (c) fast
(d) resource-friendly and (e) most important of all, the _only_ way to
avoid sending UBE in response to forgeries (which are not going away
any time soon or quite possibly ever).

(Please note: there are no exceptions to the UBE specification for DSNs.
If DSNs are:

- sent to forged senders (thus unsolicited)
- in bulk (thus bulk)
- via email (thus email)

then they are UBE, which is THE definition of spam -- and which
deliberately omits any mention of content, purpose or other things
that are irrelevant to the spam/not-spam question.)

---Rsk

</POST>



<POST>
<POSTER> Edward B. Dreger </POSTER>
<POSTDATE> 2005-12-10T12:12:00 </POSTDATE>
Email: &quot;Edward B. Dreger&quot;&lt;eddy+public+s ... @noc.everquick.net&gt;


MS&gt; Date: Sat, 10 Dec 2005 22:54:24 +1100
MS&gt; From: Matthew Sullivan

MS&gt; RFC 2821 states explicitly that once the receiving server has issued a 250
MS&gt; Ok to the end-of-data command, the receiving server has accepted
MS&gt; responsibility for either delivering the message or notifying the sender
MS&gt; that it has been unable to deliver. RFC2821 also says that a message MUST

And RFC 1034/1035 (I forget which) specifies an RD bit which, in
reality, is rather useless.

Following RFCs is good for compatibility. However, RFCs are hardly
infallible word from on high. Sometimes they require revisiting and
revision.

Eddy
--
Everquick Internet -  http://www.everquick.net/
A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
Bandwidth, consulting, e-commerce, hosting, and network building
Phone: +1 785 865 5885 Lawrence and [inter]national
Phone: +1 316 794 8922 Wichita
________________________________________________________________________
DO NOT send mail to the following addresses:
dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
Sending mail to spambait addresses is a great way to get blocked.
Ditto for broken OOO autoresponders and foolish AV software backscatter.

</POST>



<POST>
<POSTER> Edward B. Dreger </POSTER>
<POSTDATE> 2005-12-10T12:21:00 </POSTDATE>
Email: &quot;Edward B. Dreger&quot;&lt;eddy+public+s ... @noc.everquick.net&gt;


DO&gt; Date: Fri, 9 Dec 2005 15:08:49 -0800
DO&gt; From: Douglas Otis

DO&gt; This is a third-party acting in good faith, albeit performing a check better
DO&gt; done within the session. In your view, there is less concern about delivery
DO&gt; integrity, and so related DSNs should be tossed. Being done within the
DO&gt; session would be ideal, of course. When their architecture does not support

Let's use some hyperbole:

Say that the latest megaworm chucks out spam at speeds resembling SQL
Slammer. The return-path specified is your email address. Millions of
MXes send _you_ bogus DSNs &quot;in good faith&quot;.

Is this acceptable? If not, where do you draw the line -- and does that
line apply to others, too?

Eddy
--
Everquick Internet -  http://www.everquick.net/
A division of Brotsman &amp; Dreger, Inc. -  http://www.brotsman.com/
Bandwidth, consulting, e-commerce, hosting, and network building
Phone: +1 785 865 5885 Lawrence and [inter]national
Phone: +1 316 794 8922 Wichita
________________________________________________________________________
DO NOT send mail to the following addresses:
dav ... @brics.com -*- jfconmaa ... @intc.net -*- s ... @everquick.net
Sending mail to spambait addresses is a great way to get blocked.
Ditto for broken OOO autoresponders and foolish AV software backscatter.

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-10T12:35:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; Let's use some hyperbole:

&gt; Say that the latest megaworm chucks out spam at speeds resembling SQL
&gt; Slammer. The return-path specified is your email address. Millions of
&gt; MXes send _you_ bogus DSNs &quot;in good faith&quot;.

"/> That's not exactly hyperbole. My antivirus-spew counter on my 9-user SMTP
server rolled past 1M more than a year ago.

Per incident, it isn't more than 1M; moire like ~50k, but that is still well
beyond DDoS level.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Andrew - Supernews </POSTER>
<POSTDATE> 2005-12-10T12:49:00 </POSTDATE>
Email: &quot;Andrew - Supernews&quot;&lt;and ... @supernews.net&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;&quot;JP&quot; == JP Velders &lt;j ... @veldersjes.net&gt; writes:

"/>  JP&gt; Right now dumb AV filtering is akin to a Smurf amplifier.

Good analogy. I would extend it by pointing out that &quot;dumb AV
filtering&quot; is actually only a part of the general backscatter
problem. The existence of BATV isn't an excuse for mail system
operators to ignore the backscatter problem any more than the
existence of stateful firewalls is an excuse for people to run smurf
amplifiers.

Right now, unless you are a large provider or corporate, or unless
your mail system is massively over-engineered, any spammer can, at any
time, drown you in bounces (30 million SMTP transactions in response
to one spam run has been observed in practice). BATV doesn't help you
if the problem is SMTP transaction volume, any more than a firewall
will help you cope with a saturated network link.

It is, in my view, the responsibility of every mail system operator to
design and operate their systems in such a way as to minimize the
impact of backscatter on innocent third parties. This is not to say
that DSNs should not be sent (because that would indeed cause an
integrity problem) but that they should be avoided. Forged virus
backscatter is just one of the more trivial examples (trivial because
much of it is caused by A/V systems that _know_ they should not be
doing it); there are many other sources of backscatter that are not
specific to viruses, most of which can easily be controlled by proper
feedback to the SMTP server (e.g. accounts which go over quota and
_stay_ that way should be set to reject traffic at SMTP time, so that
they don't become continuous sources of backscatter).

--
Andrew, Supernews
http://www.supernews.com

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-10T04:66:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;


<QUOTE PREVIOUSPOST="
&gt; BATV doesn't help you if the problem is SMTP transaction volume, any
&gt; more than a firewall will help you cope with a saturated network link.

"/> I agree with most of your statements. AV filters should be done within
the session when possible, etc.

Your statement regarding BATV is not correct however. There are two
ways BATV reduces SMTP transaction volume when dealing with forged
DSNs.

Previous return-path and real email-address:
&lt;f ... @example.com&gt;

Is transformed by BATV with a private tag into:
prvs=fred/&lt;KDDDSSSSSS&gt;@example.com

S: 220 mail.example.com ESMTP Ready
C: EHLO fred.example.com
S: 250-mail.example.com Hello fred.example.com
S: 250-ENHANCEDSTATUSCODES
S: 250-PIPELINING
S: 250-8BITMIME
S: 250-SIZE 20000000
S: 250-DSN
S: 250-ETRN
S: 250-AUTH PLAIN LOGIN
S: 250-STARTTLS
S: 250-DELIVERBY
S: 250 HELP
C: MAIL FROM: &lt;&gt;
S: 250 2.1.0 &lt;&gt;... Sender ok
C: RCPT TO: &lt;f ... @example.com&gt;
S: 550 5.1.1 &lt;fred.example.com&gt;... User unknown
C: QUIT

When the MAIL FROM is &lt;&gt;, the only valid RCPT TO would be a BATV address
such as:

...
C: RCPT TO: &lt;prvs=fred/A237EDB ... @example.com&gt;
S: 250 2.1.5 &lt;prvs=fred/A237EDB ... @example.com&gt;... Recipient ok
C: DATA
S: 354 Enter mail, end with &quot;.&quot; on a line by itself
C: This is a notification you sent a virus to &lt;joe.tld&gt; at ...
C: Blah, Blah, Blah, and by the way, here is the virus. ...
C: ...
C: .
S: 250 2.0.0 234fls89056789 Message accepted for delivery
C: QUIT

The BATV is a few lines of code that adds a private tag with a time
limit set in days. BATV helps dramatically by eliminating the DATA phase
and all that is involved in handling messages. In addition, once BATV
becomes more widely deployed, the DSN refusal offers an alert about
accepting more such messages from that IP address.

BATV will make forged DSNs a thing of the past, irrespective of where a
recipient list is checked, an AV or SPAM filter is added, etc.

-Doug

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-10T05:67:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt; BATV will make forged DSNs a thing of the past, irrespective of where a
&gt; recipient list is checked, an AV or SPAM filter is added, etc.

"/> Stop plugging a recipient-side cost-shift scheme that you're directly
involved with as some sort of panacea. BATV has benefits, as do other
schemes, but you're still fixated on it as being the end-all, be-all of
forgery prevention -- by making third parties do the dirty work and letting
the instigators off the hook.

By putting the costs on the shoulders of third parties, you're putting
yourself squarely on the side of the spewing hosts, and being as ignorant as
the admins running the anti-malware products on those hosts. For shame.

Until you get the point that you're putting the burden on people that have
nothing to do with the problem that started this long thread (anti-malware
notices to forged senders), and your first priority should be stopping that
spew at the source BEFORE asking uninvolved third parties to help, you're
going to continue to look like the self-absorbed crack smoker you've made
yourself out to be.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Robert Bonomi </POSTER>
<POSTDATE> 2005-12-10T06:63:00 </POSTDATE>
Email: Robert Bonomi &lt;bon ... @mail.r-bonomi.com&gt;


<QUOTE PREVIOUSPOST="
&gt; From owner-na ... @merit.edu Sat Dec 10 15:55:48 2005
&gt; Subject: Re: SMTP store and forward requires DSN for integrity
&gt; From: Douglas Otis &lt;d ... @mail-abuse.org&gt;
&gt; To: Andrew - Supernews &lt;and ... @supernews.net&gt;
&gt; Cc: n ... @merit.edu
&gt; Date: Sat, 10 Dec 2005 13:54:37 -0800

&gt; On Sat, 2005-12-10 at 17:37 +0000, Andrew - Supernews wrote:

&gt;&gt; BATV doesn't help you if the problem is SMTP transaction volume, any
&gt;&gt; more than a firewall will help you cope with a saturated network link.

&gt; I agree with most of your statements. AV filters should be done within
&gt; the session when possible, etc.

&gt; Your statement regarding BATV is not correct however. There are two
&gt; ways BATV reduces SMTP transaction volume when dealing with forged
&gt; DSNs.

&gt; Previous return-path and real email-address:
&gt;&lt;f ... @example.com&gt;

&gt; Is transformed by BATV with a private tag into:
&gt; prvs=fred/&lt;KDDDSSSSSS&gt;@example.com

&gt; S: 220 mail.example.com ESMTP Ready
&gt; C: EHLO fred.example.com
&gt; S: 250-mail.example.com Hello fred.example.com
&gt; S: 250-ENHANCEDSTATUSCODES
&gt; S: 250-PIPELINING
&gt; S: 250-8BITMIME
&gt; S: 250-SIZE 20000000
&gt; S: 250-DSN
&gt; S: 250-ETRN
&gt; S: 250-AUTH PLAIN LOGIN
&gt; S: 250-STARTTLS
&gt; S: 250-DELIVERBY
&gt; S: 250 HELP
&gt; C: MAIL FROM: &lt;&gt;
&gt; S: 250 2.1.0 &lt;&gt;... Sender ok
&gt; C: RCPT TO: &lt;f ... @example.com&gt;
&gt; S: 550 5.1.1 &lt;fred.example.com&gt;... User unknown
&gt; C: QUIT

&gt; When the MAIL FROM is &lt;&gt;, the only valid RCPT TO would be a BATV address
&gt; such as:

&gt; ...
&gt; C: RCPT TO: &lt;prvs=fred/A237EDB ... @example.com&gt;
&gt; S: 250 2.1.5 &lt;prvs=fred/A237EDB ... @example.com&gt;... Recipient ok
&gt; C: DATA
&gt; S: 354 Enter mail, end with &quot;.&quot; on a line by itself
&gt; C: This is a notification you sent a virus to &lt;joe.tld&gt; at ...
&gt; C: Blah, Blah, Blah, and by the way, here is the virus. ...
&gt; C: ...
&gt; C: .
&gt; S: 250 2.0.0 234fls89056789 Message accepted for delivery
&gt; C: QUIT

&gt; The BATV is a few lines of code that adds a private tag with a time
&gt; limit set in days. BATV helps dramatically by eliminating the DATA phase
&gt; and all that is involved in handling messages. In addition, once BATV
&gt; becomes more widely deployed, the DSN refusal offers an alert about
&gt; accepting more such messages from that IP address.

&gt; BATV will make forged DSNs a thing of the past, irrespective of where a
&gt; recipient list is checked, an AV or SPAM filter is added, etc.

"/> TWO FACED, DOUBLE STANDARD, &quot;SPEAKS WITH FORKED TONGUE&quot;.

BATV has the risk of false-positive detection of an 'invalid' DSN.
All it takes is a remote mail system that keeps 'trying' to deliver to
a tempfailing address for _longer_ than the lifetime of that 'private
tag'.

Congratulations, you have just blocked a *valid* DSN failure notice.

Your approach has just demonstrably 'impaired the integrity of the email
system'.

Strange, isn't it, that your &quot;solution&quot; will do exactly what you insist
is utterly unacceptable behavior for any other approach.

Remember, the putative sender (the person, not the software) is the
best judge of whether or not that NDR is a delayed response to a message
they sent. Why not take advantage of that superior knowledge?

</POST>



<POST>
<POSTER> Robert Bonomi </POSTER>
<POSTDATE> 2005-12-10T07:15:00 </POSTDATE>
Email: Robert Bonomi &lt;bon ... @mail.r-bonomi.com&gt;


<QUOTE PREVIOUSPOST="
&gt; From owner-na ... @merit.edu Sat Dec 10 16:56:38 2005
&gt; Date: Sat, 10 Dec 2005 17:55:38 -0500 (Eastern Standard Time)
&gt; From: Todd Vierling &lt;t ... @duh.org&gt;
&gt; To: n ... @merit.edu
&gt; Subject: Re: SMTP store and forward requires DSN for integrity

&gt; On Sat, 10 Dec 2005, Douglas Otis wrote:

&gt;&gt; BATV will make forged DSNs a thing of the past, irrespective of where a
&gt;&gt; recipient list is checked, an AV or SPAM filter is added, etc.

&gt; Stop plugging a recipient-side cost-shift scheme that you're directly
&gt; involved with as some sort of panacea. BATV has benefits, as do other
&gt; schemes, but you're still fixated on it as being the end-all, be-all of
&gt; forgery prevention -- by making third parties do the dirty work and letting
&gt; the instigators off the hook.

&gt; By putting the costs on the shoulders of third parties, you're putting
&gt; yourself squarely on the side of the spewing hosts, and being as ignorant as
&gt; the admins running the anti-malware products on those hosts. For shame.

"/> I recommend to all a review of the &quot;Rules of Spam&quot;.

Rule #1, in particular. Specifically the &quot;Lexical Contradiciton&quot; and &quot;Sharp's
Corollary&quot;.

We seem to have yet another example for the 'rules-keeper's refrain'. *sigh*

Considering the source of _this_ demonstration, one can only despair -- what
possible chance is there for things to 'get better', when one of the putatively
'good guys' espouses that kind of double-think?

</POST>



<POST>
<POSTER> mary </POSTER>
<POSTDATE> 2005-12-10T07:34:00 </POSTDATE>
Email: mary &lt;m ... @freeshell.org&gt;


mta test anyone?

X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*

</POST>



<POST>
<POSTER> Douglas Otis </POSTER>
<POSTDATE> 2005-12-10T09:14:00 </POSTDATE>
Email: Douglas Otis &lt;d ... @mail-abuse.org&gt;


<QUOTE PREVIOUSPOST="
&gt; BATV has the risk of false-positive detection of an 'invalid' DSN.
&gt; All it takes is a remote mail system that keeps 'trying' to deliver to
&gt; a tempfailing address for _longer_ than the lifetime of that 'private
&gt; tag'.

&gt; Congratulations, you have just blocked a *valid* DSN failure notice.

"/> The expiry period of the tag is determined by the MSA of the message.
Setting this period for more than 5 days should extend beyond retry
efforts, so make it ten days.

<QUOTE PREVIOUSPOST="
On Sat, 2005-12-10 at 17:51 -0600, Robert Bonomi wrote:
&gt; Your approach has just demonstrably 'impaired the integrity of the email
&gt; system'.

"/> The tag only needs a reasonable expiry controlled by the MSA.
Exhaustion of delivery retry are getting shorter.

<QUOTE PREVIOUSPOST="
&gt; Remember, the putative sender (the person, not the software) is the
&gt; best judge of whether or not that NDR is a delayed response to a message
&gt; they sent. Why not take advantage of that superior knowledge?

"/> Tagging of the return-path address would be transparent to the author.
They would not even see this change, nor would they ever see any DSNs
for messages they did not send. They would be protected from bounced
malware and other forms of abuse using this avenue of entry.

-Doug

</POST>



<POST>
<POSTER> Steve Sobol </POSTER>
<POSTDATE> 2005-12-10T09:20:00 </POSTDATE>
Email: Steve Sobol &lt;sjso ... @JustThe.net&gt;


<QUOTE PREVIOUSPOST="
mary wrote:
&gt; mta test anyone?

"/> [snip Eicar signature]

You didn't attach it. If you had, I'm pretty sure Exim (running an ACL
plugged into ClamAV) would have caught it before it got to my Inbox. Clam
detects Eicar just fine. :&gt;

What you did was include it inline in a text/plain MIME part in your
message, where it isn't likely that it could do any harm even if it *was* a
real virus.

--
Steve Sobol, Professional Geek 888-480-4638 PGP: 0xE3AE35ED
Company website:  http://JustThe.net/
Personal blog, resume, portfolio:  http://SteveSobol.com/
E: sjso ... @JustThe.net Snail: 22674 Motnocab Road, Apple Valley, CA 92307

</POST>



<POST>
<POSTER> mary </POSTER>
<POSTDATE> 2005-12-11T12:52:00 </POSTDATE>
Email: mary &lt;m ... @freeshell.org&gt;


<QUOTE PREVIOUSPOST="
&gt; [snip Eicar signature]

&gt; You didn't attach it. If you had, I'm pretty sure Exim (running an ACL
&gt; plugged into ClamAV) would have caught it before it got to my Inbox. Clam
&gt; detects Eicar just fine. :&gt;

"/> :) I did receive two &quot;your message contains a virus&quot; replies. One was
a &quot;Panda GateDefender&quot;, sounds Windowsish.

<QUOTE PREVIOUSPOST="
&gt; What you did was include it inline in a text/plain MIME part in your message,
&gt; where it isn't likely that it could do any harm even if it *was* a real
&gt; virus.

"/>&lt;nods&gt; real harm/mass traffic not intended

-m

</POST>



<POST>
<POSTER> Andrew - Supernews </POSTER>
<POSTDATE> 2005-12-11T03:15:00 </POSTDATE>
Email: &quot;Andrew - Supernews&quot;&lt;and ... @supernews.net&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;&gt;&gt;&gt;&quot;Douglas&quot; == Douglas Otis &lt;d ... @mail-abuse.org&gt; writes:

"/>&gt;&gt; BATV doesn't help you if the problem is SMTP transaction volume,
&gt;&gt; any more than a firewall will help you cope with a saturated
&gt;&gt; network link.

Douglas&gt; Your statement regarding BATV is not correct however. There
Douglas&gt; are two ways BATV reduces SMTP transaction volume when
Douglas&gt; dealing with forged DSNs.

When you're dealing with 30 million incoming DSNs (this is not a
hypothetical figure), being able to reject them all at RCPT TO is
not much help.

I don't see why I should have to engineer my mail server to handle
5,000 times its expected workload just to accomodate all the bozos who
accept-and-bounce, uncontrolled backscatter, &quot;sender verification&quot;,
C/R, and all the other cost-shifting methods out there.

--
Andrew, Supernews
http://www.supernews.com

</POST>



<POST>
<POSTER> Micheal Patterson </POSTER>
<POSTDATE> 2005-12-11T05:53:00 </POSTDATE>
Email: &quot;Micheal Patterson&quot;&lt;mich ... @tsgincorporated.com&gt;


<QUOTE PREVIOUSPOST="
----- Original Message -----
From: &quot;Douglas Otis&quot;&lt;d ... @mail-abuse.org&gt;
To: &quot;Andrew - Supernews&quot;&lt;and ... @supernews.net&gt;

Cc: &lt;n ... @merit.edu&gt;
Sent: Saturday, December 10, 2005 3:54 PM
Subject: Re: SMTP store and forward requires DSN for integrity

&gt; On Sat, 2005-12-10 at 17:37 +0000, Andrew - Supernews wrote:

&gt;&gt; BATV doesn't help you if the problem is SMTP transaction volume, any
&gt;&gt; more than a firewall will help you cope with a saturated network
&gt;&gt; link.

&gt; I agree with most of your statements. AV filters should be done
&gt; within
&gt; the session when possible, etc.

&gt; Your statement regarding BATV is not correct however. There are two
&gt; ways BATV reduces SMTP transaction volume when dealing with forged
&gt; DSNs.

&quot;... BATV reduces SMTP transaction volume when dealing with forged
DSNs.&quot;

If malware detection systems would not generate a DSN to the originator
upon detection in the first place, there would be no need to reduce
those transactions as there would be no transactions to reduce. The
solution, to me, seems so simple, I must be overlooking something or not
comprehending fully what the issue truly is. I thought that the initial
problem was with AV mechanisms sending out DSN's to incorrect sender
addresses. Please, if I'm so far off base, would someone be so kind as
to email me off list and clear this up for me?

Honestly Doug, you do realize that your reluctance to stop the problem
at the source conveys to everyone on this list the impression that
you're only trying to gain support for your proposal don't you?

Let's take the malware and av scanners out of the picture for a moment.
There was a time, long ago, where malware didn't exist in the email
network. At that time, when a message was undeliverable, a DSN was sent
to the originator of the message. It happens. Typo's and such. No one
complained. Why? Because legitimate email, in order to function requires
a valid email address for both parties. Why would they falsify it if
they wish to communicate?

Now, let's look at it as of &quot;today&quot;.

If someone sends someone a virus, intentionally, it's main purpose is to
get to as many systems as it possibly can, as fast as it can to allow
the software to propagate before it's detected by AV software. Do you
REALLY think that the initial sender wishes to be told that he sent a
virus? Do you really believe he/she wishes to even be known or contacted
by you in any way? Of course not. Then why do these systems still
attempt to send these notices? Well after all logical reasoning has
indicated that the sender is forged. The software of today has no way of
knowing if the originating system is the actual system that's introduced
it into the wild or a carrier. It has no way to validate the email
address of the sender. Can BATV correct this? Possibly. But at what cost
Doug? How much will it cost them to get the latest and greatest so that
they can implement BATV? How much down time will they have to deal with
to implement it? Multiply that by the millions of mta's around the
globe. Now, you tell me Doug, which is easier for everyone to do?
Upgrade/update their mta's around the world or have those few AV
detection vendors recode their software? I don't know about you, but if
what little information I've found on BATV is current, most folks will
have to switch to Exim or NetQmail just to get it to work currently.
There's a lot of postfix and sendmail networks out there that may not
want to switch. What happens to them?

Mike P.

"/>
</POST>



<POST>
<POSTER> Suresh Ramasubramanian </POSTER>
<POSTDATE> 2005-12-11T06:28:00 </POSTDATE>
Email: Suresh Ramasubramanian &lt;ops.li ... @gmail.com&gt;



<QUOTE PREVIOUSPOST="
On 12/11/05, Micheal Patterson &lt;mich ... @tsgincorporated.com&gt; wrote:
&gt; If malware detection systems would not generate a DSN to the originator
&gt; upon detection in the first place, there would be no need to reduce
&gt; those transactions as there would be no transactions to reduce. The

"/> That is a big if.

No shortage of broken software / appliance etc products put out by
different vendors

Even if they do introduce patches for current versions or release new
versions that dont backscatter to spoofing viruses, there's a huge
installed base of crap old versions of this stuff.

So, fixing that lot is not going to be easy.

Sending BATV signed email out and accepting bounces to BATV'd
addresses does tend to make sense in a limited set of use cases (IF
you send email only from a single server / set of servers, and control
the sending client . geeks with pine on *bsd or webmail service
providers, or mailing list services that anyway do VERP)

Upgrade MTAs around the world? Which MTAs around the world receive
bounces bound for your domain, and to your servers? And which MTAs
send legitimately send out email with your domain? If you are SURE
that all that is covered, try BATV and it will work rather well for
you. If you aren't - dont bother about it.

--
Suresh Ramasubramanian (ops.li ... @gmail.com)

</POST>



<POST>
<POSTER> Rich Kulawiec </POSTER>
<POSTDATE> 2005-12-11T08:47:00 </POSTDATE>
Email: Rich Kulawiec &lt;r ... @gsp.org&gt;


I agree with nearly all of your analysis, but want to add
a few small points of my own.

<QUOTE PREVIOUSPOST="
&gt; Can BATV correct this? Possibly.

"/> After reading further and thinking about it: I believe the
answer isn't &quot;possibly&quot;, but &quot;almost certainly not&quot;.

Consider the ~100M zombies (hijacked Windows systems) out there.
Mail traffic emitted by any malware resident on them is externally
indistinguishable from mail traffic emitted by their former owners
(operating under the misconception that it's still &quot;their&quot; computer).

Nos suppose for a moment that we had Email Magic Bullet Technology
(EMBT) which enabled us to trace any/all messages back to their origination
point. And suppose that 100,000 sites out there (using some form
of reliable malware detection) independently using EMBT conclude that
they have received copies of the Microsoft Windows virus du jour from
u ... @example.com at IP address 1.2.3.4. Thus all 100,000 sites are
now in a position, if they wish, to emit a DSN addressed to u ... @example.com
stating &quot;you have virus blah blah version blah blah&quot; etc.

My first observation is that emitting these DSNs, even *with* EMBT,
is a pointless exercise. Doing so increases, yet again, the volume
of useless mail traffic traversing the Internet. It's just more
self-promoting spam from AV vendors -- it's not like anyone actually
_reads_ this stuff. And even if they did: who's going to read
100,000 messages?

My second observation is that the combined volume of these DSNs may
constitute a rather effective DDoS on example.com's MXs.

My third observation is that such DDoS attacks could easily be redirected
against third party mail servers by manipulation of MX records.

4. (I got tired of saying &quot;my Nth observation&quot;) I'm beginning to
conclude that any technology which causes A, in response to traffic
from B, to generate traffic to C, is probably not a good idea.

5. Keep in mind that malware resident on a hijacked system is in complete
control of the box and thus has access to any cryptographic keys in use
as well as any incoming mail being retrieved with POP/IMAP. So even if
we presume the existence of a clueful and attentive user (then why is
the box in a hijacked state?) there is no guarantee that the DSNs will
actually be presented to the user.

6. How is a recipient of a DSN to know that it's authentic? After all,
the fact that EMBT enables someone to generate a DSN in response to
received virus-contaminated traffic doesn't prevent anyone else from
generating a DSN in response to...nothing. Consider a piece of malware
which generates such DSNs and its impact on an EMBT.

7. All of the problems cited above become much more interesting if
the hijacked box isn't an end-user system, but a mail server.

8. (similar to observation 4) Adding more positive feedback loops
to an Internet-wide mail system that already carries far too much
junk traffic is a bad move. We need to dampen, not amplify.

---Rsk

</POST>



<POST>
<POSTER> Michael.Dil ... @btradianz.com </POSTER>
<POSTDATE> 2005-12-12T06:08:00 </POSTDATE>
Email: Michael.Dil ... @btradianz.com


<QUOTE PREVIOUSPOST="
&gt;&gt; This assumes all messages are rejected within the SMTP session.

&gt; Yes, exactly and the point several of us have been making is that
&gt; this is (a) easy (well, provided you're using a quality MTA; if not,
&gt; then switch to one) (b) running a sane mail system (c) fast
&gt; (d) resource-friendly and
&gt;(e) most important of all, the _only_ way to
&gt; avoid sending UBE in response to forgeries (which are not going away
&gt; any time soon or quite possibly ever).

"/> Not quite the only way. If a postprocessing step is needed,
it is trivial for the SMTP server to record any return path info
that it knows in order for the post-processor to be able to
send DSN's as accurately as the SMTP server itself.

What we have here is yet another failure of imagination.

--Michael Dillon

</POST>



<POST>
<POSTER> Per Heldal </POSTER>
<POSTDATE> 2005-12-12T07:44:00 </POSTDATE>
Email: &quot;Per Heldal&quot;&lt;hel ... @eml.cc&gt;


On Mon, 12 Dec 2005 11:08:14 +0000, Michael.Dil ... @btradianz.com said:
[snip]

<QUOTE PREVIOUSPOST="

&gt; Not quite the only way. If a postprocessing step is needed,
&gt; it is trivial for the SMTP server to record any return path info
&gt; that it knows in order for the post-processor to be able to
&gt; send DSN's as accurately as the SMTP server itself.

&gt; What we have here is yet another failure of imagination.

"/> Has anybody claimed that post-processing within the SMTP-server is
better than postprocessing done elsewhere? The issue was
in-line-processing vs post-processing.

No information you can collect from the SMTP-session or elsewhere can
ever compete with the accuracy in notification gained if you reject the
message in-line and leave the responsibility for sender-notification
with the sending MTA.

//per
--
Per Heldal
hel ... @eml.cc

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-12T07:55:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt;&gt; This assumes all messages are rejected within the SMTP session.

&gt;&gt; Yes, exactly and the point several of us have been making is that
&gt;&gt; this is (a) easy (well, provided you're using a quality MTA; if not,
&gt;&gt; then switch to one) (b) running a sane mail system (c) fast
&gt;&gt; (d) resource-friendly and

&gt;&gt;(e) most important of all, the _only_ way to
&gt;&gt; avoid sending UBE in response to forgeries (which are not going away
&gt;&gt; any time soon or quite possibly ever).

&gt; Not quite the only way. If a postprocessing step is needed,
&gt; it is trivial for the SMTP server to record any return path info
&gt; that it knows in order for the post-processor to be able to
&gt; send DSN's as accurately as the SMTP server itself.

"/> The point is not to send a DSN *at all* for virus-based rejections, because
doing so even at the SMTP server level will still result in UBE to a forged
original sender address. The return path is *known* to be invalid, so it
doesn't matter where you put the DSN generator; it will still send spew to
an uninvolved third party.

Rejecting with 5xx during the SMTP transaction does not have this undesired
behavior. In that case, the connecting MTA, which should have a much better
idea of who sent the virus-worm instance, receives the rejection in-band.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Michael.Dil ... @btradianz.com </POSTER>
<POSTDATE> 2005-12-12T09:18:00 </POSTDATE>
Email: Michael.Dil ... @btradianz.com


<QUOTE PREVIOUSPOST="
&gt; No information you can collect from the SMTP-session or elsewhere can
&gt; ever compete with the accuracy in notification gained if you reject the
&gt; message in-line and leave the responsibility for sender-notification
&gt; with the sending MTA.

"/> On the other hand, sending the DSNs back to the sending MTA
is not UBE because a 3rd party is not involved. Of course,
the sending MTA may not accept incoming sessions and your
queues may fill. But, if you record the MTA that passed
you the message, then your post-processing applications have
a right to send whatever notifications they want to that
MTA owner. The MTA owner *IS* directly involved in the
incident in question since the SMTP session originated
on their server. The owner can take direct action to stop
the virus transmissions by filtering, changing server
config, stopping the source or setting up an ACL to block
rogue mail servers on their network.

This whole discussion centered around the fact that
innocent 3rd parties with no ability to act, were being
sent large volumes of notifications. Once you remove the
innocent 3rd party from the equation, the shape of the
problem is quite different.

I agree that notices should not be sent to addresses that
are likely to be forged because then innocent 3rd parties
are being spammed. However that does not mean that all
notifications are bad.

--Michael Dillon

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-12T09:50:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; No information you can collect from the SMTP-session or elsewhere can
&gt;&gt; ever compete with the accuracy in notification gained if you reject the
&gt;&gt; message in-line and leave the responsibility for sender-notification
&gt;&gt; with the sending MTA.

&gt; On the other hand, sending the DSNs back to the sending MTA

"/> That is contradictory. The sending MTA is known to be presenting a forged
return path, but a DSN is defined as being sent to the presented sender
address at the original MTA location. Thus any such notifications are not
DSNs by definition. (Read RFC1894 for context, and note that virus-worms do
not implement RFC1891 ORCPT -- nor should you ever expect them to do so.)

In the case of virus-worm spew, there is better than 99% chance that there
is no inbound MTA on port 25 of the connecting host. What's the point of
generating an illegitimate DSN if no one will see it anyway?

Again, we circle back around to 5xx in-band errors as the only way, that is
usable in non-theoretical environments today, to provide virus rejection
notifications. In lieu of rejecting in-band, an admin of such a broken
product should follow a two-step process:

1. Drop viruses into the bit bucket without notification; and

2. Look for a product that can reject in-band, and switch to it.

The days of multihop MTAs are coming to a close. In-band error signaling is
used by nearly every other protocol commonly used on the Internet today;
SMTP shouldn't be considered all that different anymore. The MUA and MDA
leaf roles have clearly defined separation from the MTA infrastructure, and
MTA-to-MTA communication should be perfectly capable of in-band error
signaling in the modern Internet.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Per Heldal </POSTER>
<POSTDATE> 2005-12-12T09:50:00 </POSTDATE>
Email: &quot;Per Heldal&quot;&lt;hel ... @eml.cc&gt;


On Mon, 12 Dec 2005 14:18:07 +0000, Michael.Dil ... @btradianz.com said:
[snip]

<QUOTE PREVIOUSPOST="
&gt; This whole discussion centered around the fact that
&gt; innocent 3rd parties with no ability to act, were being
&gt; sent large volumes of notifications. Once you remove the
&gt; innocent 3rd party from the equation, the shape of the
&gt; problem is quite different.

&gt; I agree that notices should not be sent to addresses that
&gt; are likely to be forged because then innocent 3rd parties
&gt; are being spammed. However that does not mean that all
&gt; notifications are bad.

"/> It still doesn't make sense to send notification in any form other than
a &quot;5xx stuff your malware...&quot; response. Any MTA-admin with half a clue
seeing lots of such in the logs for outbound messages should know what
to do.

//per
--
Per Heldal
hel ... @eml.cc

</POST>



<POST>
<POSTER> Stephen Sprunk </POSTER>
<POSTDATE> 2005-12-12T12:61:00 </POSTDATE>
Email: &quot;Stephen Sprunk&quot;&lt;step ... @sprunk.org&gt;


Thus spake &quot;Per Heldal&quot;&lt;hel ... @eml.cc&gt;

<QUOTE PREVIOUSPOST="
&gt; On Mon, 12 Dec 2005 14:18:07 +0000, Michael.Dil ... @btradianz.com said:
&gt; [snip]
&gt;&gt; This whole discussion centered around the fact that
&gt;&gt; innocent 3rd parties with no ability to act, were being
&gt;&gt; sent large volumes of notifications. Once you remove the
&gt;&gt; innocent 3rd party from the equation, the shape of the
&gt;&gt; problem is quite different.

&gt;&gt; I agree that notices should not be sent to addresses that
&gt;&gt; are likely to be forged because then innocent 3rd parties
&gt;&gt; are being spammed. However that does not mean that all
&gt;&gt; notifications are bad.

&gt; It still doesn't make sense to send notification in any form other
&gt; than a &quot;5xx stuff your malware...&quot; response. Any MTA-admin with
&gt; half a clue seeing lots of such in the logs for outbound messages
&gt; should know what to do.

"/> You think they'll notice, much less act on those logs?

The sending MTA, provided it's not the malware or spam software itself, will
simply read the in-band 5xx and send a DSN to the forged originator. This
moves the error closer to the source, but the result is still that the
innocent third party still gets a DSN for mail they didn't send. I fail to
see how this is a meaningful improvement.

S

Stephen Sprunk &quot;God does not play dice.&quot; --Albert Einstein
CCIE #3723 &quot;God is an inveterate gambler, and He throws the
K5SSS dice at every possible opportunity.&quot; --Stephen Hawking

</POST>



<POST>
<POSTER> Todd Vierling </POSTER>
<POSTDATE> 2005-12-12T01:49:00 </POSTDATE>
Email: Todd Vierling &lt;t ... @duh.org&gt;


<QUOTE PREVIOUSPOST="
&gt;&gt; It still doesn't make sense to send notification in any form other
&gt;&gt; than a &quot;5xx stuff your malware...&quot; response.
&gt; The sending MTA, provided it's not the malware or spam software itself, will
&gt; simply read the in-band 5xx and send a DSN to the forged originator.

"/> The majority of worms currently try to do direct-to-MX delivery, making this
point moot.

On the flip side, as to the &quot;secondary MX issue&quot;, I won't comment but to say
this: If the primary MX will reject mail for which the secondary MX will
not, then wormspew is just one of many of the secondary MX's problems.
(The problems with using &quot;blind&quot; secondary MXs in today's world have been
discussed elsewhere at great length.)

Now, a few worms are getting smarter about it by using the upstream's SMTP
server. While it is likely true that this will still cause DSNs...

<QUOTE PREVIOUSPOST="
On Mon, 12 Dec 2005, Stephen Sprunk wrote:
&gt; This moves the error closer to the source, but the result is still that
&gt; the innocent third party still gets a DSN for mail they didn't send. I
&gt; fail to see how this is a meaningful improvement.

"/> ...it does put the blame much closer to home -- as the DSN generator is very
likely to be the same provider whose downlinks (often broadband home users)
have been infected. The clustick can then be applied to folks who should be
more capable of stopping the problem children, and escalation (if needed)
will be more likely to attract the attention of the correct people. It also
becomes a much bigger argument for proper implementation of SMTP AUTH at
that point.

--
-- Todd Vierling &lt;t ... @duh.org&gt;&lt;t ... @pobox.com&gt;&lt;t ... @vierling.name&gt;

</POST>



<POST>
<POSTER> Matt Sergeant </POSTER>
<POSTDATE> 2005-12-12T02:35:00 </POSTDATE>
Email: Matt Sergeant &lt;mserge ... @messagelabs.com&gt;



<QUOTE PREVIOUSPOST="
On 10 Dec 2005, at 16:54, Douglas Otis wrote:
&gt; The BATV is a few lines of code that adds a private tag with a time
&gt; limit set in days. BATV helps dramatically by eliminating the DATA
&gt; phase
&gt; and all that is involved in handling messages. In addition, once BATV
&gt; becomes more widely deployed, the DSN refusal offers an alert about
&gt; accepting more such messages from that IP address.

&gt; BATV will make forged DSNs a thing of the past, irrespective of where a
&gt; recipient list is checked, an AV or SPAM filter is added, etc.

"/> And BATV will never be widely deployed because it breaks every single
system out there that keys off the return path. And there are a lot of
these systems.

Matt.

______________________________________________________________________
This email has been scanned by the MessageLabs Email Security System.
For more information please visit  http://www.messagelabs.com/email
______________________________________________________________________

</POST>



<POST>
<POSTER> Matt Sergeant </POSTER>
<POSTDATE> 2005-12-12T04:33:00 </POSTDATE>
Email: Matt Sergeant &lt;mserge ... @messagelabs.com&gt;



<QUOTE PREVIOUSPOST="
On 12 Dec 2005, at 15:50, John Levine wrote:
&gt;&gt; And BATV will never be widely deployed because it breaks every single
&gt;&gt; system out there that keys off the return path. And there are a lot
&gt;&gt; of these systems.

&gt; I keep hearing that, but other than a few ezmlm lists and the
&gt; occasional tired fax gateway, I never run into them. Where are they?

"/> I can't enumerate them all for you - I don't know them all. That's the
point though - you can't know all the systems you may be breaking by
changing the way your MAIL FROM works.

Here's a few that I've told you about before:

Whitelist/Blacklist entries
Quarantine systems
Anything based on .qmail files
Some auto-forwarders
Auto-responders

Now you can potentially whitelist around these issues (to some extent),
but while that works for geek mail systems it doesn't scale up very
well. I know you (personally) whitelist around some problem systems in
your implementation but can you expect Grandma to do that?

Matt.

______________________________________________________________________
This email has been scanned by the MessageLabs Email Security System.
For more information please visit  http://www.messagelabs.com/email
______________________________________________________________________

</POST>



</TEXT>
</BODY>
</DOC>
