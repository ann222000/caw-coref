<DOC>
<DOCID> eng-NG-31-135589-8597380 </DOCID>
<DOCTYPE SOURCE="usenet"> USENET TEXT </DOCTYPE>
<DATETIME> 2007-08-03T11:33:00 </DATETIME>
<BODY>
<HEADLINE>
Why Fortran?
</HEADLINE>
<TEXT>
<POST>
<POSTER> technohipp...@gmail.com </POSTER>
<POSTDATE> 2007-08-03T11:33:00 </POSTDATE>
As my subject headline states.  Why does anyone still use Fortran for
anything?
</POST>
<POST>
<POSTER> hel...@astro.multiCLOTHESvax.de (Phillip Helbig---remove CLOTHES to reply) </POSTER>
<POSTDATE> 2007-08-03T11:45:00 </POSTDATE>
In article &lt;1186155206.735515.136 ... @57g2000hsv.googlegroups.com&gt;,

<QUOTE PREVIOUSPOST="
technohipp ... @gmail.com writes:
&gt; As my subject headline states.  Why does anyone still use Fortran for
&gt; anything?
">

It is the best language for numerical work.

It is one of the most understandable languages for any kind of work.

There is much old code written in Fortran which continues to be used,
not just the compiled code but the source code.

It gains new features every few years (i.e. is not a dead language).

Good compilers exist for most platforms.

Note that your question already contains a judgement: the word &quot;still&quot;.
This implies that you think that Fortran is obsolete.  If so, why do you
think that?
</POST>
<POST>
<POSTER> Gordon Sande &lt;g.sa...@worldnet.att.net&gt; </POSTER>
<POSTDATE> 2007-08-03T11:50:00 </POSTDATE>
On 2007-08-03 12:33:26 -0300, technohipp ... @gmail.com said:

<QUOTE PREVIOUSPOST="
&gt; As my subject headline states.  Why does anyone still use Fortran for
&gt; anything?
">

Some appear to use it for trolling!

Others use it for serious work. They tend to not be recent and well
indoctrinated graduates of fashion conscious computer science courses.
Some are even refugees from other languages who note that Fortran
has a modern standard that offers many useful features. The fashion
conscious seem to be stuck in 1966. But then keeping up to date and
correct is not always fashionable in all circles.

But then forecasting the weather is not fashionable even if very useful.
Or noting were seismic testing suggests one might find petroleum deposits.
Or any other of the old fashioned hard applications of serious computing.

It is probably fair to say that Fortran is not the first choice for setting
up a web store but that is likely to be only a short lived fashion. So
much for being TechnoHippy. Just useful.
</POST>
<POST>
<POSTER> hel...@astro.multiCLOTHESvax.de (Phillip Helbig---remove CLOTHES to reply) </POSTER>
<POSTDATE> 2007-08-03T11:54:00 </POSTDATE>
In article &lt;2007080312502075249-gsande@worldnetattnet&gt;, Gordon Sande

<QUOTE PREVIOUSPOST="
&lt;g.sa ... @worldnet.att.net&gt; writes:
&gt; It is probably fair to say that Fortran is not the first choice for setting
&gt; up a web store but
">

I doubt that...

<QUOTE PREVIOUSPOST="
&gt; that is likely to be only a short lived fashion.
">

...and that.

Basically, a web store runs a web server which executes scripts,
possibly in connection with a database.  There is no reason not to write
those scripts in Fortran.
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-03T12:01:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
technohipp ... @gmail.com wrote:
&gt; As my subject headline states.  Why does anyone still use Fortran for
&gt; anything?
">

And why not, pray tell?  :)

--
</POST>
<POST>
<POSTER> Beliavsky &lt;beliav...@aol.com&gt; </POSTER>
<POSTDATE> 2007-08-03T12:07:00 </POSTDATE>
On Aug 3, 11:54 am, hel ... @astro.multiCLOTHESvax.de (Phillip Helbig---
remove CLOTHES to reply) wrote:

<QUOTE PREVIOUSPOST="
&gt; In article &lt;2007080312502075249-gsande@worldnetattnet&gt;, Gordon Sande

&gt; &lt;g.sa ... @worldnet.att.net&gt; writes:
&gt; &gt; It is probably fair to say that Fortran is not the first choice for setting
&gt; &gt; up a web store but

&gt; I doubt that...

&gt; &gt; that is likely to be only a short lived fashion.

&gt; ...and that.

&gt; Basically, a web store runs a web server which executes scripts,
&gt; possibly in connection with a database.  There is no reason not to write
&gt; those scripts in Fortran.
">

Except that if you are using PHP or Python etc., the program, or at
least large parts of it, has probably already been written.

One reason people use Fortran is the numerical libraries that exist
for it, but many programmers have a greater need for regular
expression parsing (for example) than numerical libraries, and for
such tasks, many other languages have better library support than
Fortran.
</POST>
<POST>
<POSTER> Gordon Sande &lt;g.sa...@worldnet.att.net&gt; </POSTER>
<POSTDATE> 2007-08-03T12:16:00 </POSTDATE>
On 2007-08-03 12:54:15 -0300, hel ... @astro.multiCLOTHESvax.de (Phillip
Helbig---remove CLOTHES to reply) said:

<QUOTE PREVIOUSPOST="
&gt; In article &lt;2007080312502075249-gsande@worldnetattnet&gt;, Gordon Sande
&gt; &lt;g.sa ... @worldnet.att.net&gt; writes:

&gt;&gt; It is probably fair to say that Fortran is not the first choice for setting
&gt;&gt; up a web store but

&gt; I doubt that...

&gt;&gt; that is likely to be only a short lived fashion.

&gt; ...and that.

&gt; Basically, a web store runs a web server which executes scripts,
&gt; possibly in connection with a database.  There is no reason not to write
&gt; those scripts in Fortran.
">

First choice can mean:

1. most popular

2. the choice of a particular individual for good reasons

Choosing meaning 2 because it has merit does not invalidate meaning
1 as illustrated by the original poster TechnoHippyXX. (My corrected
typo of poser may be more accurate!)

That web stores may be a long lived application does not mean that they will
be fashionable during that long life. I would expect that a programming
language more directed at text processing would prove a better choice
for many. Text processing in C is more error prone than curent Fortrans.
Neither is a really good choice even if C is currently &quot;popular&quot; for the
task. If the store is a &quot;one off side issue&quot; then using a language that
the programmer is comfortable with would make that language a suitable
choice.

(I expect that there may be &quot;false friend&quot; translation issues behind
a quite reasonable technical comment.)
</POST>
<POST>
<POSTER> &quot;Dr Ivan D. Reid&quot; &lt;Ivan.R...@brunel.ac.uk&gt; </POSTER>
<POSTDATE> 2007-08-03T15:31:00 </POSTDATE>
On Fri, 03 Aug 2007 16:16:04 GMT, Gordon Sande &lt;g.sa ... @worldnet.att.net&gt;
wrote in &lt;2007080313160416807-gsande@worldnetattnet&gt;:

<QUOTE PREVIOUSPOST="
&gt; That web stores may be a long lived application does not mean that they will
&gt; be fashionable during that long life. I would expect that a programming
&gt; language more directed at text processing would prove a better choice
&gt; for many.
">

Whatever happened to SNOBOL?

--
Ivan Reid, School of Engineering &amp; Design, _____________  CMS Collaboration,
Brunel University.    Ivan.Reid@[brunel.ac.uk|cern.ch]    Room 40-1-B12, CERN
KotPT -- &quot;for stupidity above and beyond the call of duty&quot;.
</POST>
<POST>
<POSTER> Dan Nagle &lt;danna...@verizon.net&gt; </POSTER>
<POSTDATE> 2007-08-03T15:55:00 </POSTDATE>
Hello,

Dr Ivan D. Reid wrote:

<QUOTE PREVIOUSPOST="
&gt;    Whatever happened to SNOBOL?
">

Well, Griswold/Poage/Polonsky is still on _my_ bookshelf!

--

Dan Nagle
Purple Sage Computing Solutions, Inc.
</POST>
<POST>
<POSTER> Gib Bogle &lt;bo...@ihug.too.much.spam.co.nz&gt; </POSTER>
<POSTDATE> 2007-08-03T16:26:00 </POSTDATE>
Why do you ask?
</POST>
<POST>
<POSTER> &quot;John H. Lindsay&quot; &lt;jlin_DELETE_THIS_SPAM_ZOT_d...@kingston.net&gt; </POSTER>
<POSTDATE> 2007-08-05T10:38:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Dan Nagle wrote:
&gt; Hello,

&gt; Dr Ivan D. Reid wrote:

&gt;&gt;     Whatever happened to SNOBOL?

&gt; Well, Griswold/Poage/Polonsky is still on _my_ bookshelf!
">

Ha !  Still available.  Still viable.  Still vibrant.  See:

http://www.SNOBOL4.com

for all sorts of stuff and links.  And there's more brewing ...

John.
</POST>
<POST>
<POSTER> Dave Seaman &lt;dsea...@no.such.host&gt; </POSTER>
<POSTDATE> 2007-08-05T12:18:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
On Sun, 05 Aug 2007 10:38:14 -0400, John H. Lindsay wrote:
&gt; Dan Nagle wrote:
&gt;&gt; Hello,

&gt;&gt; Dr Ivan D. Reid wrote:

&gt;&gt;&gt;     Whatever happened to SNOBOL?

&gt;&gt; Well, Griswold/Poage/Polonsky is still on _my_ bookshelf!

&gt; Ha !  Still available.  Still viable.  Still vibrant.  See:
&gt; http://www.SNOBOL4.com
&gt; for all sorts of stuff and links.  And there's more brewing ...
">

Should be &lt; http://www.snobol4.org/ &gt;.

--
Dave Seaman
Oral Arguments in Mumia Abu-Jamal Case heard May 17
U.S. Court of Appeals, Third Circuit
&lt; http://www.abu-jamal-news.com/ &gt;
</POST>
<POST>
<POSTER> Quadibloc &lt;jsav...@ecn.ab.ca&gt; </POSTER>
<POSTDATE> 2007-08-05T13:48:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
technohipp ... @gmail.com wrote:
&gt; As my subject headline states.  Why does anyone still use Fortran for
&gt; anything?
">

Your question might seem quite legitimate at first glance.

After all, the last widely-used version of FORTRAN, for which you will
find textbooks lying around in thrift shops, is FORTRAN 77.

Newer versions of FORTRAN exist, Fortran 90, Fortran 95, and, IIRC,
Fortran 2003. But most people haven't heard of them.

If you are programming for a numerical calculation, Fortran has some
advantages.

Compared to C, you don't have to begin your program with

#include &lt;math.h&gt;

just because you want to use trig functions.

And Fortran includes 32-bit versions of all the math routines, while C
has *only* double-precision floating-point. So, in Fortran, you can
use just the precision you need, and have your program run faster. (Of
course, on some hardware, some of this advantage is lost.)

Computers designed for numerical problems, like CRAY supercomputers,
come *with* Fortran compilers, instead of, or at least in addition to,
compilers for C or Pascal.

John Savard
</POST>
<POST>
<POSTER> Tim Prince &lt;timothypri...@sbcglobal.net&gt; </POSTER>
<POSTDATE> 2007-08-05T17:26:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Quadibloc wrote:
&gt; technohipp ... @gmail.com wrote:
&gt;&gt; As my subject headline states.  Why does anyone still use Fortran for
&gt;&gt; anything?

&gt; Your question might seem quite legitimate at first glance.

&gt; After all, the last widely-used version of FORTRAN, for which you will
&gt; find textbooks lying around in thrift shops, is FORTRAN 77.

&gt; Newer versions of FORTRAN exist, Fortran 90, Fortran 95, and, IIRC,
&gt; Fortran 2003. But most people haven't heard of them.
">

Some people think they are using C, but haven't heard of C89, much less C99.

<QUOTE PREVIOUSPOST="
&gt; If you are programming for a numerical calculation, Fortran has some
&gt; advantages.

&gt; Compared to C, you don't have to begin your program with

&gt; #include &lt;math.h&gt;

&gt; just because you want to use trig functions.

&gt; And Fortran includes 32-bit versions of all the math routines, while C
&gt; has *only* double-precision floating-point.
">

So you haven't heard of C89 or C99 either.  Not quite fair to advocate
f90 or newer without considering standard C or C++.  True, &lt;tgmath.h&gt;
support (resembling f77 generic math functions) is seldom counted upon.

<QUOTE PREVIOUSPOST="
&gt;So, in Fortran, you can
&gt; use just the precision you need, and have your program run faster. (Of
&gt; course, on some hardware, some of this advantage is lost.)
">

I don't know of any difference here, compared with C.

<QUOTE PREVIOUSPOST="
&gt; Computers designed for numerical problems, like CRAY supercomputers,
&gt; come *with* Fortran compilers, instead of, or at least in addition to,
&gt; compilers for C or Pascal.
">

Yes, Fortran remains more widely available than Pascal.  Wasn't that a
while ago, like before C89 or f90?
</POST>
<POST>
<POSTER> Terence &lt;tbwri...@cantv.net&gt; </POSTER>
<POSTDATE> 2007-08-05T18:45:00 </POSTDATE>
I think a fair answer to the original question is that
1) Fortran was designed to be readable as algebraic instructions to
perform an algorithm (as was Algol).
2) Fortran compilere are easy to find and F77 compiler more so, and
F77 source more easy to write.
3) There is an abundance of tested source code available which could
be extended to cover more scope or modified to be a faster solution to
a simpler subset of what the target objectives were.
</POST>
<POST>
<POSTER> Beliavsky &lt;beliav...@aol.com&gt; </POSTER>
<POSTDATE> 2007-08-05T19:39:00 </POSTDATE>
On Aug 5, 5:45 pm, Terence &lt;tbwri ... @cantv.net&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; I think a fair answer to the original question is that
&gt; 1) Fortran was designed to be readable as algebraic instructions to
&gt; perform an algorithm (as was Algol).
&gt; 2) Fortran compilere are easy to find and F77 compiler more so,
">

It is no longer true that Fortran 77 compilers are easier to find than
Fortran 90 and 95 compilers. With the possible exception of Open
Watcom, I don't know of F77 compilers still being supported and
enhanced. Gfortran is a usable F95 compiler, and g95 is reliable. Both
are free and run everywhere gcc does. Of course, all F95 compilers
will compile F77 code, with the exception of g95, which does not
handle at least one deleted feature (non-integer loop counters).
</POST>
<POST>
<POSTER> Quadibloc &lt;jsav...@ecn.ab.ca&gt; </POSTER>
<POSTDATE> 2007-08-05T19:53:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Tim Prince wrote:
&gt; So you haven't heard of C89 or C99 either.  Not quite fair to advocate
&gt; f90 or newer without considering standard C or C++.  True, &lt;tgmath.h&gt;
&gt; support (resembling f77 generic math functions) is seldom counted upon.
">

You're quite right - if I'm going to ask people to be fair to Fortran,
I should be fair to C!

<QUOTE PREVIOUSPOST="
&gt; Yes, Fortran remains more widely available than Pascal.  Wasn't that a
&gt; while ago, like before C89 or f90?
">

Pascal is certainly widely available for PCs - just buy Borland's
Delphi. Usually, the Fortran compiler will have been *written* in C,
though, so even for the supercomputers a C compiler is available.

John Savard
</POST>
<POST>
<POSTER> tho...@antispam.ham </POSTER>
<POSTDATE> 2007-08-06T06:06:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred writes:
&gt; Terence a écrit :
&gt;&gt; 2) Fortran compilere are easy to find and F77 compiler more so, and
&gt;&gt; F77 source more easy to write.
&gt; Disagree.

&gt; I prefer from far to write C code that F77 (not &quot;case&quot; aware,
&gt; indentation, etc...)
">

You can indent Fortran.  No advantage or disadvantage.  As for case
sensitivity, I greatly prefer NOT having case sensitivity.  Treating
Sum differently from sum is asking for programming errors.
</POST>
<POST>
<POSTER> Gordon Sande &lt;g.sa...@worldnet.att.net&gt; </POSTER>
<POSTDATE> 2007-08-06T12:31:00 </POSTDATE>
On 2007-08-06 13:02:25 -0300, fred &lt;fredantis ... @free.fr&gt; said:

<QUOTE PREVIOUSPOST="
&gt; tho ... @antispam.ham a écrit :

&gt;&gt; fred writes:

&gt;&gt;&gt; Terence a écrit :

&gt;&gt;&gt;&gt; 2) Fortran compilere are easy to find and F77 compiler more so, and
&gt;&gt;&gt;&gt; F77 source more easy to write.

&gt;&gt;&gt; Disagree.

&gt;&gt;&gt; I prefer from far to write C code that F77 (not &quot;case&quot; aware,
&gt;&gt;&gt; indentation, etc...)

&gt;&gt; You can indent Fortran.  No advantage or disadvantage.
&gt; AFAIK you have to begin on column 6, not above 73, etc.
&gt; Painful.
">

You begin in column 7 with as many leading blanks as you care to
(subject to staying within col 72) in fixed form. Free form, which
has been standard as of Fortran 90, is as relaxed as they come.
The convention are safe under the &quot;telephone test&quot; in which you try
to discuss (debug) a listing over the phone withouut a common listing
in from of you. How do you pronounce Test, test and TEST when you
are in a hurray?

Long before C was around and keypunchs were the standard folks
found that adding those leading blanks were a drag so the &quot;real men&quot;
did not bother. And all the young men who think old still follow
those rules.

Coffee in the morning is used by some to wake up. Try it!

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt;&gt; As for case
&gt;&gt; sensitivity, I greatly prefer NOT having case sensitivity.  Treating
&gt;&gt; Sum differently from sum is asking for programming errors.
">
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-06T12:31:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
&gt; tho ... @antispam.ham a écrit :

&gt;&gt; fred writes:

&gt;&gt;&gt; Terence a écrit :
&gt;&gt;&gt;&gt; 2) Fortran compilere are easy to find and F77 compiler more so, and
&gt;&gt;&gt;&gt; F77 source more easy to write.
&gt;&gt;&gt; Disagree.

&gt;&gt;&gt; I prefer from far to write C code that F77 (not &quot;case&quot; aware,
&gt;&gt;&gt; indentation, etc...)
&gt;&gt; You can indent Fortran.  No advantage or disadvantage.
&gt; AFAIK you have to begin on column 6, not above 73, etc.
&gt; Painful.
">

Only if you insist on using compilers which are now some 30 years out of
date (F77-only as opposed to F90/F95).  Note that for all practical
purposes F77 syntax is valid F90/F95 as well so that if there is some
desire to constrain oneself to that subset (why anyone chooses to do so
is beyond my comprehension, but there seem to be some who do) it doesn't
prevent the use of free source form.

So, that is a totally artificial &quot;disadvantage&quot; at best imo...

--
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-06T12:33:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
&gt; tho ... @antispam.ham a écrit :

&gt; Another disadvantage:

&gt; In C, printing _correctly_ to stdout is far much easier.
">

What is the definition of _correctly_ that you think Fortran doesn't
accomplish and what, specifically, comprises &quot;easier&quot; and as compared to
what?

--
</POST>
<POST>
<POSTER> Paul van Delst &lt;Paul.vanDe...@noaa.gov&gt; </POSTER>
<POSTDATE> 2007-08-06T12:46:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
&gt; Terence &lt;tbwri ... @cantv.net&gt; a écrit :

&gt;&gt; 2) Fortran compilere are easy to find and F77 compiler more so, and
&gt;&gt; F77 source more easy to write.
&gt; Disagree.

&gt; I prefer from far to write C code that F77 (not &quot;case&quot; aware,
&gt; indentation, etc...)
">

I prefer to write C code than f77 too - and I've never written C code.

:o)

cheers,

paulv
</POST>
<POST>
<POSTER> tho...@antispam.ham </POSTER>
<POSTDATE> 2007-08-06T14:40:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred writes:
&gt;&gt;&gt; Terence a écrit :
&gt;&gt;&gt;&gt; 2) Fortran compilere are easy to find and F77 compiler more so, and
&gt;&gt;&gt;&gt; F77 source more easy to write.
&gt;&gt;&gt; Disagree.

&gt;&gt;&gt; I prefer from far to write C code that F77 (not &quot;case&quot; aware,
&gt;&gt;&gt; indentation, etc...)
&gt;&gt; You can indent Fortran.  No advantage or disadvantage.
&gt; AFAIK you have to begin on column 6, not above 73, etc.
&gt; Painful.
">

Like so many others who criticize Fortran unfairly, you're stuck in
the past.  Fortran statements can begin in column 1 and extend beyond
column 72.  Where have you been for the past decade?  Furthermore,
even with the old standard, you could STILL indent.

<QUOTE PREVIOUSPOST="
&gt;&gt; As for case
&gt;&gt; sensitivity, I greatly prefer NOT having case sensitivity.  Treating
&gt;&gt; Sum differently from sum is asking for programming errors.
">
</POST>
<POST>
<POSTER> tho...@antispam.ham </POSTER>
<POSTDATE> 2007-08-06T14:42:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred writes:
&gt; tho ... @antispam.ham a écrit :
">

You didn't quote any text of mine.  So why the attribution above?

<QUOTE PREVIOUSPOST="
&gt; Another disadvantage:

&gt; In C, printing _correctly_ to stdout is far much easier.
">

Define &quot;correctly&quot;.
</POST>
<POST>
<POSTER> &quot;John H. Lindsay&quot; &lt;jlin_DELETE_THIS_SPAM_ZOT_d...@kingston.net&gt; </POSTER>
<POSTDATE> 2007-08-06T15:24:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Dave Seaman wrote:
&gt; On Sun, 05 Aug 2007 10:38:14 -0400, John H. Lindsay wrote:
&gt;&gt; Dan Nagle wrote:
&gt;&gt;&gt; Hello,

&gt;&gt;&gt; Dr Ivan D. Reid wrote:

&gt;&gt;&gt;&gt;     Whatever happened to SNOBOL?
&gt;&gt;&gt; Well, Griswold/Poage/Polonsky is still on _my_ bookshelf!

&gt;&gt; Ha !  Still available.  Still viable.  Still vibrant.  See:

&gt;&gt; http://www.SNOBOL4.com

&gt;&gt; for all sorts of stuff and links.  And there's more brewing ...

&gt; Should be &lt; http://www.snobol4.org/ &gt;.
">

Both still there and they refer to each other.  The list of
links on the second reference is a good and extensive one.

John.
</POST>
<POST>
<POSTER> nos...@see.signature (Richard Maine) </POSTER>
<POSTDATE> 2007-08-06T18:42:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred &lt;fredantis ... @free.fr&gt; wrote:
&gt; PS: how do you write this in fortran (something very simple, yes,
&gt; and deals with printf):

&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);
">

I don't speak C well enough to understand that well without looking it
up, but I suspect the simplest and closest equivalent would be

print *, x, a, s

<QUOTE PREVIOUSPOST="
&gt; for (i=0; i&lt;10; i++)
&gt;   printf(&quot;%d &quot;, i);
&gt; printf(&quot;\n&quot;);
">

and

print *, [(i,i=0,10)]

--
Richard Maine                    | Good judgement comes from experience;
email: last name at domain . net | experience comes from bad judgement.
domain: summertriangle           |  -- Mark Twain
</POST>
<POST>
<POSTER> Beliavsky &lt;beliav...@aol.com&gt; </POSTER>
<POSTDATE> 2007-08-06T18:55:00 </POSTDATE>
On Aug 6, 6:42 pm, nos ... @see.signature (Richard Maine) wrote:

<QUOTE PREVIOUSPOST="
&gt; fred &lt;fredantis ... @free.fr&gt; wrote:
">

&lt;snip&gt;

<QUOTE PREVIOUSPOST="
&gt;   print *, x, a, s

&gt; &gt; for (i=0; i&lt;10; i++)
&gt; &gt;   printf(&quot;%d &quot;, i);
&gt; &gt; printf(&quot;\n&quot;);

&gt; and

&gt;   print *, [(i,i=0,10)]
">

Should be

print *, [(i,i=0,9)]

.
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-06T21:52:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
">

...

<QUOTE PREVIOUSPOST="
&gt; PS: how do you write this in fortran (something very simple, yes,
&gt; and deals with printf):

&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);
">

...

Having seen what simple really looks like :) let me pose one that
stumped everyone in the Matlab group.  Matlab uses vectorized versions
of the C format strings.

The question was how to write values such as 1.234E-5 as 0.1234E-4?

--
</POST>
<POST>
<POSTER> &quot;Thierry B.&quot; &lt;t...@prout.stex&gt; </POSTER>
<POSTDATE> 2007-08-06T14:46:00 </POSTDATE>
--{ technohipp ... @gmail.com a plopé ceci: }--

<QUOTE PREVIOUSPOST="
&gt; As my subject headline states.  Why does anyone still use Fortran for
&gt; anything?
">

For the fun.

--
http://tontonth.free.fr/libsound77.html
</POST>
<POST>
<POSTER> &quot;Thierry B.&quot; &lt;t...@prout.stex&gt; </POSTER>
<POSTDATE> 2007-08-06T14:52:00 </POSTDATE>
--{ Gordon Sande a plopé ceci: }--

<QUOTE PREVIOUSPOST="
&gt; It is probably fair to say that Fortran is not the first choice for setting
&gt; up a web store
">

Mmmm, I'm working on that :)

--
&quot;All the things I really like to do are
either immoral, illegal, or fattening.&quot;
</POST>
<POST>
<POSTER> tho...@antispam.ham </POSTER>
<POSTDATE> 2007-08-07T06:20:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred writes:
&gt;&gt;&gt;&gt;&gt; Terence a écrit :
&gt;&gt;&gt;&gt;&gt;&gt; 2) Fortran compilere are easy to find and F77 compiler more so, and
&gt;&gt;&gt;&gt;&gt;&gt; F77 source more easy to write.
&gt;&gt;&gt;&gt;&gt; Disagree.

&gt;&gt;&gt;&gt;&gt; I prefer from far to write C code that F77 (not &quot;case&quot; aware,
&gt;&gt;&gt;&gt;&gt; indentation, etc...)
&gt;&gt;&gt;&gt; You can indent Fortran.  No advantage or disadvantage.
&gt;&gt;&gt; AFAIK you have to begin on column 6, not above 73, etc.
&gt;&gt;&gt; Painful.
&gt;&gt; Like so many others who criticize Fortran unfairly, you're stuck in
&gt;&gt; the past.  Fortran statements can begin in column 1 and extend beyond
&gt;&gt; column 72.  Where have you been for the past decade?  Furthermore,
&gt;&gt; even with the old standard, you could STILL indent.
&gt; Yes, I do discuss about f77.
">

Why discuss a standard nearly 30 years old?  Are you comparing it to
the C language of the same vintage?

<QUOTE PREVIOUSPOST="
&gt; And happily, I use F90 today.
">

Then why discuss the FORTRAN 77 standard?

<QUOTE PREVIOUSPOST="
&gt; But, well, I have no chance here, in a fortran newsgroup :-)

&gt; Maybe it's due to my lack of fortran knowledge (certainly),
&gt; but I can remember &quot;goto&quot;, &quot;format&quot; (the &quot;correctly&quot; is here: AFAIK,
&gt; once again, it is not possible to write something simply as I can do
&gt; in C with &quot;%g&quot; and so on), but maybe I'm wrong...
">

If that's a literal string, then in Fortran:

WRITE (*,*) &quot;%g&quot;

<QUOTE PREVIOUSPOST="
- Hide quoted text - - Show quoted text -
">

<QUOTE PREVIOUSPOST="
&gt; BTW, this newsgroup is very cool indeed, and I won't deal with that longer.
&gt; Closed.

&gt; Promised, if I have to struggle against fortran code, something I can
&gt; write easily in C, I'll go back to let you explain to me how can I do it
&gt; in fortran ;-)

&gt; Cheers,

&gt; PS: how do you write this in fortran (something very simple, yes,
&gt; and deals with printf):

&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);

&gt; or

&gt; for (i=0; i&lt;10; i++)
&gt;   printf(&quot;%d &quot;, i);
&gt; printf(&quot;\n&quot;);

&gt; ?
">

Ask someone who speaks fluent C.  I do not.
</POST>
<POST>
<POSTER> Dave Seaman &lt;dsea...@no.such.host&gt; </POSTER>
<POSTDATE> 2007-08-07T07:57:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
On Mon, 06 Aug 2007 15:24:45 -0400, John H. Lindsay wrote:
&gt; Dave Seaman wrote:
&gt;&gt; On Sun, 05 Aug 2007 10:38:14 -0400, John H. Lindsay wrote:
&gt;&gt;&gt; Dan Nagle wrote:
&gt;&gt;&gt;&gt; Hello,

&gt;&gt;&gt;&gt; Dr Ivan D. Reid wrote:

&gt;&gt;&gt;&gt;&gt;     Whatever happened to SNOBOL?
&gt;&gt;&gt;&gt; Well, Griswold/Poage/Polonsky is still on _my_ bookshelf!

&gt;&gt;&gt; Ha !  Still available.  Still viable.  Still vibrant.  See:

&gt;&gt;&gt; http://www.SNOBOL4.com

&gt;&gt;&gt; for all sorts of stuff and links.  And there's more brewing ...

&gt;&gt; Should be &lt; http://www.snobol4.org/ &gt;.
&gt; Both still there and they refer to each other.  The list of
&gt; links on the second reference is a good and extensive one.
&gt; John.
">

That seems to be the case now, but it wasn't when I tried it at the time.
I was redirected to some unrelated page.

--
Dave Seaman
Oral Arguments in Mumia Abu-Jamal Case heard May 17
U.S. Court of Appeals, Third Circuit
&lt; http://www.abu-jamal-news.com/ &gt;
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-07T09:05:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
Richard Maine wrote:
&gt; fred &lt;fredantis ... @free.fr&gt; wrote:

&gt;&gt; PS: how do you write this in fortran (something very simple, yes,
&gt;&gt; and deals with printf):

&gt;&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);

&gt; I don't speak C well enough to understand that well without looking it
&gt; up, but I suspect the simplest and closest equivalent would be

&gt;   print *, x, a, s
">

...

Certainly simplest, but perhaps closer literally (mostly depending on
the C rules vis a vis Fortran for the G edit descriptor behavior) would be

write(*,'(G D A)') x, a, s

Certainly not much more complicated if use default field and precision
as does fred's example...

--
</POST>
<POST>
<POSTER> Beliavsky &lt;beliav...@aol.com&gt; </POSTER>
<POSTDATE> 2007-08-07T10:30:00 </POSTDATE>
On Aug 7, 10:21 am, fred &lt;fredantis ... @free.fr&gt; wrote:

<QUOTE PREVIOUSPOST="
&gt; nos ... @see.signature (Richard Maine) a écrit :

&gt; &gt; fred &lt;fredantis ... @free.fr&gt; wrote:

&gt; &gt;&gt; PS: how do you write this in fortran (something very simple, yes,
&gt; &gt;&gt; and deals with printf):

&gt; &gt;&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);

&gt; &gt; I don't speak C well enough to understand that well without looking it
&gt; &gt; up, but I suspect the simplest and closest equivalent would be

&gt; &gt;   print *, x, a, s

&gt; No. :-)
&gt; For several reasons:

&gt; 1) I put one space char between each variable, not tab.
">

Fortran compilers may use one or more spaces between variables for
list-directed output, but I don't know of any that use tabs.

<QUOTE PREVIOUSPOST="
&gt; 2) Beyond a fixed number of column (I don't remember which one),
&gt; it jumps to the next line.

&gt; &gt;&gt; for (i=0; i&lt;10; i++)
&gt; &gt;&gt;   printf(&quot;%d &quot;, i);
&gt; &gt;&gt; printf(&quot;\n&quot;);

&gt; &gt; and

&gt; &gt;   print *, [(i,i=0,10)]

&gt; Same answer ;-)

&gt; PS: I use intel fortran compiler.
">

write (*,&quot;(1000(1x,:,i0))&quot;) [(i,i=0,10)]

prints integers with one space between them. The format string puts
1000 integers on a line before going to the next line.
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-07T10:44:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
&gt; dpb &lt;n ... @non.net&gt; a écrit :

&gt;&gt; write(*,'(G D A)') x, a, s
&gt; With gfortran:
&gt; At line 13 of file essai.f90
&gt; Fortran runtime error: Nonnegative width required in format
&gt; (G D A)

&gt;&gt; Certainly not much more complicated if use default field and precision
&gt;&gt; as does fred's example...
&gt; Your answer (the use of write()) is exactly what I call &quot;more
&gt; complicated&quot; (than in C) ;-)
">

Then use list directed formating and be even simpler.

I had forgotten that the zero-length field widths for other than integer
forms and character data are an extension (although I think maybe that
was an enhancement in F2003, I'm not sure???)

Either way, it's far simpler than the abomination that is printf in C... :)

imo, ymmv, $0.02, etc., etc., ..., of course

--
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-07T10:50:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
&gt; Beliavsky &lt;beliav ... @aol.com&gt; a écrit :

&gt;&gt; write (*,&quot;(1000(1x,:,i0))&quot;) [(i,i=0,10)]

&gt;&gt; prints integers with one space between them. The format string puts
&gt;&gt; 1000 integers on a line before going to the next line.
&gt; So... well, I'm convinced now.
&gt; Writing it in C is far much easier ! :-))
">

For some appropriate definition of &quot;easier&quot;... :)

Very little of C formatting is really easier than Fortran other than
stream i/o (before F2003 standardized it, anyway) imo.

It is mostly simply a case of what is familiar to one vis a vis the
other and as noted earlier in the thread easily degenerates into
&quot;language wars&quot; and religious issues.

imo, ymmv, $0.02, etc., ...

--
</POST>
<POST>
<POSTER> dpb &lt;n...@non.net&gt; </POSTER>
<POSTDATE> 2007-08-07T10:53:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred wrote:
&gt; tho ... @antispam.ham a écrit :

&gt;&gt; Then why discuss the FORTRAN 77 standard?
&gt; Because with F90, I'm still embarrassed with F77 features.
&gt; No more, no less.

&gt; But I repeat, it may be due to my lack of F90 knowledge.
">

Then one could always read the language reference manual and
programmers' guide accompanying your compiler and there are regular
threads asking for (and receiving) recommendations for appropriate texts
for given purposes and levels of entering expertise.

Investing in some time and learning might be far more productive than
casting stones at an unknown target w/ preconceived notions showing...

imo, ymmv, $0.02, etc., ...

--
</POST>
<POST>
<POSTER> nos...@see.signature (Richard Maine) </POSTER>
<POSTDATE> 2007-08-07T11:13:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
fred &lt;fredantis ... @free.fr&gt; wrote:
&gt; nos ... @see.signature (Richard Maine) a écrit :

&gt; &gt; fred &lt;fredantis ... @free.fr&gt; wrote:

&gt; &gt;&gt; PS: how do you write this in fortran (something very simple, yes,
&gt; &gt;&gt; and deals with printf):

&gt; &gt;&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);

&gt; &gt; I don't speak C well enough to understand that well without looking it
&gt; &gt; up, but I suspect the simplest and closest equivalent would be

&gt; &gt;   print *, x, a, s
&gt; No. :-)
&gt; For several reasons:

&gt; 1) I put one space char between each variable, not tab.

&gt; 2) Beyond a fixed number of column (I don't remember which one),
&gt; it jumps to the next line.
">

I was talking about being &quot;equivalent&quot;, which is to say having
comparable functionality - not matching character per character, which
is a completely different thing. I wouldn't expect different C compilers
to do that, at least for the real variable output.

As a matter of showing you how to do something simple and useful in
Fortran, I was interested in explaining; that's something I do. As an
artifical challenge and part of a language flame war, I am not
interested and will not participate. That's what I'm seeing here now.
Bye.

--
Richard Maine                    | Good judgement comes from experience;
email: last name at domain . net | experience comes from bad judgement.
domain: summertriangle           |  -- Mark Twain
</POST>
<POST>
<POSTER> David Thompson &lt;dave.thomps...@verizon.net&gt; </POSTER>
<POSTDATE> 2007-08-26T03:18:00 </POSTDATE>
<QUOTE PREVIOUSPOST="
On Tue, 07 Aug 2007 08:05:35 -0500, dpb &lt;n ... @non.net&gt; wrote:
&gt; Richard Maine wrote:
&gt; &gt; fred &lt;fredantis ... @free.fr&gt; wrote:
&gt; &gt;&gt; printf(&quot;%g %d %s\n&quot;, x, a, s);
&gt; &gt;   print *, x, a, s
&gt; Certainly simplest, but perhaps closer literally (mostly depending on
&gt; the C rules vis a vis Fortran for the G edit descriptor behavior) would be

&gt; write(*,'(G D A)') x, a, s
">

C %d is decimal-int, so G I A and probably better G I0 A .
(Especially to avoid confusion with the Angelina Jolie movie. &lt;G&gt;)

<QUOTE PREVIOUSPOST="
&gt; Certainly not much more complicated if use default field and precision
&gt; as does fred's example...
">

- formerly david.thompson1 || achar(64) || worldnet.att.net
</POST>
</TEXT>
</BODY>
</DOC>
